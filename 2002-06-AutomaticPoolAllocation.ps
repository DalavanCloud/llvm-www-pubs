%!PS-Adobe-2.0
%%Creator: dvips(k) 5.90a Copyright 2002 Radical Eye Software
%%Title: paper.dvi
%%Pages: 12
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: Helvetica-Bold CMSY6 Helvetica CMSY9 Courier Times-Bold
%%+ Times-Roman Times-Italic CMR6 CMMI9 CMR9 CMEX10 CMMI6 CMSY8
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -o paper.ps paper.dvi
%DVIPSParameters: dpi=1200, compressed
%DVIPSSource:  TeX output 2003.05.19:1040
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: 8r.enc
% @@psencodingfile@{
%   author = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry",
%   version = "0.6",
%   date = "1 July 1998",
%   filename = "8r.enc",
%   email = "tex-fonts@@tug.org",
%   docstring = "Encoding for TrueType or Type 1 fonts
%                to be used with TeX."
% @}
% 
% Idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard Encoding + ISO Latin 1 + extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% 
% (4) Remaining positions left undefined are for use in (hopefully)
% upward-compatible revisions, if someday more characters are generally
% available.
% 
% (5) hyphen appears twice for compatibility with both 
% ASCII and Windows.
% 
/TeXBase1Encoding [
% 0x00 (encoded characters from Adobe Standard not in Windows 3.1)
  /.notdef /dotaccent /fi /fl
  /fraction /hungarumlaut /Lslash /lslash
  /ogonek /ring /.notdef
  /breve /minus /.notdef 
% These are the only two remaining unencoded characters, so may as
% well include them.
  /Zcaron /zcaron 
% 0x10
 /caron /dotlessi 
% (unusual TeX characters available in, e.g., Lucida Bright)
 /dotlessj /ff /ffi /ffl 
 /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef
 % very contentious; it's so painful not having quoteleft and quoteright
 % at 96 and 145 that we move the things normally found there to here.
 /grave /quotesingle 
% 0x20 (ASCII begins)
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three /four /five /six /seven
 /eight /nine /colon /semicolon /less /equal /greater /question
% 0x40
 /at /A /B /C /D /E /F /G /H /I /J /K /L /M /N /O
% 0x50
 /P /Q /R /S /T /U /V /W
 /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o
% 0x70
 /p /q /r /s /t /u /v /w
 /x /y /z /braceleft /bar /braceright /asciitilde
 /.notdef % rubout; ASCII ends
% 0x80
 /.notdef /.notdef /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /.notdef /.notdef /.notdef
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /.notdef /.notdef /Ydieresis
% 0xA0
 /.notdef % nobreakspace
 /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot
 /hyphen % Y&Y (also at 45); Windows' softhyphen
 /registered
 /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def

%%EndProcSet
%%BeginProcSet: texps.pro
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type/integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics/Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{
dup sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1
roll mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def
dup[exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}
if}forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}
def end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginFont: CMSY8
%!PS-AdobeFont-1.1: CMSY8 1.0
%%CreationDate: 1991 Aug 15 07:22:10
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY8 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 33 /arrowright put
readonly def
/FontBBox{-30 -955 1185 779}readonly def
/UniqueID 5000818 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D5FC1B2109839E5B52DFBB2A7C1B5D8E7E8AA0
5B10EA43D6A8ED61AF5B23D49920D8F79DAB6A59062134D84AC0100187A6CD1F
80F5DDD9D222ACB1C23326A7656A635C4A241CCD32CBFDF8363206B8AA36E107
1477F5496111E055C7491002AFF272E46ECC46422F0380D093284870022523FB
DA1716CC4F2E2CCAD5F173FCBE6EDDB874AD255CD5E5C0F86214393FCB5F5C20
9C3C2BB5886E36FC3CCC21483C3AC193485A46E9D22BD7201894E4D45ADD9BF1
CC5CF6A5010B5654AC0BE0DA903DB563B13840BA3015F72E51E3BC80156388BA
F83C7D393392BCBC227771CDCB976E93302531886DDA73EBC9178917EFD0C20B
133F1E59AA9A26F02BE30470B8E43D02A439806DAAF3C540A304B53386D961C3
FEFDF87E24A20330F9FA4BC8FBEE3E00634210A0BC7DA10C0A00772AC8FBEC96
8FD1D875BE373993C65FAA26A33D1BA2F182BF432DA74B3A84EECF83F27F221A
B79B18E53E5E345921AADA6BE8D88F9E1B5448C43F45E52ADB14DDCFD2B570EC
1062387C5CF858F1F3140C833F17371A7DCA02C1DF4DD6C56C035B1B7D81D934
C75655EB6405EFFB5F5FF3F9855FB46740D06845A9EBA8E0F77F180B4B670B89
E12D4FFFE6322922415BB9658CF921DF9D72F9812F3D106C1CD3ADC049772584
DB759D569BFA796B5858D1BB92441F860713FCDB326CDAC8BBC1E85B6DF32BA2
49A6839EBBD253982ADC896334AF22CFA2DE49
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI6
%!PS-AdobeFont-1.1: CMMI6 1.100
%%CreationDate: 1996 Jul 23 07:53:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI6) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI6 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 105 /i put
dup 109 /m put
dup 110 /n put
readonly def
/FontBBox{11 -250 1241 750}readonly def
/UniqueID 5087381 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D6A8F05B47AF95EF28A9C561DBDC98C47CF5
5250011D19E9366EB6FD153D3A100CAA6212E3D5D93990737F8D326D347B7EDC
4391C9DF440285B8FC159D0E98D4258FC57892DDF0342CA1080743A076089583
6AD6FB2DC4C13F077F17789476E48402796E685107AF60A63FB0DE0266D55CF1
8D0AD65B9342CB686E564758C96164FFA711B11C1CE8C726F3C7BB1044BBD283
9AA4675747DF61E130A55E297CA5F0182A3F12F9085AF2F503481071724077A9
387E27879A9649AD5F186F33500FAC8F7FA26634BDCE1221EC0ED0E359E5EA5E
6166526FEB90C30D30099FBDC1BC2F9B62EFEEC48345160804AA98F8D0AA54B7
A480E715426651865C8E444EDB798C7E11040AF6E5A7ED1888653C6DBF5E6169
70BCD9C063B63B561EF165BF3AF11F8E519F37C6FDA2827685739DE2C48B5ADE
EE84F067D704D4511DBFA49E166D543CFD9ECD7417055D8A827F51E087CD2927
BAFC7E6CFBD70B0FE969F890A11149D3D44D422C3370495DA9951AEE7253A49F
3A9444C8CD9158D84117299F7F2332FEB0F94E6ED8BC7AA789A3219BC2F227D3
3B5BC75FB53B55D72AF4A6A7BB613FA235B11BB37D059FD87127CEF73D5B3FBF
9F91ABAD78BD9240BD9525EBA78095EA0BDB25D1A19E876F292882EAD5619D46
D20317A345D931F4FF4EAE6216C27044CBA525E3B917CEA25A04C120466C4B93
FC720E6BA832A06CCA0A3916CEF0968D49085AEBD243C41A448289A6F05CE3F5
79148DC112A3CC7E8FF810B8C1A09E05F496C0F1EBA334E42E05C376C98F5F69
C06C71BFC0A2F3AC9951CFBB143C66FB84F9C4ED27DF70869352D61BD5E11508
0797B87C774354F518712BED10630585E99E1C29B15CE5645E436727B77AA544
E31EA2CB49EB539F8C14D08272CB2811D3422A3900BFEEBC39A6020F48739CD6
82F57CB3451D742EEDFDCDA1681CF2A4C0A6590900A59899A221790DB7045E51
733AE0DE471463F267DBB3920D6CDADBCA7643DB73FA52921C338672EF72A4EA
AEFE5433F0CA5519F0F770DFBB656CF13C7F6973F97ACD696FFD96976F12CBC0
DEBC170615CEB3440104DC9B166843C9EFDFB4C367607E3EBAEA1DFF36BEB408
2ED5BEEBADF93D8DEE856FCCA6D8F0081619B0FD607BA3E1E2E9783E421E7174
689CCC44F2FFF8F1D25DA06FBFF21F91400F81EE4B916AC816D3882F770EF733
6B0D41446A563B5B88D1DCAEE24433D2F63E5C89DCC50EA50677F0571B96579F
79FD9FD49D4F0D2408338C1A7366E8BCFA8A9A03A5AF5BC35BE4FC86F3F02139
A67DFAD5E20FAF45D7DD8383F984C39D19CA916576BB5094C26B3D48D2172E31
645B24BFE8693EDAC349FA7D8C2863A2FF01904523D11F21E8CD6815DB3D2A70
A2F91D237D3B53CCDABC86F679A7CAE4D3F68902B71200782F3A293CD89FC8ED
C3DE68AEF03824F11C9A6EC739404677101CCA794A7AB841701B324D51CF46A5
0FE7E4E9D5A512040A260F952C7F0B37B8E786A19AEA2474ACE775CED165E19B
FA6E75CC83308CDABEACBA051B3262038E4F01BCB554D93EDFD0BC512B66A9E8
E1DD76FE84C834243E1081E3363EBB9823862DC60D04BE945CA1B130081A8392
EB143B5F3C64AE87A04673BEF515C852C46536067DF56335A3D8DF457E393946
7E0D8C21FFE66B2E959013484F7342AC6BA09BC43B3A2E2C5A60743A3DF5BAA2
4AF486EED5D65C97904DBEB4614233BFC45117CAFDD6185E758AE3FAEF75E872
5D5931E1C451E37AEBD96AF0CF173B8F0594D47668ECA66BBFB08BC5C83B919B
2F26FD66F5E67C7609EF088733CFA8AC777C7A70E74A43BF8C33B0E22DA62413
F5FA4BB3332C26F9172A5A5BDAF3DC5DCF91ED53E711FE8F562DA56C549A3B81
F0B6738EB0B80C1038762DCF350148327B493B67652D06C0F9118131B90E9350
C428BF166E8C54E02254BB6D723E29A1E55073485CB1EEC142BEBDA9CD55135C
77ECF780250294021020F264AC81B3BAE0E031555AA1604A9F4D843838FED494
7C44B7F3926F6C8451A19B9902A8AAD3562B7EE24C0569E0B78F13EE0993D381
1BCE56831E33F31EAC9B97EC6997D7AF93CB796D8481EC1DB60C34093B812BEA
07F7A8657D1AC8EC099C2039EC0F4B5A47CC89577B1A4EC3A5533D7A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMEX10
%!PS-AdobeFont-1.1: CMEX10 1.00
%%CreationDate: 1992 Jul 23 21:22:48
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMEX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMEX10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 83 /uniontext put
dup 84 /intersectiontext put
readonly def
/FontBBox{-24 -2960 1454 772}readonly def
/UniqueID 5000774 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF5B8CAC6A7BEB5D02276E511FFAF2AE11910
DE076F24311D94D07CACC323F360887F1EA11BDDA7927FF3325986FDB0ABDFC8
8E4B40E7988921D551EC0867EBCA44C05657F0DC913E7B3004A5F3E1337B6987
FEBC45F989C8DC6DC0AD577E903F05D0D54208A0AE7F28C734F130C133B48422
BED48639A2B74E4C08F2E710E24A99F347E0F4394CE64EACB549576E89044E52
EABE595BC964156D9D8C2BAB0F49664E951D7C1A3D1789C47F03C7051A63D5E8
DF04FAAC47351E82CAE0794AA9692C6452688A74A7A6A7AD09B8A9783C235EC1
EA2156261B8FB331827145DE315B6EC1B3D8B67B3323F761EAF4C223BB214C4C
6B062D1B281F5041D068319F4911058376D8EFBA59884BA3318C5BC95684F281
E0591BC0D1B2A4592A137FF301610019B8AC46AE6E48BC091E888E4487688350
E9AD5074EE4848271CE4ACC38D8CBC8F3DB32813DDD5B341AF9A6601281ABA38
4A978B98483A63FCC458D0E3BCE6FD830E7E09B0DB987A6B63B74638FC9F21A5
8C68479E1A85225670D79CDDE5AC0B77F5A994CA700B5F0FF1F97FC63EFDE023
8135F04A9D20C31998B12AE06676C362141AAAA395CDEF0A49E0141D335965F2
FB4198499799CECCC8AA5D255264784CD30A3E8295888EFBC2060ADDD7BAC45A
EEEECDFF7A47A88E69D84C9E572616C1AC69A34B5F0D0DE8EE4EDF9F4ADE0387
680924D8D5B73EF04EAD7F45977CA8AD73D4DD45DE1966A3B8251C0386164C35
5880DD2609C80E96D1AB861C9259748E98F6711D4E241A269ED51FF328344664
3AF9F18DCE671611DB2F5D3EA77EE734D2BED623F973E6840B8DAD1E2C3C2666
DD4DD1C1C9C622FAEAB9D3E54476B49A2A026565F10A93E741988A380B96665B
B74033E6AC08E135060F5C07D6D0892E1FE6F3AFE978594C5332910C65F7EF04
AA939F3FB69F10221D713AB2795CF42F8748AC13870F1E3B005F79970EBEBD1C
B210EDF48092DEF09AB5AE821357D7539D10E7288E82BA15D9BCE0DA0B6BACB2
68BFE76B48F42BE179920E3B13EAAA84FFF7768656AA270C2A25FABCAD83F220
84246F260D0F8A671B8F595E0BD0720091146FB0792470276697A16305013BF5
03DB878C84D25BE6A0711ECBB0080F70360F54F56BA6F13D1BE6E3E729AF7E9C
289B4A664DD52DC1AEE42DD410008E08A56E6B4E310F32A71EA68184106DD712
68472DCA17B73F3ACF7855C89CC3048E2510AE462E8CE99E08B18AA94598696C
52446F769DB39CA52F02B47F70DB684E982C93F27EA160536B7026C264D07A3E
69DA9D591FCB3A6F0C3578CB580153AC9A7A8B56552BEEF055F7F620F26635EA
0A654AFE8508639728184D19408E74061FC0A1FEDDEF9C288F1EB414EE8375C3
DC85C80EA85D719A13CC4A2C341822AA0C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR9
%!PS-AdobeFont-1.1: CMR9 1.0
%%CreationDate: 1991 Aug 20 16:39:59
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR9 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 13 /fl put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 54 /six put
dup 56 /eight put
dup 61 /equal put
dup 100 /d put
readonly def
/FontBBox{-39 -250 1036 750}readonly def
/UniqueID 5000792 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA6E45F332B5F68A44AD8A530F0
92A36FADB679CF58BAFDD3E51DFDD314B91A605515D729EE20C42505FD4E0835
3C9D365B14C003BC6DD352F0228A8C161F172D2551CD1C67CD0B1B21DED53203
046FAFF9B1129167921DD82C5964F9DDDFE0D2686875BD075FC81831A941F20E
C5CD90040A092E559F6D1D3B0E9BB71733595AE0EA6093F986377A96060BF12A
A1B525CD9FA741FE051DD54A32BECD55A868DD63119A4370F8322CCBEC889BC2
A723CB4015FC4AA90AE873EA14DE13382CA9CF0D8DFB65F0ABEDFD9A64BB3F4D
731E2E1C9A1789228FF44116230A70C339C9819676022AB31B5C9C589AE9094B
09882051AD4637C1710D93E8DD117B4E7B478493B91EA6306FDB3FA6D738AAB1
49FBB21A00AC2A999C21445DE3177F21D8B6AAB33869C882613EA6B5EC56476B
5634181ECBF03BFEDB57F079EACE3B334F6F384BDF9D70AEBD592C8ECF21378B
54A8B5DBF7CB9282E16AA517E14843909339B5E7C55B038BF3BB493F3B884A1C
C25F9E8FB912CBE23199AD9D2C3E573727701BA301526C66C3617B9514D6F11F
11930B1D97C17816C85B1BFD9B973A191B33CC3B391815AD14F1CBE935942AEC
D4004E6BEF379066FD72209DC88D2E634E79BCC2B98C766CBD92C561F2703F8A
109E6C6CEC7B866F2FC7ADF646BF492E520319F3B949AB5D84AE990B33344A40
3971F58DFDF8D8D67FA0B8F2A0D884F8C09A5A721319B911DBA0A35903877343
C37BC36C5EB32353272D1E6ED5FCA611BE319A7E1E842CB7576E7F57C4F43525
58BBDDBF843D36F01726CADD8F2ED37E2C594C0940A6DF948C39F7FD33296CB1
FF3BF6DF9FEFC7C3EE2D31147D494BFB56F7663CD6303023F088C693DD4163CA
ECAB3C509E8BE1FB695E9D57659B03F4E6DEC9F57856490C988C4CE036C225C7
088DAF610CAEB94E7209374B6987A7B20340A996A32025F01EEF88D99041A6F2
D998E07C5FC2F022CEFD7DEFFEDE47E14CC9C67784F9A6673F4A629BD7DA8D4E
F6B1F504636599419AC26D9486415EA425425D990C7F83A6FCF396F5E211C7A9
5096171D36EC56A70321D942721D4F37A3963E5D266041571E6E747E84DE1615
A40E736EFC35E4A06946A58182F57DD4720B85ED027BE9666DEB706D19189375
894B1403145EBA228C415425D41CD13B1D439D64499F7B48C8B114D3B41F30DC
BBFCAFB6404832F6B9C5F6536537F053243387814442C7D387280728A1D2DFA0
4E74ED24A8D316A405A8EBAB4455CB7E31D1A02C5B606BA78F5D453CEF5BDF7B
8B6C7AF9F599E587232965FC927AEB45B760B93666835B43B1296C83C106BDDA
F433A635BA6DB252DB30D22A192FA53EABE54BD9C53744C369D065DD9A350022
034CE16F4B1BD3228D6D7429CCA69DA1F600E8178A1A943FA476ACDF4BFC2432
2B74A662288BB605395517A280A0D1A9ABC6BE1A27F051DCDDA7E0A939794E0E
A879CA57D0A5B8484B90D0C9C45DE1633ECCB38AB2050483ABB07205C03CF252
9963AB0608CAE4EA60A53A877DA6A87DFBCD7F268DB7E4AD5E385A77E802BBD1
633F2068CC76EDDEEF55A214263AFD78990E0C3D4C8C4B8D572102D58A784F22
7E8638E02DBD795E41B85E0AACAC7FF4D4D40716FBBF358EB83D07F807BAD311
C38FC287E629B21EEA12528D7039668BF715CED1E7765ABFDE59CF47C594A466
A237C220C9C0BACF4390D92DE306C3D620EE1EF0FA8A44BB90FA867519117A16
C336105A6A80088240B03983B4A169FFFCC40C41B4B3C1D972346EA0DEE1D0BC
FCD9FCBC2096E4F9F34B9A5D045714CBDADAC11E34C8E1D311DDF8F8DBCC8E35
BA8CCC6B7F1ECC016E0BE2FBC7896FA9385F4FEB49B7F46FE75E713DC8EE4A05
2080B0B99E452795FB042EDEF5870540096CBA916FF02393F0163FD7CD92BB3F
AA748E41830BA1F9309B96979210090AA5F97D43B7AC4F0D001136A305A069B5
5C6DCF0327061400880CC198BCEDCF057B831F637968A31E44B7F74346BB9225
D1E7597ECB9A3CE2532239E922D057F839B9307F7C05BF44645145F386E1FF29
A503E81F4151C620D2536DB2D87E98BD4A19724AE7E204F02C05088960EB4BBF
55B14BED04225FC11EECC53E6194A4C1CCB21CDA1D3640F2D8AAB3F24767307C
7051E7816DC1FBB0ADEB95BEE15AADBBDFAB299EC8D9E65763D7B3800E5387C6
D4C8ACF2D50EEB912691232C3699E8B429BB79FDB710A1ABBAD5FAC50992BA54
2F5D0B1F8B76ACFB7D20B46B62A8A36ABB9175728644F5A749A20318FEA8B594
1C744BE49283E7CEF100B7F7236A59929405264B632D6A4BEE82F95A189E0491
7F7C5BBC4B26ACA526A4A48B18187E3AF2B352C2C39CB0D37365C622BF86D93E
D24E58AA310D0DC8CB152A0BE5149779B2779E2997A09BE2FE4F4D60A84128E7
3203B1278BCA10C31B1A4F3DDA888747D1DB63E7B1146CEC2E21E3331C4673BD
FE436E5C8FCA933D38E669DF3CF1F12A2C4B0E1D64B1364CC74B8CD6030612EB
A327E10AD870A2686230FFF91D81BF8938DAA8B26D65ABD0BFE061A3674B163B
C367195D26FF50956339172FFAAFC099335ACD0DDDDDFA8582D434923C766F40
EE07143A44E57DABE6861A22A5780727CBE13C9DA542462766BBAB891587A3CB
51368478B1559CEEEB25250947FD19A23C1CB89B525D6F85469D8CFFB5EDEB30
194429807863CB4B2982BE567E735DE29099740E7BAF1F74D375C72C83CB3282
2AF7E4FAAFB34F6002652FE991E538CC8643C50CE3C1136E72C3DD3A0D8A2501
898831A857EF64FE023DC824D736101D0185783C64AD3F56C24219CD55028188
54F3F8B9E501E5D668BD28D6E0DBCB3F254EE0F5BB20319CE9DF86B97FAFB1BF
5077CABD03FD03B96F5503D7A7C992F17AB5FDD589412352B7ED57F2AE4CD29C
27DE704C64FD645A4E82D02A79A99662CC346ED19046AAE60D51ED9EF35C1031
F6B9650B2256B94A860BBE5C1A141D0C2FEF72AF64A84E7A524F7E797DB89027
3F2954840B7867AFF0F8F056C8CF950768B08EB6A6FBE4155A0F4E303183C33E
0CBD5F71C4CA7DAAA8223595101265872BBA5331753E86F8A3AB4AEE0ECF81D1
8AECC3132AE45E80C4290EC4D6A5F8CC8D4615383E3977E4126162BA8D57BA4F
90750260140A0004269D39D1F4EDBF29C1E9135D07E4027FF150CFF052B0BA1A
5DC8298C57300419B2675315409EB606DA08FB7A08D7CC3FA266C777FA38855D
F05BD212A006FF633403B0E8AFF5
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI9
%!PS-AdobeFont-1.1: CMMI9 1.100
%%CreationDate: 1996 Jul 23 07:53:55
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI9 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 30 /phi put
dup 58 /period put
dup 60 /less put
dup 61 /slash put
dup 62 /greater put
dup 65 /A put
dup 67 /C put
dup 68 /D put
dup 70 /F put
dup 71 /G put
dup 73 /I put
dup 76 /L put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 86 /V put
dup 87 /W put
dup 88 /X put
dup 89 /Y put
dup 90 /Z put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 120 /x put
readonly def
/FontBBox{-29 -250 1075 750}readonly def
/UniqueID 5087384 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A319B6B1FD958
9E394A533A081C36D6F5CA5FED4F9AC9ADE41E04F9FC52E758C9F45A92BED935
86F9CFDB57732045913A6422AD4206418610C81D882EE493DE9523CC1BFE1505
DD1390B19BC1947A01B93BC668BE9B2A0E69A968554239B88C00AF9FBDF09CCD
67D3B2094C11A04762FE8CC1E91D020A28B3C122D24BEAACF82313F4604F2FEF
6E176D730A879BE45DD0D4996EF0247AEB1CA0AB08FF374D99F06D47B36F9554
FAD9A2D3CE451B7791C3709D8A1DDDEFBD840C1B42AB824D5A0DFF0E0F15B0B7
22AEEB877FF489581DA6FA8DA64944555101EB16F7AB0B717E148B7B98D8DBFD
730C52937E226545CF8DC3E07C5BA30739BAFCD0F2B44275A6D503F582C0FB4F
449963D0AD2FAFDE33BA3D77BCA9D1DF878DDAFCA2E22CC4BACD542B282164C7
97C2BDE318AF9D501CA21F6E662E7AAB75A5F24D2C182E598D175D44E88AB19A
E7CD59584F95B389183EE21B525BF52A3F23C0FE5383A5565A19361D716F508C
AAB78411CA5A4D27552CC1C435760D5A89D535B71C593E755C616661363308DA
A683F54ED0C23FB2C225A008392B0B719F66F11A946A090B7C00B662A3C69599
B4ECB0CC70C85C4BBBF207E0026F6C7A19F2ACFB7A60804FC98A4BFFD7BFFF2B
952B42CE273B1118F73E1809D2911924A418CC45E20D9A9C026201263F4A1527
48E376774D7C218132B4D3680590AB2AA2C2EA741D7E96C49F4BA3E705E2D68A
D288EC56011CD158D02216881B7E45314D94E45D7ECA73776BA42DACC41248A4
D19B97FA93D40079BACFE26853F0DF9F75201C59C77FAD42905A1B39ABECBAB2
C0925759BF0900E0E011E8ADFAD5859FC718F307C85933D6F9FA42D823683703
8BF34F6666AE5C90B42A4BC5F2F4B170B4DD23DF5C5B2A5D955D48570DA58601
91048AD24E8DB3A128860D78A62D116F44DBE486BE081264B442E10CE511E2A4
6062794AF85F5CF9E02AFED0E7161A3F8990BF3774349DC5E65479FD60095720
5E8B41E05F2BD7750991B6AAFE8393E6F5A8E4270D2D4A9AC52D14CF819E36F5
327DCAE7C65DCC25C969334081BAE90333C6AB0B6F514825ED5842D041C78D68
4089DE614A69FB194B6107D961519E20C44DF3B1E0D0A9C3A366E7EFFE4FB406
D7FFCBA3ACF62DF34D967B2C266BD4C910692E941C2BB6138CB94C80BF80E835
424BA9BCE40925412BFB602043F9FA2C992A303FC84497175DF1FE4BF3E6AA11
3672529D33FAAC60CFB06E88C529DCF26284EE228B03468653BE69A0CE0CA7F2
90EC125BFBD1A570582F0325FB8F7013CE09629DD1C5E7A8618E2BDC445C8D7B
F09090192F76B43CC5CC1101CA0EA6BAE199CC942A5F6B7A5F441597CCA00BC2
CB0E6B895688414A5644FF2CE1EFEC4323BC33E7E12161EDAE64C16855C9CAE8
CBC182DAAE2C57CC1E728FF3BE2C74BF7089DEB43C8961F08330AC177344827F
0B8034DE7EBE717F4F8B94058ABC6C99EF8DB195A8E9636497EA88DE1636815B
11A854912E70DF45A390943FC47513638030DF4E9F709BB07CAB75B51978B974
CCAA372A1224EA190001163645FF1D206D6220A76F3FC96B07FBAFBDC34803BD
DA422E5735DD8EB4A952756555C17B09894B791E78A9A452F688CFC217A7F23A
ABA1393E7BB56975D832C6762E679C9E12818D0166243C21E5AF3C728039300F
4AE49AFAD2B0540EFFD7BABCA5736C4EE950C0914B68F7CE5238C1802A184F1D
75D82F2C0214C66CABABD710C867B18888AD2FECD78BB75E256FC173A578A5CE
93B4DB7BE145B4D588FF1BFB5388F0D892A5F39F5F279A554FC6471209955D00
B50EA0BE646120D3EA8053CABD49D938139041CE620BFBBCEDA6A3946D5AC945
903AC0AEA794D62AD9045FC05F4733768B5131F6E77016E73F6288B198A47D4D
A912F8CC4D54354670BC0A6D861E7F7E4E6E288590BD8DE00DDD3E0CA3AB311A
3123E4A363BEF4AE60F8415B6A403202A17D7F58FF3FA8C9A39D8B4BA13DCD52
043796D69194CD37A9FED79523F7973EDB5D730CDC3C65F3EEEABC5AFB26EFE5
79FA13E14818B42AF477B4B2682E20E7D7D10A2A77760B7DE4032FFB800AC699
052072B433892CCC968DFE12394787F97000F0064C6815ED79A7ABD068589827
B12E4E1AC748D503FA7FC5B1EB5171F062040B309B61A5E95CD048732904730C
50BDA9415E204B4CE9F2AC4959B22F468D5BC097541CBB24107348BBA6BF30D5
4E9CB741D2021732F6FA110C6810576CF81DF96FE49AECFF20832F2C23438173
C570AEFB2D90A4FFE6066F1410D67D89DFB30B876BFC759D15550299B72DC155
2E7E60EFC8ADBECBD17D3E924DC1719E5B7823E0D4A789681147044186C38EF0
40CC9A0C0E10C60E98E59AC486F91F5923907C44B10F14ED4EC9971D3A36AE56
8C9915804D58AA649C1C94162B99C5FC0E530A347062D7F99FD1EC75B304889F
EF02C83796F2042099F2B97569464AC24F52FA6DCF89CAA16951A3191BC4EA27
114E3CB1FEA055362ACE7B2D9019217656CC75DE2109125B16966E2ACAD46515
A75D46FE9C8DCAE5675C004B68997589FBF07762B98A72E510706E7E476FD228
7BBD07C005B0EE3E540F7B31294327182ACF372293F0CB3B2D6CBABBF869803E
15296E76342A379D8B3A430F436F10D157CF1B1684328CCDF4A4068EA3DF68E9
E8B14E0818DFB29A1D5786E803DB4E2032D2D88663D554F4CCD63F82E67CEC0B
033A44D3FF3BDF1814DF6DD508D0A952F5AED7A709BAED47DFAFAEB4DBADAAD2
E1C388C021E03E2F618740C98625A9500757E2351524C4D11F373E4F5B26B81C
EF297C96899BA0CC0680EAB44191BC9C03BC68FF903CDB53A75CD12F5C9CE534
D182A4BCD52D94AA2F31CB8D522C823060F34942408B6C0FADDC40EB656BF284
A2FCB2C22605D52900C0A34FA86B0BBF471E63598DB2D5DD6FB41C0B35920D79
2B190AC9CF18A39846AD0D6F82F25001B85351A27D786AECBFC7CDB6E1E69616
9FE2CF27AF2EF6A60EDF032D2C12C90668E9FCDA98B47ED968B8A3BF36716F81
9B095C5AAF0D5229195C8B96F19B7F20ABA21BB7B97C38AC10D4A814ED26101D
60C55EA985EB0155FAAAD361480D80B13369B2C20FC4F5B5B451028D706BF29F
66F0576B35E1CE321593E668A7C351E3B96B861E8A6BEE68EB938F0188D0BFBB
AE5F78F61BC58FB5D7C69F36058D0240E40E25FCF4D4AA9366D32C8D22B3F5A0
1B993AD17ABE869E2B21FFC08A5F991A57EE4629D105DF53AC89B3F26B2E2C33
F94E626FCE40D38D2BCDC5CEFF57991E540F84A8B227B7312792F369C112460B
6A846DAF40380CF2FDF78C3873143FE12492182EBF2FECE7B0E662529F97F680
C492C137A9EA38045868349B169811F1C2B2E919197F3917196EF24145C31B21
C948C4A64E247E3EDAC461D1ADD7AE84A51F05A83C121CE805F639BC1AA8EFCA
C97F96EA6741459FA65A75612203F24C32D932241A1D967FA960F766DDE237F1
6A303AF8E522204CF7934750CDFBF2E3E75717D44145104696C237B4706ADD7D
9FC20D987FE89ABB274205988DCE39E6C1413B898754B39715FF3072D32CB3D0
8B253A607D03060BB38EA4DF01B92F1D9BD386EED875A5B64AAF94CB0286300A
6540E1F9B5766250F4A0529A12EE136DC6B78B9F04802F285EFE72A02E1D8A5B
5454A06C0965BF2C0132C50D639DA4BB8B8D41DE3CA73CAEC26388084BE07BDB
72A77ABE3B5910B82CB00A6FD3EFB429A7B2F7B1F8663A2BA782C6FBE5CC8EAC
EAB65B5B16F3C3E76AAB7409C0A9DC5F7841E9DE7E5CFD0948D98C5C9E347315
8632323C2D862C497D6897AC6201FF22742222838B2F8AE2D98702DC90656979
EF96ABEDCA9E9DC91289E3F6F84511D7A133E55672FB88F473A96791120197BD
E9655F65F7E800768B3CA69665F40450FD569734D1C5C76B56A8E68D67FD774C
B5C2B1D647968FAFD7EA7A0F7B1A9FA30D5CE8532FAE66D3F5D87E3CE37A8B3A
DCE20BAEFAB1C8F36D42E15AF34846C5F65BD7EE6536F2F39B39ABDD2D652157
E946A8C3D7F606F43D5B452847DE1F0FAF73B5DCDE1E4CA68EEA95BBB3EF36C8
6A38B6BEF68E09F083E32F27960F895EDC8D0EA3A437826F828BA56DD6BA6771
48805752A9F1C56DC4AD181D4F27C972D747CCFC24871F50C4E798E6FED7AA22
9C6C606D58FCD5FB66DB856CD3BE6C54BD4C2F22221C6E91DFDC02A4D4C01B27
615C7B306899C7E2D97715CD98DC3F4F45C978AD2D23FC160EF192CA6BA7552F
D4CE6069D4EB6CE261A984BF34BF8287D4704658A4C2F863C667E327CDCCFA94
E7E5EBDCEF9C47197CDEC3B133E79BB1647DEF0562095FC0400F1CAFC025A61A
1669F2CCC5A5F9D57169C58239088FFD3A2C39B49F22D3154FC2726C52AF67B4
4EBAC068A71C4D0DA190E6B887B99D9FC539B68D44CCF6CEE1222B2E4A450B7D
94A837DBD22506CDD468A72416FC606E884BD8B9D7D6BA0BF93C9090BFCA2213
3C9EA855863D6FD883C961AB1700C1545C94DFE065E76D141D96FD64E4378442
4FF63B2F932DBF25F0DA1AEDBA527D1EA1D56F4A6BF62CE3EC6340E5DC71BB08
32E6D0B4C2F41845C56EBCFC809A030C03374B23C952172718B5E3102B53749F
BCA2308B6555F0FC305A4E5AD7C389AD15B5ED3591C0B49FB457974345FFF03A
D2E39A4A7556F4BE34A80CC526F7761A09D28DFB8F1BC2683192009CC0904488
60E7C88B3476B933851283DA5EDA453FEF96D4704BFEE87B950C2430AF03B419
6ECF9B9525B41BD2863E9E48E92A6EE7DD39FE37153F48B9EE88E709DA60B29E
33B3BD43ACFC28C14DFB7BDBA455794BB83438052153956A0DCB437926335A98
3CE57093DFDF9FF332A2F7DCF1898D611C9A76841F4EC862199BF58C1869B2C9
4F68B98E4022E1BC850065A971B1AA6C75856F6D5A5027F74678252FD470E9B2
5C2B423BCF60D8DDA4560461A1BB6C7E411F157DCB9BB9A4242A3F3FF78CA725
2BF73F779F93B6E4C7D0DA130BFC73EF7F3D9B83792605777D01E4172B6B4629
6BC30618516E65C5A232449A565ED034DBD95EFD8807A6B9617567FBD5FB324E
17B3453A67A5DD039894DF51A6193FD8DC8A540D5289F5C90F1960395B1ED0FB
6DEDC6CFAE5EB867B98C2BDB2A9990F8F285DD73D1949FE7568BEC6E1B5B8325
D36DCBA0187CE72299C9698657FDEFFA973443CAE3A18DD61CFB8A7661C06BD0
8570B8760D4961311F7D45B82EA2C0CC09F369278CA6CA09F9296AC34E9CE37A
8B436CB635E77C93A270FCE2B89BDA59E5FC80648C178E80A17F47DE7AE91A2E
C1D12B988F54A6B487B3DAF7C6217697940CC4DEBAC718625B0630F395C3B806
BAB3E95FEAA3E6F3577C57662CDB22908A157B4E6AD5842AF8CA3FCD763CC0A9
8DE69ECC88252E72E51E30EF49B6F0B9352A78383D85DAA5A5523BBB3567968A
6C36DAADC5D449A018121F52E1ABD01DF92FA961DA0F5F2875D311CE75564533
663FDA960B08A6D56CA66E94FC81C6DBD3E9954515D776CB42C43292D21B172E
4185DC694F018AA207ACC203678EC86481BFFDC652575FB0F7271CE2D345E392
360AFD385885762C3D1E66D3ECE2428F328B76042557DBC384125E847E9B2DFD
71992996C378DE98966C97B03DDDA1FA9043E4C82FEFF1473780AD67CFA4AD1E
F6B6280E217B15A3381F1261D03E73EB57FD685673FF84E07CB219EEC90EB105
B892649A20960AADA2EE28661BEF807EF4C5288C31F55D73D65F33FB97263152
FC75C340719A1AB33AFD80BDB9361A5C5BC200BBB10F05E723B8756BBFF97EEE
D4E6B53CB64A65DA1E38B87AE833DA91FB558730CCCA5E112D10F3F9B872D7AF
1D679633547D760A88CEF2104D006B4F0C99888E4A56D8252BD2BF1A0CA0FDBE
CC50783B06EB195D8756F6DE0AACB188B533838562EAEC75C1D72420DCFCA89C
5BDA3B2011E8279DCA89783CC06B9CC63EA211097403C9AEB12F7603CB5A2F45
B0493A990D33E44D01CC080A922FFA3C9EDA97714D3B07E46D127638D5FD7DB7
7E8FAF92699456FE167F6A3EF7E2B399993224B6EFFA5E8816CAEDA346E7EDF0
700A95CC243EE4623332FAF04DC2AFBC9CABD6B62427D4D8F9F5CC5FF356684F
269FDB3D46E9F94D5C556AD7C6931DE47BFBB2F153265AB2104A3C3069499FCC
831CC54BE11E7987FA3C6199E43B695CEEBACAD1B8D26203B82F5E61A68A8801
3767ACCFA54D17BF9ADBC0369F03C841F9812B1F266444F202C0D3D7C7533C5C
5C9D325DC2CE4BBAD56719DE9EFD1BC59F3DF59F46251153252B08DFE89F78D4
70D1ACFC50575A85E91997E65499247BEC1878858B0EFEE6D5E4F8105775BD58
3C7DAC4356CDE7FE729106859058A294C8DA1EB3901B3D164FB1ECFFBB4DBC44
792B1A44FD9232C652E4E387F62FEEE6BAC770B799757C15AD61910EF67B1B62
4EBC4D113FE4D12DDF9F9BC8DF595BA3B4D82296FB0DD948A9F620BF31E95559
6DD0330B62DBF97F0AFC56A48528F6CF84B67D94F61A9F8DA42205DA9B41A53A
CB860A277D9853A9CCF8651E75238C7C9902E5C3A4E798E94358C38AF525BB2F
FF26E4B9903C9352E9DBDAD539D76BB1C66992495BB9F38F17866F3B599B30B0
A5024C2850A37C15C48A09EF243EF1E7346DE1DA6058D42B21F2882ED89961AF
3BC81B71B8063F2FB8A03C9511234AA6746697BD66F5E3EF36FD2D1626622B32
D518CA6190CA79CBDF731D105BE591A4B5B3D551F22E6ABE5AAE16B805133D83
10348043C523817F72638E1BDAE68A40D107403778BD0AF45498D7BF73F8BBB9
34ECA5A641AF412EC0F296D3D19FE797C37B42E8E0A1D622D797747FFF31CCDB
FBF0BBCB4DF61721989D0BB0C3B4FAF9225A3939931BFA48B90B2A731580C961
DF1297DD0683A074A3028D473695129E04204C4614D61C8FA05A903DCF596862
3747BCB6A6A6272F387F3459501EAE4C6984DCC4608E16DDFC1E17E59E3C0606
39008700F9BF8D60F4510C1B048115DA9E7B61008885AE7F3D6D0320117ABC20
E1D27C9F08B3A9305850F85D15DCDC69540635CA1E582B3CEF2AF6C83E2CB6CC
BEFF866529C3DD0E438C13B76CFFF0CBF83A85C865D2AB9C7CC9EBAAC593F7F8
091F15780E51D31BD895D3D6E382F7D423AD3495D66C13EFD6F9436C927D62A6
9FC366FB31587BC8372FEC2AF846E04ABADC256354C86DE507B4718E8225AAA5
8164FD3A270E7CBDBE5B5A22C6FAA8A4E7224F834CCB7F8EF56EBE581B27C468
DE4AF87E06E400B63E80788685B15ADE69E9AE631632CDDF370CE7820BB60680
0E48AED65CD7EEB11E24D1E39184DF20B36DDC62258EF4332AB034E53BE24591
F48D94ADA049225C8414AF0171FE22A47AFDFAB095842DBDB84F1C7B2C701061
7CE2955AD5514981F1B01C1D9D28FA8FB609525C9B269BD0D919818A5D044CA2
4A2574EAC4B88565F9D58EA3B0D129670A603EE6760E1E859A054EA84E28D902
C1ED6783E2F55FB5A248F02C90BC10B31F775E924800BC3731CD1D10CFF8D527
1787CEB5D929A15B9D42540705158236A828547406239E729BFB687D6F4E0072
FCC0C9B0E1EECCD5BAB7EAA72D5D49D89B267EBD40B8F8F5938DA8BFD2E1F218
5DDCB36122692B245B47AF5462483ABFBB7CA0F84F328B4F89C237C1A3BAB17B
E061FD0A1B0F9212B9524A6E1EDD6D72DA2599035E3253297A14BBD5818090D3
F7D2DB20DC143DEB05A174F8A48165A4956F5E076FE86EB082E0D5F1926F7E62
054F0CF6EE8AA39802B239D5FD60259B94482445E6E0E825AEF42A904D318987
194953168DBCF95D7F309FD5FFE83D764F06786578C8814E37144F7C1652AFF7
56C2A6B175EB59279906AA25509092CB7C79362ADAAB1569B142CEDB1CCC034D
02243EB8EC4028C4E1983F27B3A395495CE50ACB0C73CEAFB1230013EBC71117
3CC0FF43E7A5C17B0240F2EF4122CB23BE564B086C89E1D373BE2C25A50BF1B8
2B13B36E049BD7443F4E566F874C6F9EBEE465647E729E086B9434C4C2E98B94
7A68B4AE57F613B2A00D721A986DEF31F433979F31B4BABC831E06AC1CFA027C
0F8500A3D7BFAF02286352C1E0AA0756D1622C47EA81D606F38A34DF2D3B5C7A
B4DD49B8005E4CE1EF9D9817E27F1EB43EC752C68CE1B684B7858461646F3FB5
6C1DB6093EAC57120B4D3CAC979D013DC174C42F37A698F5942B60552E6D8FB8
E3849169E436EC06B3D5D27AFFAAAC9EC7FFD9049059B66C2EBA11465A948E0D
A75BC5346C76EA8053F70FB3F43D55DD17615897F12EAA809F62293F6D7BDE86
DD0428986C1A8A80C48C480E83DB976E92C942EB388E5778E566CE1F09B5824D
5C053B4F7F822B3775607F22585E8271E0B20A808501490115FB0E9BB46D9CBF
165FCA37EFABB64AE6DAE6645E774767E3A059B3DD538BDEE3DBD1CC21D4035B
E9CD1C75E6EC83EC989A535AF08EE2ED854999B4C627F25CD4F03D5FA35698B8
7D79ABB7C6B5D89D47AFECA7B13906866E320A96A3F9FA3C92A89985A22CD7AC
B267A0A208B2E0F2C038B4E7B2776F6B835F467320C6320D89304A771D7661F2
462335649399F26F8899AB9ECA595751A6BF3E78CF73BE1357418120CF80C288
2836DDBF277553E56E78EE0EB2BE78F27EC150C4CE817FBD7540C1A8CF67D53C
37FBA8994BB6F73B0E487534E8848A12BA2ED3EF0ACB3E4DE22F74B7B2B3B18D
2DD54F4E2A4CC8B1262AEF7A954124074A2260DD8CAED89678315F9DD14566C5
53053A5F7FD7280A8965FF63AD8526A52C53459CE25336102B41540B35270256
898171EA6C43F01326F90A93135A2E237C1C90674ECC67B6B10F50F09F53B0E4
E2D39043AD63D923E5036C57CE7A2DF6BD86E3C086DACE096FE370B86EF367D9
C9C45F92CCF215A7914F6B98F83AA579B312C4752B5353323E3D0B23955F7BB0
9B09477D6A41F09B6230B2A24B06F9E9A9710E0CF8E405ADE4FEA6851E6029BF
73F9C7DC9031BBB1D85A5D0A7248CE1546FE88A43DF8E0B5C7C7F596E09BCAAA
DA224FE00230D5DC59FE283875E9A5E881653FB62C45AD0D02DBA08200ED3E6C
AF5AA0B394995F60313781502E600C9DCEC8E2BA9352AB745BF593EE381647B3
3E37595D60ADD7C8D3D160F14451A8BBD1F56B84175F85E45B6CFEC2A3C643DB
4B02BA3F87B1E7727A4380B6821FA47FC708F140623ABE7AB9C3A8B8114B8BFB
943629A68B1F3A0597E8A519856B9A93C914E76E5B25BEA375E32E61FCA0BDF3
F4B572857E54FE2853540FF4DA74C69E136626E9673BD2315D227017487EA962
C187A02D7D2767A5FB20A83CA971080003C9AE9D4FBFA7799E9F8AA02D80C246
64211E48A9655CCBFF10E3F062B9421427DC145C646FAC91A72E4CC4AE7CE5FB
CE164DD9FD5AC76F96A7EF7985B469DF3E5137488B11EDCF17A8CF9BF62F6A20
958377B28866E5DF6B544C03429BF2C3B3DB44B10FC39087AB770D34C8374315
1F0E0190BD6CF14EF01291AC5F1306ED2B903015ED9846300F16381D07D08935
DFFE49EA946C4938B7C76D5C8E0DF7921CF43736BDDD3CEFF69518AF21AE9AEA
33E63167C3BEF5393958E0CBF436DD3D93C12B139F0BB55069ECD2C11FD4484C
74EC647B27EAC2F0956B6A8914B9FAD2C7654C4B5A04B8E0982224B3F0D4AF3F
1E05B03DAE6A7B250A675881680393AC4E2A0E30DA5CD6528BC668AE87839C49
E5E2265AAC211E49D9C21DCAB308F458BD1E819AB56146C57D065696316BE6B1
B5CB2CB5F271A0F5AF07607E84576AF3C419AF838640C2CCECE6659F94150629
13D4901BE886287CA1A7230E071404FC6478C3288F279F2E5F9A3D130E4A5D15
7E2D0412CEBA7CDFB9EE5B187AD15601B1436433D1FF26BB957E250C9F04DF21
9854108AEA8F9DE0DC6208DDEAC780C670F29742A539FE9ECD5DD5CEBAFAFE5B
CC09369AFA17858DABF4F32AD3A96A341BD070A9DF4E4C1E93DE2BD739FB7C3A
5C72E6D1C5774B44CF08488C49D404E20153393BAE6A4983AE275DFB7E988DA1
0B6A4E589AE6EA4020E4169A01ADDAE9DA92B01A401F937F1BA18A0EED5D11DA
CF7CEAC14710720812B3F0BFCF9541A4C689E9D4BFAA1A3DFB880638FAE15F42
0AF881E263E760130AE226179BFB5F5DD38C156AC92D73673A1C5BD529698DF2
AF2D81D93B3EC27CEBE1CE6826090F7AEC30F51B592EC99ACC4FC9E29FE3FE97
27797490AEF937D9CB229E0E4DF36C4F760E6F35F46F1CD2BF61E60C86110C9A
393FA333DD93DFC2485EAF5DBA6CD95163CAFECE7AFD439DF11DC25982B84F88
67928A6241505A757B45A9AD5375FC7B9EEDEFABD9F391D176C64782E8B71FF1
68A1CD1AC5C33A7B122099C04ED8A9BBABB35669EC9AA1F0757AF6A52B90AFF9
848F02E0B4EC49ADD62942EE83032A7FB0BAB3734C631C84B980638A6D28E2BA
C95468970B8B2F787B8760547E3AC83EB2571960972EAA7DAF3D0C9C911212AB
0C3F82A21A5E1FE9F65C47CB766CB6236BEBA90F4785C474D54D1F51408C7926
FC7273655290DDF5981B3D9D660C7E0FF24DD37247B1CC794FD623A3BAE4B2A5
079EBDC6D9CAF5D0F85C5191F596CCDE11E5D7804BAEE3E7EA49AAD5A13DC7E1
9A308AE4DDB98AF91F2174D10C3FDC2386BD755771FCABD479E355A1AE87E91E
E444E1CCCCB043408164DE284BA9BA1E7513AF0B8C2C73F24027FE2726462C53
51BB4974FC9884D6F25E097F4AB3385A59750E6DC7C7E7104075377D04BF51C0
F91354714A62E5503B667D3965ABAD1959A5B77184578CD97DF4E980E33C4E4A
165CDCB2414AD4346C82BD6357E3221071E331468DA0D5AD503BA3472E311B37
762CEA5398E6378C517A0C2697859E02F8406876D225AD841576025269B43098
2CB991AE9997901FC4D77972737498CB88AD799DFCBE8BF5BBF7E9498373FD8D
DB416E1D4CB816382432226FF75DD252E2216695BA9A26025110F71CEC4C2484
A71D36B418DF7ABC06146163EDD944823B8A1DE1A279A4AFDE940321DBCE0A42
CED1562D8FEA0F9426216258DAC8BB011D1C25E63F0D26D70F75AC0DA54A8E5F
7C0D86922BC26EC68F9B6F5532E832CE77FC1E2BF0BF86492D4D8978B5B99DC6
0AB9D1B6B22A859583494CF81EACE7731FDA9AF6FB4DA5362E5FAC2646C01F9B
667CCB13B859448BF8985626A5A207FF4BCB0BC9F0FB2062D800825C4374417E
08578E188D83D154466EB8E20FC5E655EF0B7C5E64B32F6C600FF74A4AA27FBE
64768AC93BB0ADCD003D453024794925F5E2575312E56D674907FB4C5C1B6C98
3E175FDCF0CE59B73A55E683A38DF6C19FAF9BCD4DEB339C3A6C6E020DCF32EE
229C489E12199933A847C3C73AC4C01CC7DEC9FDB95FADEFB22566327A51682D
FE3AE9DD43B800C38E654BE2B92AB8CDDFF8260DFF74A2D7C56236F42A25E576
E82936073208FD96F6260F92B7071093148A85155812B41ED8189A990B7F711A
1A00A2B81D051DF2C850C2B69A4F193FF714B282CA1C17AB2AE47BFAA5E56141
05484BA07D110A7D67871B0FD28A544C6A6AC18243A439C48616CB5289C33D85
4A77BBA74F8316D1D0B2F44557BC27F71D6ABE26FDAD124CFBCC29EDF8DE14BA
E6A7B2334C4EBD6502448316E21FD8B84A78A5CE36F4E9321C5AF3D11BEC198C
61483B5C0E3F5CBF853DC132CC66C73D847B3F596D420D4CE3B766577EA1B7AE
3FAE9FB768FDDD9848E2FD27920684FE753E9EC8115A2981B292E4DBD4CD717A
26E4954F15824E5FBF2CC7D2905990DBB2E5302E848B13898D208CCBBE006C0F
0BF7FF7B3728C50F5E35A341DD42097D862291045B6526FAC95ED02665E205C1
E23497C63B13DC8A8AF92F3B36EB4D276FDE863D1C7EE9B9A1A23EA318EDD058
FE635FCCDA9FF3620A011817DB07AE7ECA60AC5AB4EDE4AF05AF565F162F1508
94297C73229C22D6B8AE843A216EDE9AED67E1EED9949FDEC8CAC24BA6884CDE
2CB143414D5F6265A84BA88145FBB2749FCD1E634F9B1294B3196FA6E0777535
81AD6CDDBE9EC75A56025B09CC080A1E80319806E01AB14D0D492F986125D531
AB98B90A3A666F3591DEC4FEE62E58BA59B89F23888D1F37D4CBDDACFC27D0D9
585DC5406B5B826FA84D8CB99E7F7AB2C6E99DE1F4FDC59B1A3D14736FF3D49E
6BEFF352B1052B59333EEBFDDCBAB5558FC843F758E95EE8995804F6B1002C15
590490816D8CD949521E3462B85BB95AF10B4D92ED27AF6B5F4C51986385A00B
988813AE8F6025BD5C31337D21D2757A31769113A9580DC4D991C667026DC6A6
962FF6789992C22874D5702C72A2C33E62F29BDDFE4E68602F4300AA978A2004
AC5B0A0903B6AFFDD4616407501FA5AA24302B0EA80385327312F8C55DBB3A7A
D333713781474DEAFE512B05801FF35090403AAEA4347118FEE05BDCC831AAA8
78AF70FBEFC4E814539AFAECD8BA54A8D2487397DAEC4E6524790BC511094FDD
8F391F98BEEB3419FF36581A320494B4D17E3BACFFB6DBC6B1F6C9BE4B628BF6
1F89404A188CCB000C7540ADE009636A924CA5E599ACD9EF3108C8CDA0224ED0
207929442A84CD32AAE783D716DBA9E905134CDA1B2586B8A235246652E66404
426C81AACEB80C79734E6709FA97F16AEA5C6DB87E4717852D3BA9F8AB3D4F53
998FC69AB3EB41CD8F2080B47AD9692534D9F783A11D0DDE61EEEA42163CAB87
5B00B9ED844CE5F0DBAF6FE07B0DA8FFADC836C93EEBF5E4D4F93A7B9B2FE133
D0FE51772895012A399CBD1C9863ED393769E91B6ABA8041E599AA0338B1983C
9CF7CD26CA61ADB8220D1CD5A1EB70D432907C3BF1EB3B232928209BA546159D
72A4187C6A7C4C96D69E9479958129D99FC7F7DAA2BA57E016BAAF7EE2A54C3F
7F90BBB08CAFF28D67405737AAB13DE2B01160EA34B89BC7CB6DB834505649CD
333B9B3211744F78295B4F2BD696EF6E5B49285AADCE1EA9F0F82F809F308AF9
2BC42DB708A7692CDF1C0CB1829158225FF7B58EB302F7E6A1E6E7949963D4C2
CBB0E46754D3E119944617A85D7E6A9FEC76D57B6303DD9396E3B1D9E4E88CA4
D31DB3CC4252868556D4DBD873111ABA62DFD12C99A0C0E7EE01F79FE218707A
7A00120B4841B8639BA829E5FDB2228ECC8B11C09F27AE2943C67E611B406FA7
EB9538397DE502D895F07BE75BD0EC760A438D97FD0DF7DFB53449C62A890A93
FC5940DAD9ACA252379146E460B70BCA9972AB4A5EFDC745E0113DA5DB9BC99C
D13E96EA5F31BBE28C790002D851441AD241B5E22D7073059BC2A0CF9AAA272A
FADD8EDD31E9A0AE12FF3665FC86F647A6AB36AC4BBCF44D7D467469D6E801BC
302FAC3B6284D472EC67DD1D8A05D377FE92C1BA489A79399C623874CC496AC4
6C9790B238D63CC4E2B9D3C5D98697F6D2ED067D698FC3A8CC668167622BFF28
9D7431B42EE52542FB9A1FE5CEAE7BC34EB64BD27EFA690AAFE0085D02954E87
A2255F2FAE112EF31E5FA8D198733F462B1B89B586739015F85830C09F0D425A
6694541B4D40556C7323EED0150AC0EF5A20F026BFFE71F86BA41BBCBB8CC123
E07005CD81D418606AAC20672814C83A0C38A664BA891FF7048342B3B12A64DB
02EB337ACF4D7D8A8905046988085A656F069912FA89AA7D0644C5B7FED13B75
5701EF5D857CA1F146AE8D775EC1EE187AA3C948722329D1552AFADEA3B2325C
8E072851D761BB7CF26B3A7107BB8AE37E1B95BB7EF2CEB6F7B7187D9F95D64F
997F35A15C5D42DED7C3EDC2BC71EE7F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR6
%!PS-AdobeFont-1.1: CMR6 1.0
%%CreationDate: 1991 Aug 20 16:39:02
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR6) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR6 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 54 /six put
readonly def
/FontBBox{-20 -250 1193 750}readonly def
/UniqueID 5000789 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF4E9D2405B169CD5365D6ECED5D768D66D6C
68618B8C482B341F8CA38E9BB9BAFCFAAD9C2F3FD033B62690986ED43D9C9361
3645B82392D5CAE11A7CB49D7E2E82DCD485CBA17D1AFFF95F4224CF7ECEE45C
BFB7C8C77C22A01C345078D28D3ECBF804CDC2FE5025FA0D05CCC5EFC0C4F87E
CBED13DDDF8F34E404F471C6DD2E43331D73E89BBC71E7BF889F6293793FEF5A
C9DD3792F032E37A364C70914843F7AA314413D022AE3238730B420A7E9D0CF5
D0E24F501451F9CDECE10AF7E14FF15C4F12F3FCA47DD9CD3C7AEA8D1551017D
23131C09ED104C052054520268A4FA3C6338BA6CF14C3DE3BAF2EA35296EE3D8
D6496277E11DFF6076FE64C8A8C3419FA774473D63223FFA41CBAE609C3D976B
93DFB4079ADC7C4EF07303F93808DDA9F651F61BCCF79555059A44CBAF84A711
6D98083CEF58230D54AD486C74C4A257FC703ACF918219D0A597A5F680B606E4
EF94ADF8BF91A5096A806DB64EC96636A98397D22A74932EB7346A9C4B5EE953
CB3C80AA634BFC28AA938C704BDA8DC4D13551CCFE2B2784BE8BF54502EBA9AF
D49B79237B9C56310550BC30E9108BB06EAC755D6AA4E688EFE2A0AAB17F20FE
00CD0BFF1B9CB6BDA0FA3A29A3117388B6686657A150CE6421FD5D420F4F7FB5
B0DAA1BA19D638676E9CF159AC7325EF17B9F74E082BEF75E10A31C7011C0FFA
99B797CE549B5C45238DD0FADD6B99D233AC69282DF0D91EA2DBD08CE0083904
A6D968D5AE3BD159D01BDFF42D16111BC0A517C66B43972080D9DD4F3B9AE7FB
11B035CE715C1218B2D779761D8D7E9DEBE277531BD58F313EBD27E33BEF9DC5
50C7821A8BBC3B9FDF899D7EAA0B94493B97AFEAC503EB5ED7A7AB612DB13294
19F96BE45455FDE8771DBF48729501723E48C04FC929BAC9A3733877BF0F2ACA
BD10CD8A81178E7ED28B5236DCD83B83B152D0274EF87ED0845AB720B7E33912
7A08578C6423E338F9AAD72FC8E19C4A2B57180147E693F353BD65F49C491A2A
5B1AE33FB8543323478313880082DF144294A44388812E7621ADD470B3D5916B
3073230FCBCC8AE5F71215BFB8C69A156B4F125C6C3E77ED313A95E6A01AA600
33D336DED41C8E02E9D86BFAC5E6DCC27A76942FE0CB9EA11B4B30B56280D0C1
C7C335FBAE949CEAEE78508763BDA9C0BF0E45CCAFD55A74261DB5B6ADB4D97B
92BB6EE8F2724FDD2C2835E8C0356B04DB2F526519ABAEEF5881E4856ECAFCB1
16DD61D80FA754541849CFACF06993D3CE14F4ACC8886FB9F3FD5146146A8525
D7A130C3CC71DBA30D51C5D567FAE6D539B99842026E987F136CE81D7C828203
C1495107BE32B69C06B555E462C2045099E1C20E6BD9B5BA95EEE22CFFC83526
348864F5FF307CF7419D77B0F8642F651002385A1EEF62827BF14C28B8260348
0C72FFFA3A868A777E5C970FB847E725C0EC6356CEDD73E99724A27517994DA5
79D81964FD0B97BA8DE6F9C6FA53DB8E786B522F0F472D041675DA87802C4831
1A299D0E6EDDBBEBEEE38CF6ED9AFA68307A8D4AE885585EE13353C2C619FD8D
CB5F02F47565EF2DEB73B70E413576EAC66324C4389D4A99A44F4BD484CEDB2B
CF8F88F9165F695DC49A4F38E9FC1FCB1D38DD07A5307005BA9CEEEE188D3A31
15DF6F597324183B55123BF5BA9FE9479544378A2E16C428D54AC3FF40F4DF29
AE90DF35475A5362CD79609B33E73A0905526B56A5DB47B11218A8479DA6CC2F
30C0AEC9FCFE69CD6728969BBDD07C07A35FC57B18C9A632F3797ED3A47C8816
C0AB367DD2BA44C4B99C689E587F78EEBD5BAC4ED648725986AED97DE1C64EC2
63E21D7C24C2910B49EBFC896448193347AB180E521E7542E0513189CECDE164
3B643918D6D49FC286DCCE3A4939760E8CF8931B69002FACE88302EF4125DE32
6C30479C27A54295B0BCAE60C0217D68C8CBD6952509C93B6A5797E7CE8B3C41
F0B00707849255FEBF46C6875D210718BD689D5E7227BA65C0CF9C275970C709
03787641136685
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY9
%!PS-AdobeFont-1.1: CMSY9 1.0
%%CreationDate: 1991 Aug 15 07:22:27
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY9 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 2 /multiply put
dup 3 /asteriskmath put
dup 15 /bullet put
dup 20 /lessequal put
dup 33 /arrowright put
dup 50 /element put
dup 54 /negationslash put
dup 56 /universal put
dup 57 /existential put
dup 58 /logicalnot put
dup 59 /emptyset put
dup 102 /braceleft put
dup 103 /braceright put
readonly def
/FontBBox{-30 -958 1146 777}readonly def
/UniqueID 5000819 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D31FF2B87F97C73D63EECDDA4C49501773468A
27D1663E0B62F461F6E40A5D6676D0037D33F24E2FAC2B0009AD3C8350CDF8CC
65BCA87979C36D14CB552E9A985E48BE4E88ECA16DF418749AF04FDD2B0E1380
D281BB2476BB45FF30946B247DFD7F57305FA87E50CA338121C71CDFDF927A9C
77FF14CB4A1D6D80356FB1171ED38C37702350497B44E42CE31DB2F493807DAA
15B887C671199A54C4C1294BC520F5538C15556BC43C9F62342B121C6DCD6C5F
491DA47FF360201EE21C08A781ED0589A6DF91B99FE118B9B29E4F068672E52F
1A06C514D91C4C937D4E642503392B1CD1BDEB6BF6DBA94FCBED8E082C0C67D1
6E2ADF1C489B5BE7FC9BFA3A8B0B7E9981FB4759930B8E1081D836862F9D1328
D43804A2AC716E04544F50D81486FA903B7C06368F45D9F6E1E12A486CE886A4
3C1096CEB3AB511E289A0B5E39C87742720CA7486CE508679B3168D8C3CA7296
2442473F9E235CAAF794AF54C076EBDB49894A186D7BBC819D92FFD9722225C9
649E0622B4D6AE72D17316F6F72DCCD85186456EACE85C4D7080875F545428DD
08AF01ACFA6485F95C8BDEF11BFBDDE313CE301A4130A33A905B573547399E5A
3A563AB9D8E8F65AE0569C0880B17319206F0AE44C910EF551B1E9C78E135B82
2654AA4663883A06988A67DB01A411BF010B7600AB46FA622A16C25362A2A78C
455C672A384DCA4059B80679AAB091D013147A4A517E062612190DD6C2087FCC
5A02D8F69CE1B1B401108D45F5838275EF845D2DB8730C4E301C0469E52BFE48
829655D1E3DFF769C8F1FBEC4E1FB3B319CBB763BB35AC7C0B9B96F314B5DBF3
DF90C02C94CF672705BB90AC41285CEF480366D81B4341B6282E16DB034F6C79
C8A5540915F24DD6E22A8001300E8921A5FB958822E126D0D783A28433EDCBB1
772E6F7162FB1A6BFA1634D350DF37401B4490A71E8E4584A25A73E24E3B3899
DF4EC56594CDF27F57FB55F6EE355E3CE32B488900043A7728C7494FCA51794A
FE21C9CF288DA38D3E1B49D7743D1F728E81654DE8EDB2C8FEE2EFBA966B7609
2A214BC45510050F2E9603A84F1192E709EB67BA26F8DF6C7A4404AE45CFE7DC
B569E98E3BC8E9459E68CE3DD8FC6B99ADAD13B58802820DA2488D351FB0E7B0
3D8E2FD69205916A003BFA342CCF6DF66A09A4F7082AF6C654879A6BF30CF10A
9DAD21DB3289D44F03E0BCB925331EED9CBEDCF079F28CDE895559FA472C34FA
FC43BF28595A696A7190A721CDF423B78EE7B401A9E38A70C19F98741E9B9D7C
388E03070C84439DD328975992BA713805A2214B9B41179F722596AB90B3460E
543D0773CDCB0E6320E71B950774540E400FADE36F0038156CA00CDD880C0AD0
EBDAF3AA971717C326B800AE3B3639FF509AEB28226F360F0C003A17BE12F33B
AEE281636625EEA0C179752DB717D0E27DB74A6B5383274593671743BCCF42B0
7ABDA341DD0367DD664FCA3938D8BBDF0D2D8435B426766213BE0C3F9C94198A
9AF67383EABDAFFA82BFBFAB8F12339DD949B1C199C9A0232EBEB2CF8CA3FCB0
8682B5F20C8C1B683AE3F6DFBB21E77981028A3B258E97BD90D7E52821E35C14
4C3C328356695D2B140B6F0BC3A2EDF870AB618D32024204FADCF8E43805FAC5
CC499137FCFAC15E309A3B301B3167456273A54B570D5013BADDE3575E991A2C
5F9E6EEACABEF92D028D19024040FD6956D97B7B2A7CEB05045208BD86B869D1
7D6FDA7D4C78F24AD73EB49C87457B4EB1C4BC7CFAB368159F1320475BC1F4EC
9D9A449C959618F2D200064E03E614A7DEDB8EB5B545D842C6A3C5A70DAD22B0
674AD5CE328AD869943AB1D9DBBD1392D1009CA7965ED07CC5C08E7B420E7296
D850446D4D1E3D6379A25C2F3275F23910797D3EB7A7F580EA0C814F2EC2EAD6
BD60CE57C960A007018542BD14638C5F39BC7F9AB1AB36E440A48D236F51EF7F
ABEF99CE9809DE64722ED1934767138351E6482ED690892D789289E3AD5869D5
1FD18E93F3A94F9CAB5022B015E0011D87F13556C8380BF562975B28F4CF6506
9E82236290FC528219D5D319ADA98F23EE887D255BDC0C737DB6DB9800EFCE4E
036369D76A1C91E8DA1E183E1256F44A0E106DB1941ED88818B62799F68A0C05
6D8A8A6081C31D5CB74AB1A82F98D5CD17E3B357662A4AAE715E2AC68C65FDC8
7E2548DF58D6B38DB41D9E8E5DDCC6C5F68270550473C323BEE14B9405F877FE
D499B6659167DCEB950E417E87311B324EC483B17BD8027186CB53A7BC52B738
360686592FA9BBED812D5A409E29C5408C18FE9E0A5215765836B2F7B741222E
03FFC75FC6AB8CD62397CF96130383336D84E096FB4A9D2F977664EF92A86BC4
71A2B0C509357B4BF98CD45536C3BEE437C695583398F73B58619FF9952B6DE6
BC8275FA9B34C883D8ED1B176C0861DE31A71AFA1CE7C58AFBEB338B52D5C2F0
56D7D647AB53E17E72699FF42C55F10300FC7E3339461A38C1891E3ED2662106
A82FA2B72F686646F8D68310DA01DC34853F4EF24EFEC4936FC3AED575C76D8D
53609F245FAC23E73AEF15F9DECA34D923C1F443032AC305C694DAC55BB05920
F429A4F65E330301BDF9A22D2C401D189B38F392395D4C3DA4920374031B5CFE
695234511B0826B2E6D92486EDF0651A9AFEAB6D76F83048C03B15026B883E68
795F30D0AD62EE0101A9FB63FF6B2047F6BF2615C0A2FCE1A3AC053DE5597B2D
8978CE959880E9904DECBFBD52FD71D7AA5EA0FA28D31122ACAF9882D603AB61
4FDB14ACE683281BD97913AD163666230DDD4C8738B437C31325F7CAAFEC14C2
4B9BEB2BEB5B553DBA6641B650313794D75BCBB63DEB39E22964F5BA71D9D782
88A4ACD639B8B6A89019697D09845054EAFF14884AB2C0975EB389461C30AA3F
5AE035B7ADB08C03DE5449F48CD7224B4A5F04F8C0C4F6FB35D36EA8EA5135BD
3208AF5CAA59E4DADE76229660200456EB333C5B1C37E9B39AC4B85455A3854E
DD065F3C8BFD211B7CBBE1E1EEA68413BCCCB87D47C776C2C335C1C324C3F8B5
534E1A87CC958A182E56300F977DAFC9DEEA82AB060F31C71DE6A830C241A1D7
721BC70A3870A85B46FA0EB6DDFE47F301EE64A510C59ED8483FBC635D28175B
74A796C02B72E972D0016C285B1F44FA342FB47F98A091C9DC8D4253496FBE61
BCA644782587674DC75A83BEA35755BEAC804978A06600A526832D315214C42F
4FCFD019B6EEB53719CFD467899244D1FA9DF28EBFA8C8804999D81FFBE8738E
0C351CAF4451397DD3FDAA01441A6123A482E437D4CDD5873B12632D7C1773F6
D5406628F1119C74C74FB91D48D855569B6CE76C2AE2C13E35D8522E46BE66A2
F415D4F08516894ED8B58CBCDC01
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY6
%!PS-AdobeFont-1.1: CMSY6 1.0
%%CreationDate: 1991 Aug 15 07:21:34
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY6) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY6 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 3 /asteriskmath put
readonly def
/FontBBox{-4 -948 1329 786}readonly def
/UniqueID 5000816 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D5FC1B2109839E5B52DFB7605D7BA557CC35D6
49F6EB651B83771034BA0C39DB8D426A24543EF4529E2D939125B5157482688E
9045C2242F4AFA4C489D975C029177CD6497EACD181FF151A45F521A4C4043C2
1F3E76EF5B3291A941583E27DFC68B9211105827590393ABFB8AA4D1623D1761
6AC0DF1D3154B0277BE821712BE7B33385E7A4105E8F3370F981B8FE9E3CF3E0
007B8C9F2D934F24D591C330487DDF179CECEC5258C47E4B32538F948AB00673
F9D549C971B0822056B339600FC1E3A5E51844CC8A75B857F15E7276260ED115
C5FD550F53CE5583743B50B0F9B7C4F836DEF7499F439A6EBE9BF559D2EE0571
CE54AEC463244B0F8EAB9E96CB18BD39259CC1FEC10F47FB56A38588CE634209
8F77258607212EE1DCA4F0667B152875B2CF5AC44B930B888ACD9D4B55662542
71239286D82E14CAABE7276AB199E2429C4C3BC32713106A10F5F16C8045A580
86EE21E7783B70FAE03D8D47B5AA13A881D478232DD65DBCD1EB9811C440E362
527EF73FC86FE664ACED80DCD6806CFD932BDEE102B89C22F423992249FC2273
F39C59AEF75B2088527AA973C71A6B134D26EF1ABAB75721971A0E4E52639DA9
2E1C3B2A6FB552CA834F6443E0628DD9CE69E92DA0B9B8ACAF3641FA0A7F1126
8DF8803E683ACCCCDE88C9F6C1838BCE7E8B56A0BC8C5F0300D81479A5087FFD
B8B66527B87F7977C31A54E0506C6D33EBC902841AB7B8D75BC8ADE5397905EF
BCB96AE4B57D308DCF0F74A93177F2DDF3486642A43834DB5B123CFA402E4BA1
6EB4C27AF21C96932E05B79CF951354FF66668C6503CA6FD2089A91A8D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258431 52099146 1000 1200 1200 (paper.dvi)
@start /Fa 134[59 59 89 1[66 37 52 52 66 66 66 66 96
37 2[37 66 66 37 59 66 59 66 66 10[81 1[74 66 81 1[81
96 89 111 74 2[44 1[96 1[81 96 89 1[81 6[44 66 66 1[66
2[66 66 66 66 1[33 44 33 2[44 44 44 39[{TeXBase1Encoding ReEncodeFont}
51 132.835 /Times-Italic rf /Fb 75[44 29[66 1[59 25[59
66 66 96 66 66 37 52 44 66 66 66 66 103 37 66 37 37 66
66 44 59 66 59 66 59 3[44 1[44 81 96 96 125 96 96 81
74 89 1[74 96 96 118 81 96 52 44 96 96 74 81 96 89 89
96 1[59 4[37 66 66 66 66 66 66 66 66 66 66 1[33 44 33
2[44 44 36[74 74 2[{TeXBase1Encoding ReEncodeFont}75
132.835 /Times-Roman rf /Fc 222[141 33[{}1 132.835 /CMSY8
rf /Fd 135[75 3[42 58 50 1[75 1[75 4[42 3[66 75 66 18[83
35[37 2[50 50 40[{.167 SlantFont TeXBase1Encoding ReEncodeFont}14
149.44 /Times-Roman rf /Fe 145[77 109 3[44 105[{}3 99.6264
/CMMI6 rf /Ff 171[128 128 83[{}2 149.44 /CMEX10 rf /Fg
155[85 38[119 4[77 1[77 1[77 77 77 77 77 34[85 13[{}10
149.44 /CMR9 rf /Fh 133[71 81 2[81 1[51 71 71 1[91 91
91 132 51 81 1[51 91 91 51 81 91 81 1[91 9[152 2[102
91 2[112 132 122 6[132 2[132 122 1[112 13[91 91 91 2[46
43[91 2[{TeXBase1Encoding ReEncodeFont}35 182.648 /Times-Italic
rf /Fi 135[87 1[75 88 55 72 69 1[77 74 93 135 46 80 1[53
88 73 75 71 80 66 1[81 6[104 89 127 145 90 1[90 94 116
1[98 117 123 1[105 2[67 1[120 98 1[127 110 1[115 2[119
77 119 1[43 27[91 30[{}43 149.44 /CMMI9 rf /Fj 130[80
1[80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80
1[80 80 80 80 80 80 80 80 80 1[80 1[80 1[80 2[80 1[80
80 1[80 2[80 1[80 80 80 7[80 80 4[80 80 1[80 80 6[80
80 80 80 80 80 80 80 80 80 80 80 1[80 80 3[80 33[{
TeXBase1Encoding ReEncodeFont}59 132.835 /Courier rf
/Fk 134[66 1[96 66 74 44 52 59 1[74 66 74 111 37 74 1[37
74 66 44 59 74 59 74 66 10[96 1[89 6[125 89 2[52 4[96
96 1[96 62[74 2[{TeXBase1Encoding ReEncodeFont}31 132.835
/Times-Bold rf /Fl 201[61 2[61 61 61 49[{}4 99.6264 /CMR6
rf /Fm 204[50 50 50 49[{TeXBase1Encoding ReEncodeFont}3
99.6264 /Times-Roman rf /Fn 133[58 66 66 100 66 75 42
58 58 1[75 75 75 108 42 66 42 42 75 75 42 66 75 66 75
75 13[75 9[50 2[91 24[50 41[75 3[{TeXBase1Encoding ReEncodeFont}30
149.44 /Times-Italic rf /Fo 82[66 50[88 100 2[100 111
66 78 88 1[111 100 111 166 55 1[66 55 111 100 66 88 111
88 111 100 7[144 1[199 144 144 133 111 144 1[122 155
144 188 133 155 1[78 1[155 122 133 144 144 1[144 8[100
100 100 100 100 100 100 100 2[50 7[166 38[{
TeXBase1Encoding ReEncodeFont}53 199.253 /Times-Bold
rf /Fp 104[149 75 1[66 66 24[66 75 75 108 75 75 42 58
50 75 75 75 75 116 42 75 42 42 75 75 50 66 75 66 75 66
3[50 1[50 2[108 141 108 108 91 83 100 1[83 108 108 133
91 1[58 50 108 108 83 91 108 100 100 108 3[84 1[42 42
75 75 75 75 75 75 75 75 75 75 42 37 50 37 84 75 50 50
50 1[124 33[83 83 2[{TeXBase1Encoding ReEncodeFont}79
149.44 /Times-Roman rf /Fq 104[149 28[66 75 1[108 75
83 50 58 66 1[83 75 83 124 42 83 1[42 83 75 50 66 83
66 83 75 9[149 1[108 100 83 108 1[91 116 108 1[100 2[58
116 116 91 1[108 108 100 108 6[50 75 75 75 75 75 75 75
75 75 75 1[37 50 3[50 50 37[83 2[{TeXBase1Encoding ReEncodeFont}57
149.44 /Times-Bold rf /Fr 134[90 90 90 90 90 90 90 90
1[90 90 90 90 90 2[90 90 90 90 90 90 90 90 90 3[90 1[90
90 90 90 3[90 90 90 1[90 1[90 1[90 10[90 90 2[90 9[90
90 90 2[90 90 90 1[90 90 90 1[90 90 37[{TeXBase1Encoding ReEncodeFont}
47 149.44 /Courier rf /Fs 152[77 77 42[77 102 85 85 1[0
3[102 16[154 12[119 4[77 11[77 119 1[119{}14 149.44 /CMSY9
rf /Ft 82[66 51[100 2[100 1[55 100 66 1[111 111 111 166
44 100 1[44 111 111 55 111 111 1[111 111 10[133 144 8[111
2[55 5[144 1[133 65[{TeXBase1Encoding ReEncodeFont}26
199.253 /Helvetica rf /Fu 252[64 3[{}1 99.6264 /CMSY6
rf /Fv 138[183 100 166 116 2[183 183 266 83 1[83 83 2[100
166 1[166 1[166 13[199 2[199 11[216 2[216 65[{
TeXBase1Encoding ReEncodeFont}18 298.879 /Helvetica-Bold
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 1200dpi
TeXDict begin
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 8 214 a Fv(A)-9 b(utomatic)82 b(P)-12
b(ool)83 b(Allocation)e(f)-6 b(or)83 b(Disjoint)f(Data)h(Structures)
7754 150 y Fu(\003)2393 890 y Ft(Chr)s(is)55 b(Lattner)711
b(Vikr)n(am)55 b(Adv)-5 b(e)2023 1088 y(Univ)g(ersity)55
b(of)h(Illinois)g(at)f(Urbana\255Champaign)2683 1262
y Fs(f)p Fr(lattner,vadve)p Fs(g)p Fr(@cs.uiuc.edu)-303
2319 y Fq(Abstract)38 b(\227)g Fp(This)g(paper)f(presents)h(an)g
(analysis)f(technique)g(and)h(a)g(no)n(v)n(el)-303 2493
y(program)d(transformation)f(that)i(can)g(enable)h(po)l(werful)e
(optimizations)e(for)-303 2668 y(entire)53 b(link)o(ed)f(data)i
(structures.)96 b(The)55 b(fully)d(automatic)i(transformation)-303
2842 y(con)-6 b(v)n(erts)41 b(ordinary)h(programs)g(to)g(use)h(pool)e
(\(aka)i(re)n(gion\))e(allocation)g(for)-303 3016 y(heap-based)62
b(data)g(structures.)119 b(The)62 b(transformation)e(relies)i(on)f(an)h
(ef-)-303 3191 y(\002cient)55 b(link-time)f(interprocedural)f(analysis)
j(to)f(identify)e(disjoint)h(data)-303 3365 y(structures)d(in)h(the)h
(program,)j(to)c(check)h(whether)f(these)h(data)g(structures)-303
3539 y(are)33 b(accessed)h(in)e(a)h(type-safe)f(manner)-6
b(,)34 b(and)f(to)f(construct)f(a)i(Disjoint)e(Data)-303
3714 y(Structure)k(Graph)i(that)f(describes)h(the)f(connecti)l(vity)f
(pattern)h(within)f(such)-303 3888 y(structures.)97 b(W)-12
b(e)55 b(present)g(preliminary)e(e)n(xperimental)g(results)h(sho)l
(wing)-303 4062 y(that)61 b(the)h(data)g(structure)f(analysis)g(and)h
(pool)f(allocation)f(are)j(ef)l(fecti)l(v)n(e)-303 4237
y(for)c(a)i(set)g(of)f(pointer)e(intensi)l(v)n(e)h(programs)h(in)g(the)
g(Olden)g(benchmark)-303 4411 y(suite.)74 b(T)-12 b(o)48
b(illustrate)d(the)h(optimizations)f(that)h(can)h(be)g(enabled)g(by)g
(these)-303 4586 y(techniques,)55 b(we)d(describe)f(a)i(no)n(v)n(el)d
(pointer)g(compression)i(transforma-)-303 4760 y(tion)41
b(and)j(brie\003y)e(discuss)h(se)l(v)n(eral)h(other)e(optimization)f
(possibilities)f(for)-303 4934 y(link)o(ed)35 b(data)i(structures.)-303
5345 y Fo(1.)198 b(INTR)-6 b(ODUCTION)-154 5561 y Fp(Pointer)m
(-intensi)l(v)n(e)45 b(programs)j(are)h(a)f(dif)l(\002cult)f(challenge)
h(for)f(modern)-303 5735 y(processor)h(architectures)h(and)g(memory)g
(hierarchies.)82 b(T)-12 b(ypical)49 b(pointer)m(-)-303
5909 y(based)75 b(heap)g(data)g(structures)e(produce)i(access)h
(patterns)e(with)g(much)-303 6084 y(w)o(orse)47 b(locality)f(than)h
(dense)h(arrays)g(because)h(the)n(y)e(are)h(not)f(accessed)i(in)-303
6258 y(a)f(re)n(gular)e(pattern)h(within)f(the)h(linear)g(system)h
(address)f(space.)79 b(Further)m(-)-303 6432 y(more,)37
b(the)g(addresses)g(of)g(future)f(accesses)j(are)e(dif)l(\002cult)f(to)
g(predict,)h(mak-)-303 6607 y(ing)52 b(prefetching)h(dif)l(\002cult)f
(to)h(apply)-10 b(.)96 b(T)-5 b(raditional)51 b(optimizations)h(ha)m(v)
n(e)-303 6781 y(generally)36 b(focused)g(on)h(optimizing)d(indi)l
(vidual)g(data)j(objects)f(and)h(access)-303 6955 y(patterns)i([6,)i
(27,)g(19,)f(4],)h(b)m(ut)f(ha)m(v)n(e)g(generally)f(ne)n(glected)h(to)
f(tak)o(e)h(a)h(more)-303 7130 y(macroscopic)49 b(approach)f(that)g
(analyzes)h(and)g(transforms)f(entire)g(logical)-303
7304 y(data)42 b(structures.)60 b(High)41 b(le)l(v)n(el)h
(optimizations)e(ha)m(v)n(e)i(generally)f(been)i(lim-)-303
7479 y(ited)57 b(to)g(runtime)f(techniques)h(such)h(as)g(clustering,)k
(pro\002le-dri)l(v)n(en)55 b(lay-)-303 7653 y(out)35
b(optimization,)g(and)h(cache-conscious)h(g)o(arbage)f(collectors)g
([9,)g(31,)h(7,)-303 7827 y(23,)45 b(6].)67 b(W)-12 b(e)45
b(ha)m(v)n(e)f(de)l(v)n(eloped)g(a)g(macroscopic)h(approach)f(to)f
(optimizing)-303 8002 y(link)o(ed)53 b(data)h(structures)g(that)g(can)i
(enable)f(sophisticated)e(compile-time)-303 8176 y(transformations)32
b(of)i(entire)g(data)h(structures,)f(e)l(v)n(en)h(for)f(unsafe)g
(languages)-303 8350 y(lik)o(e)i(C.)p -303 8456 1594
7 v -300 8545 a Fu(\003)-229 8609 y Fp(This)c(w)o(ork)e(is)h(sponsored)
g(by)g(an)g(NSF)h(CAREER)f(a)n(w)o(ard,)h(grant)f(number)-303
8758 y(EIA-0093426,)e(and)h(supported)e(in)h(part)g(by)h(the)f(NSF)h
(Operating)e(Systems)-303 8908 y(and)37 b(Compilers)f(program)h(under)f
(grant)h(number)g(CCR-9988482)d(and)j(by)-303 9057 y(an)g(equipment)f
(donation)g(from)h(He)l(wlett)f(P)n(ackard.)4230 2403
y(This)i(paper)g(describes)h(a)g(technique)e(for)h(introducing)d
Fn(fully)j(automatic)4080 2578 y Fp(pool)43 b(allocation)g(of)h
(heap-allocated)g(data)g(structures)f(in)h(general)g(C)g(pro-)4080
2752 y(grams.)98 b(Pool)54 b(allocation)5500 2688 y Fm(1)5610
2752 y Fp(is)g(often)g(used)g(manually)g(by)f(programmers)4080
2926 y(to)i(increase)g(program)g(performance)g(because)h(pool)e
(allocators)g(are)i(of-)4080 3101 y(ten)33 b(more)g(ef)l(\002cient)g
(than)g(general)g(purpose)f(allocators,)h(and)g(the)g(resulting)4080
3275 y(allocation)45 b(patterns)h(often)g(ha)m(v)n(e)h(better)f(memory)
g(locality)-10 b(.)74 b(Fully)45 b(auto-)4080 3449 y(matic)39
b(pool)f(allocation)g(pro)n(vides)f(the)i(same)h(bene\002ts,)g(b)m(ut)e
(also)h(pro)n(vides)4080 3624 y(the)i(compiler)f(a)i(basis)f(for)f
(performing)f(ne)l(w)j(transformations)d(that)h(opti-)4080
3798 y(mize)e(entire)f(logical)f(data)h(structures,)g(as)h(discussed)f
(belo)l(w)-10 b(.)4230 3972 y(Although)53 b(pool)i(allocation)f(is)i(a)
h(commonly)e(applied)g(manual)h(opti-)4080 4147 y(mization,)38
b(we)h(are)g(not)e(a)n(w)o(are)i(of)f(an)n(y)g(pre)l(vious)f(compiler)h
(w)o(ork)f(that)g(au-)4080 4321 y(tomatically)k(introduces)g(pool)f
(allocation)h(into)g(general)h(programs)f(\(e.g.,)4080
4495 y(C)56 b(programs)g(using)f(malloc)h(and)g(free\).)103
b(Existing)55 b(techniques)g(for)g(au-)4080 4670 y(tomatic)c(pool)g
(allocation)f(are)j(primarily)d(runtime)h(techniques)g(that)g(use)4080
4844 y(heuristics)35 b(to)h(se)n(gre)n(g)o(ate)g(objects)g(into)e
(pools)h(by)h(size,)h(type,)f(or)g(predicted)4080 5018
y(lifetimes)46 b([15,)j(23].)74 b(The)47 b(closest)f(e)n(xample)h(to)f
(our)g(w)o(ork)f([2])h(uses)h(pro-)4080 5193 y(\002ling)55
b(to)h(identify)e(allocations)h(with)g(short)g(lifetimes)g(and)h(then)g
(places)4080 5367 y(these)67 b(in)e(\002x)n(ed)i(size)f(re)n(gions.)133
b(These)67 b(techniques)f(generally)f(do)h(not)4080 5541
y(tak)o(e)40 b(into)g(consideration)e(the)j(connecti)l(vity)d(of)j
(allocated)f(nodes,)h(and)g(do)4080 5716 y(not)h(pro)n(vide)f(an)n(y)h
(basis)g(for)g(ne)l(w)h(compile-time)f(transformations)e(\(Lan-)4080
5890 y(guage)61 b(support)e(for)g(manual)i(re)n(gion-based)e
(allocation)g(has)i(also)f(been)4080 6064 y(proposed)h([13])h(and)g
(could)f(be)i(used)f(for)g(macroscopic)g(compile-time)4080
6239 y(transformations,)49 b(b)m(ut)f(requires)f(manually)g(inserted)h
(annotations)e(to)h(di-)4080 6413 y(rect)38 b(it\).)4230
6587 y(The)i(k)o(e)n(y)f(to)h(the)f(automatic)h(pool)f(allocation)f
(transformation)g(is)i(iden-)4080 6762 y(tifying)29 b(logically)g
(disconnected)h(data)h(structures)f(and)g(their)g(interconnec-)4080
6936 y(tion)35 b(properties,)g(so)g(that)g(we)i(can)f(assign)f
(disjoint)f(data)h(structures)g(to)g(dif-)4080 7111 y(ferent)j(memory)g
(pools.)49 b(W)-12 b(e)38 b(use)h(an)f(analysis)g(described)g(in)f
(Section)h(2)g(to)4080 7285 y(identify)46 b(logically)h(disjoint)f
(data)i(structures,)i(and)e(use)h(it)e(to)h(compute)g(a)4080
7459 y(representation)32 b(we)i(call)f(the)g(Disjoint)e(Data)j
(Structure)e(Graph.)45 b(Our)33 b(anal-)4080 7634 y(ysis)46
b(to)f(construct)f(these)i(graphs)f(is)h(similar)f(to)g(pre)l(vious)f
(w)o(ork)h(on)g(heap)4080 7808 y(connection)32 b(analysis)i(and)f
(shape)h(analysis)f([18,)h(17,)g(14,)g(30,)g(22],)g(b)m(ut)e(dif-)4080
7982 y(fers)41 b(from)f(that)f(w)o(ork)g(in)h(a)h(fe)l(w)g(k)o(e)n(y)e
(w)o(ays)h(\(discussed)g(in)g(more)g(detail)g(in)4080
8157 y(Section)g(6\).)57 b(W)-12 b(e)41 b(perform)f(the)g(data)h
(structure)e(analysis)i(and)f(subsequent)4080 8331 y(transformations)55
b(entirely)h Fn(at)g(link-time)p Fp(,)k(using)c(a)h(compilation)e
(frame-)4080 8505 y(w)o(ork)40 b(called)h(LL)-15 b(VM,)42
b(described)e(brie\003y)h(in)f(subsection)g(1.1.)58 b(Link-time)4080
8680 y(is)39 b(an)g(appropriate)e(place)j(for)e(our)g(data)h(structure)
f(analysis,)h(because)h(it)e(is)4080 8854 y(fundamentally)e
(interprocedural.)4230 9028 y(Once)51 b(the)g(Disjoint)d(Data)k
(Structure)e(Graphs)g(ha)m(v)n(e)h(been)h(computed,)4080
9203 y(the)45 b(program)f(is)h(transformed)f(to)h(use)g(pool)f
(allocation,)i(as)f(described)g(in)4080 9377 y(Section)e(3.)64
b(This)43 b(transformation)e(can)i(only)f(be)i(applied)e(to)g(logical)g
(data)4080 9551 y(structures)e(that)h(are)h(accessed)h(in)d(a)i
(type-safe)f(manner)-8 b(.)58 b(If)41 b(the)f(graph)h(for)4080
9726 y(the)55 b(data)g(structure)e(contains)h(multiple)f(dif)l(ferent)h
(node)h(types,)k(a)c(sepa-)4080 9900 y(rate)36 b(pool)f(is)g(used)h
(for)f(each)h(node)g(type)f(so)h(that)f(each)h(pool)f(contains)g(only)
4080 10074 y(homogeneous)g(objects)g(\(Although)e(this)i(is)g(not)g
(necessary)-10 b(,)37 b(it)e(can)h(signif-)4080 10249
y(icantly)k(speed)h(up)f(allocation)f(and)h(deallocation)f(of)i(memory)
f(from)g(each)4080 10423 y(pool\).)106 b(The)59 b(runtime)d(system)i
(uses)g(pool)f(descriptors)f(to)h(record)g(rele-)p 4080
10584 V 4086 10692 a Fl(1)4155 10755 y Fp(Sometimes)38
b(called)f(re)n(gion-based)f(allocation)f([13].)p eop
end
%%Page: 2 2
TeXDict begin 2 1 bop 281 1385 a @beginspecial 0 @llx
0 @lly 1373 @urx 322 @ury 4320 @rwi @setspecial
%%BeginDocument: Figures/LLVMDiagramHighLevel.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: LLVMDiagramHighLevel.dia
%%Creator: Dia v0.88.1
%%CreationDate: Fri May 17 21:36:02 2002
%%For: sabre
%%Magnification: 1.0000
%%Orientation: Portrait
%%BoundingBox: 0 0 1373 322
%%Pages: 1
%%BeginSetup
%%EndSetup
%%EndComments
%%BeginProlog
[ /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E
/F /G /H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W /X /Y
/Z /bracketleft /backslash /bracketright /asciicircum /underscore /quoteleft /a /b /c
/d /e /f /g /h /i /j /k /l /m
/n /o /p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section /dieresis /copyright
/ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron /degree /plusminus /twosuperior /threesuperior
/acute /mu /paragraph /periodcentered /cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf
/threequarters /questiondown /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis /Eth /Ntilde
/Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply /Oslash /Ugrave /Uacute /Ucircumflex
/Udieresis /Yacute /Thorn /germandbls /agrave /aacute /acircumflex /atilde /adieresis /aring
/ae /ccedilla /egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide /oslash /ugrave
/uacute /ucircumflex /udieresis /yacute /thorn /ydieresis] /isolatin1encoding exch def
/Times-Roman-latin1
    /Times-Roman findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Times-Italic-latin1
    /Times-Italic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Times-Bold-latin1
    /Times-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Times-BoldItalic-latin1
    /Times-BoldItalic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/AvantGarde-Book-latin1
    /AvantGarde-Book findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/AvantGarde-BookOblique-latin1
    /AvantGarde-BookOblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/AvantGarde-Demi-latin1
    /AvantGarde-Demi findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/AvantGarde-DemiOblique-latin1
    /AvantGarde-DemiOblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Bookman-Light-latin1
    /Bookman-Light findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Bookman-LightItalic-latin1
    /Bookman-LightItalic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Bookman-Demi-latin1
    /Bookman-Demi findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Bookman-DemiItalic-latin1
    /Bookman-DemiItalic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Courier-latin1
    /Courier findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Courier-Oblique-latin1
    /Courier-Oblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Courier-Bold-latin1
    /Courier-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Courier-BoldOblique-latin1
    /Courier-BoldOblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-latin1
    /Helvetica findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-Oblique-latin1
    /Helvetica-Oblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-Bold-latin1
    /Helvetica-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-BoldOblique-latin1
    /Helvetica-BoldOblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-Narrow-latin1
    /Helvetica-Narrow findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-Narrow-Oblique-latin1
    /Helvetica-Narrow-Oblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-Narrow-Bold-latin1
    /Helvetica-Narrow-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-Narrow-BoldOblique-latin1
    /Helvetica-Narrow-BoldOblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/NewCenturySchoolbook-Roman-latin1
    /NewCenturySchoolbook-Roman findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/NewCenturySchoolbook-Italic-latin1
    /NewCenturySchoolbook-Italic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/NewCenturySchoolbook-Bold-latin1
    /NewCenturySchoolbook-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/NewCenturySchoolbook-BoldItalic-latin1
    /NewCenturySchoolbook-BoldItalic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Palatino-Roman-latin1
    /Palatino-Roman findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Palatino-Italic-latin1
    /Palatino-Italic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Palatino-Bold-latin1
    /Palatino-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Palatino-BoldItalic-latin1
    /Palatino-BoldItalic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Symbol-latin1
    /Symbol findfont
definefont pop
/ZapfChancery-MediumItalic-latin1
    /ZapfChancery-MediumItalic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/ZapfDingbats-latin1
    /ZapfDingbats findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/cp {closepath} bind def
/c {curveto} bind def
/f {fill} bind def
/a {arc} bind def
/ef {eofill} bind def
/ex {exch} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth pop} bind def
/tr {translate} bind def

/ellipsedict 8 dict def
ellipsedict /mtrx matrix put
/ellipse
{ ellipsedict begin
   /endangle exch def
   /startangle exch def
   /yrad exch def
   /xrad exch def
   /y exch def
   /x exch def   /savematrix mtrx currentmatrix def
   x y tr xrad yrad sc
   0 0 1 startangle endangle arc
   savematrix setmatrix
   end
} def

/mergeprocs {
dup length
3 -1 roll
dup
length
dup
5 1 roll
3 -1 roll
add
array cvx
dup
3 -1 roll
0 exch
putinterval
dup
4 2 roll
putinterval
} bind def
28.346000 -28.346000 scale
-0.864800 -23.366662 translate
%%EndProlog


0.100000 slw
[] 0 sd
[] 0 sd
0 slc
0 slj
0 slc
0 slj
[] 0 sd
1.000000 1.000000 1.000000 srgb
n 16.900000 15.300000 m 20.727106 15.300000 l 20.727106 17.228527 l 19.961685 16.907106 19.578974 16.907106 18.813553 17.228527 c 18.048132 17.549948 17.665421 17.549948 16.900000 17.228527 c 16.900000 15.300000 l f
0.000000 0.000000 0.000000 srgb
n 16.900000 15.300000 m 20.727106 15.300000 l 20.727106 17.228527 l 19.961685 16.907106 19.578974 16.907106 18.813553 17.228527 c 18.048132 17.549948 17.665421 17.549948 16.900000 17.228527 c 16.900000 15.300000 l s
/Courier-latin1 ff 0.800000 scf sf
(     ) dup sw 2 div 18.813553 ex sub 16.436886 m gs 1 -1 sc sh gr
1.000000 1.000000 1.000000 srgb
n 16.800000 19.300000 m 16.800000 20.900000 l 26.700000 20.900000 l 26.700000 19.300000 l f
0.100000 slw
[] 0 sd
[] 0 sd
0 slj
0.000000 0.000000 0.000000 srgb
n 16.800000 19.300000 m 16.800000 20.900000 l 26.700000 20.900000 l 26.700000 19.300000 l cp s
/Times-Roman-latin1 ff 1.200000 scf sf
(Optimizing Linker) dup sw 2 div 21.600000 ex sub 20.500000 m gs 1 -1 sc sh gr
/Times-Bold-latin1 ff 1.000000 scf sf
(.) dup sw 2 div 5.700000 ex sub 19.400000 m gs 1 -1 sc sh gr
(.) dup sw 2 div 5.700000 ex sub 20.400000 m gs 1 -1 sc sh gr
1.000000 1.000000 1.000000 srgb
n 34.300000 15.700000 m 34.300000 17.300000 l 44.700000 17.300000 l 44.700000 15.700000 l f
0.100000 slw
[] 0 sd
[] 0 sd
0 slj
0.000000 0.000000 0.000000 srgb
n 34.300000 15.700000 m 34.300000 17.300000 l 44.700000 17.300000 l 44.700000 15.700000 l cp s
/Times-Roman-latin1 ff 1.200000 scf sf
(Runtime Optimizer) dup sw 2 div 39.600000 ex sub 16.900000 m gs 1 -1 sc sh gr
/Helvetica-latin1 ff 0.800000 scf sf
(Optimized) dup sw 2 div 42.900000 ex sub 18.500000 m gs 1 -1 sc sh gr
(Code) dup sw 2 div 42.900000 ex sub 19.300000 m gs 1 -1 sc sh gr
/Helvetica-latin1 ff 0.800000 scf sf
(Profile) dup sw 2 div 36.300000 ex sub 18.200000 m gs 1 -1 sc sh gr
(& Trace) dup sw 2 div 36.300000 ex sub 19.000000 m gs 1 -1 sc sh gr
(Info) dup sw 2 div 36.300000 ex sub 19.800000 m gs 1 -1 sc sh gr
1.000000 1.000000 1.000000 srgb
n 34.300000 13.400000 m 34.300000 15.000000 l 44.600000 15.000000 l 44.600000 13.400000 l f
0.100000 slw
[] 0 sd
[] 0 sd
0 slj
0.000000 0.000000 0.000000 srgb
n 34.300000 13.400000 m 34.300000 15.000000 l 44.600000 15.000000 l 44.600000 13.400000 l cp s
/Times-Roman-latin1 ff 1.200000 scf sf
(Offline Reoptimizer) dup sw 2 div 39.500000 ex sub 14.500000 m gs 1 -1 sc sh gr
/Helvetica-latin1 ff 0.800000 scf sf
(Profile) dup sw 2 div 47.600000 ex sub 15.000000 m gs 1 -1 sc sh gr
(& Trace) dup sw 2 div 47.600000 ex sub 15.800000 m gs 1 -1 sc sh gr
(Info) dup sw 2 div 47.600000 ex sub 16.600000 m gs 1 -1 sc sh gr
/Helvetica-latin1 ff 0.800000 scf sf
(LLVM) dup sw 2 div 11.400000 ex sub 22.600000 m gs 1 -1 sc sh gr
/Helvetica-latin1 ff 0.800000 scf sf
(LLVM) dup sw 2 div 11.300000 ex sub 17.700000 m gs 1 -1 sc sh gr
/Times-Roman-latin1 ff 1.000000 scf sf
(LLVM) dup sw 2 div 18.800000 ex sub 16.600000 m gs 1 -1 sc sh gr
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
0 slj
0 slc
0 slj
[] 0 sd
0.815686 0.815686 0.815686 srgb
n 22.500002 15.300001 m 26.327108 15.300001 l 26.327108 17.228528 l 25.561687 16.907107 25.178976 16.907107 24.413555 17.228528 c 23.648134 17.549949 23.265423 17.549949 22.500002 17.228528 c 22.500002 15.300001 l f
0.000000 0.000000 0.000000 srgb
n 22.500002 15.300001 m 26.327108 15.300001 l 26.327108 17.228528 l 25.561687 16.907107 25.178976 16.907107 24.413555 17.228528 c 23.648134 17.549949 23.265423 17.549949 22.500002 17.228528 c 22.500002 15.300001 l s
/Courier-latin1 ff 0.800000 scf sf
(     ) dup sw 2 div 24.413555 ex sub 16.436887 m gs 1 -1 sc sh gr
/Times-Roman-latin1 ff 1.000000 scf sf
(Native) dup sw 2 div 24.500000 ex sub 16.500000 m gs 1 -1 sc sh gr
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
n 18.813553 17.228527 m 18.800000 19.300000 l s
0 slj
n 18.405243 18.497400 m 18.800000 19.300000 l 19.205225 18.502634 l f
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
n 24.413555 17.228528 m 24.400000 19.300000 l s
0 slj
n 24.005243 18.497400 m 24.400000 19.300000 l 24.805226 18.502635 l f
/Times-Roman-latin1 ff 1.500000 scf sf
(Libraries) dup sw 2 div 22.100000 ex sub 14.900000 m gs 1 -1 sc sh gr
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
0 slj
0 slc
0 slj
[] 0 sd
0.815686 0.815686 0.815686 srgb
n 36.696212 20.100002 m 42.161318 20.100002 l 42.915892 20.100002 43.527595 20.616465 43.527595 21.253555 c 43.527595 21.890645 42.915892 22.407108 42.161318 22.407108 c 36.696212 22.407108 l 35.941638 22.407108 35.329936 21.890645 35.329936 21.253555 c 35.329936 20.616465 35.941638 20.100002 36.696212 20.100002 c f
0.000000 0.000000 0.000000 srgb
n 36.696212 20.100002 m 42.161318 20.100002 l 42.915892 20.100002 43.527595 20.616465 43.527595 21.253555 c 43.527595 21.890645 42.915892 22.407108 42.161318 22.407108 c 36.696212 22.407108 l 35.941638 22.407108 35.329936 21.890645 35.329936 21.253555 c 35.329936 20.616465 35.941638 20.100002 36.696212 20.100002 c s
/Times-Roman-latin1 ff 1.500000 scf sf
(           ) dup sw 2 div 39.428765 ex sub 21.757401 m gs 1 -1 sc sh gr
/Times-Roman-latin1 ff 1.300000 scf sf
(Host Machine) dup sw 2 div 39.429900 ex sub 21.600000 m gs 1 -1 sc sh gr
1.000000 1.000000 1.000000 srgb
n 1.100000 17.300000 m 1.100000 18.900000 l 10.100000 18.900000 l 10.100000 17.300000 l f
0.100000 slw
[] 0 sd
[] 0 sd
0 slj
0.000000 0.000000 0.000000 srgb
n 1.100000 17.300000 m 1.100000 18.900000 l 10.100000 18.900000 l 10.100000 17.300000 l cp s
/Times-Roman-latin1 ff 1.200000 scf sf
(Static Compiler 1) dup sw 2 div 5.700000 ex sub 18.400000 m gs 1 -1 sc sh gr
1.000000 1.000000 1.000000 srgb
n 1.100000 20.800000 m 1.100000 22.400000 l 10.100000 22.400000 l 10.100000 20.800000 l f
0.100000 slw
[] 0 sd
[] 0 sd
0 slj
0.000000 0.000000 0.000000 srgb
n 1.100000 20.800000 m 1.100000 22.400000 l 10.100000 22.400000 l 10.100000 20.800000 l cp s
/Times-Roman-latin1 ff 1.200000 scf sf
(Static Compiler N) dup sw 2 div 5.600000 ex sub 21.900000 m gs 1 -1 sc sh gr
0.080000 slw
0 slj
[] 0 sd
1.000000 1.000000 1.000000 srgb
n 12.033300 18.533333 m 12.033300 21.366663 l 15.366630 21.366663 l 15.366630 18.533333 l f
0.000000 0.000000 0.000000 srgb
n 12.033300 18.533333 m 12.033300 21.366663 l s
n 15.366630 18.533333 m 15.366630 21.366663 l s
1.000000 1.000000 1.000000 srgb
n 13.699965 18.533333 1.666665 0.833333 0 360 ellipse f
0.000000 0.000000 0.000000 srgb
n 13.699965 18.533333 1.666665 0.833333 0 360 ellipse cp s
1.000000 1.000000 1.000000 srgb
n 13.699965 21.366663 m 13.699965 21.366663 1.666665 0.833333 0.000000 180.000000 ellipse f
0.000000 0.000000 0.000000 srgb
n 13.699965 21.366663 1.666665 0.833333 0.000000 180.000000 ellipse s
/Helvetica-latin1 ff 0.800000 scf sf
(.o files) dup sw 2 div 13.718500 ex sub 20.700000 m gs 1 -1 sc sh gr
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
n 10.100000 18.100000 m 12.000000 19.600000 l s
0 slj
n 11.124236 19.418238 m 12.000000 19.600000 l 11.619952 18.790331 l f
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
n 10.100000 21.600000 m 12.000000 20.600000 l s
0 slj
n 11.478364 21.326564 m 12.000000 20.600000 l 11.105767 20.618630 l f
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
n 15.400000 19.900000 m 16.800000 19.900000 l s
0 slj
n 16.000000 20.300000 m 16.800000 19.900000 l 16.000000 19.500000 l f
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
n 15.400000 20.100000 m 16.800000 20.100000 l s
0 slj
n 16.000000 20.500000 m 16.800000 20.100000 l 16.000000 19.700000 l f
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
n 15.400000 20.300000 m 16.800000 20.300000 l s
0 slj
n 16.000000 20.700000 m 16.800000 20.300000 l 16.000000 19.900000 l f
/Helvetica-latin1 ff 0.800000 scf sf
(LLVM) dup sw 2 div 16.500000 ex sub 19.000000 m gs 1 -1 sc sh gr
0.080000 slw
0 slj
[] 0 sd
1.000000 1.000000 1.000000 srgb
n 28.333300 18.533333 m 28.333300 21.366663 l 31.666630 21.366663 l 31.666630 18.533333 l f
0.000000 0.000000 0.000000 srgb
n 28.333300 18.533333 m 28.333300 21.366663 l s
n 31.666630 18.533333 m 31.666630 21.366663 l s
1.000000 1.000000 1.000000 srgb
n 29.999965 18.533333 1.666665 0.833333 0 360 ellipse f
0.000000 0.000000 0.000000 srgb
n 29.999965 18.533333 1.666665 0.833333 0 360 ellipse cp s
1.000000 1.000000 1.000000 srgb
n 29.999965 21.366663 m 29.999965 21.366663 1.666665 0.833333 0.000000 180.000000 ellipse f
0.000000 0.000000 0.000000 srgb
n 29.999965 21.366663 1.666665 0.833333 0.000000 180.000000 ellipse s
/Helvetica-latin1 ff 0.800000 scf sf
(.exe) dup sw 2 div 30.000000 ex sub 20.000000 m gs 1 -1 sc sh gr
(\(llvm +) dup sw 2 div 30.000000 ex sub 20.800000 m gs 1 -1 sc sh gr
(native\)) dup sw 2 div 30.000000 ex sub 21.600000 m gs 1 -1 sc sh gr
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
n 26.700000 20.100000 m 28.300000 20.100000 l s
0 slj
n 27.500000 20.500000 m 28.300000 20.100000 l 27.500000 19.700000 l f
/Helvetica-latin1 ff 0.800000 scf sf
(.exe) dup sw 2 div 27.400000 ex sub 19.100000 m gs 1 -1 sc sh gr
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
n 31.700000 21.300000 m 35.200000 21.253600 l s
0 slj
n 34.405373 21.664170 m 35.200000 21.253600 l 34.394768 20.864240 l f
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
n 38.019200 20.100000 m 38.000000 17.300000 l s
0 slj
n 38.405476 18.097238 m 38.000000 17.300000 l 37.605495 18.102724 l f
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
n 40.900000 17.300000 m 40.838400 20.100000 l s
0 slj
n 40.456093 19.291396 m 40.838400 20.100000 l 41.255899 19.308991 l f
0.100000 slw
[] 0 sd
[] 0 sd
0 slj
0 slc
n 31.700000 20.500000 m 34.500000 20.500000 32.000000 17.700000 34.300000 16.500000 c s
0 slj
n 33.775759 17.224687 m 34.300000 16.500000 l 33.405706 16.515419 l f
0.100000 slw
[] 0 sd
[] 0 sd
0 slj
0 slc
n 31.700000 19.700000 m 33.900000 18.300000 31.600000 15.500000 34.300000 14.200000 c s
0 slj
n 32.160179 18.933035 m 31.700000 19.700000 l 32.589679 19.607964 l f
0 slj
n 33.752725 14.907453 m 34.300000 14.200000 l 33.405672 14.186652 l f
0.100000 slw
[] 0 sd
[] 0 sd
0 slj
0 slc
n 43.527595 21.253555 m 49.400000 21.200000 46.700000 15.200000 44.600000 14.200000 c s
0 slj
n 45.494262 14.182803 m 44.600000 14.200000 l 45.150315 14.905091 l f
showpage

%%EndDocument
 @endspecial 2102 1726 a Fq(Figur)m(e)38 b(1:)46 b Fk(LL)-12
b(VM)33 b(system)f(ar)n(chitectur)n(e)h(and)h(compilation)f(pr)n(ocess)
-303 2343 y Fp(v)l(ant)39 b(bookk)o(eeping)e(information,)h(including)f
(the)i(connecti)l(vity)f(between)-303 2518 y(link)o(ed)e(pools.)50
b(The)39 b(compiler)f(inserts)f(code)i(to)f(allocate)h(and)f(destro)o
(y)f(the)-303 2692 y(pool)k(descriptors)g(for)h(each)h(logical)e(data)i
(structure)e(instance)i(within)d(the)-303 2866 y(\223root\224)e
(function)f(that)i(entirely)e(contains)h(the)h(lifetime)f(of)h(the)f
(data)h(struc-)-303 3041 y(ture.)50 b(The)39 b(compiler)f(then)g(re)l
(writes)g(all)g(the)h(allocation)e(and)h(deletion)f(op-)-303
3215 y(erations)g(for)g(that)g(data)g(structure)g(to)g(allocate)h(and)f
(free)i(heap)f(objects)f(out)-303 3389 y(of)47 b(the)g(appropriate)g
(pools.)76 b(The)48 b(entire)f(memory)h(of)f(a)h(pool)f(as)h(well)f(as)
-303 3564 y(the)32 b(pool)f(descriptors)g(are)i(released)h(back)e(to)g
(the)g(system)h(at)g(the)f(point)f(that)-303 3738 y(the)k(data)h
(structure)f(it)g(contains)g(is)g(no)g(longer)g(accessible)i(\(i.e.,)g
(at)e(the)h(e)n(xit)-303 3912 y(from)h(the)h(root)f(function\).)48
b(Section)37 b(4)h(presents)g(e)n(xperimental)g(results)f(on)-303
4087 y(the)44 b(ef)l(fecti)l(v)n(eness)h(of)f(the)g(data)g(structure)g
(analysis)g(and)g(pool)f(allocation)-303 4261 y(transformations.)-154
4435 y(The)66 b(disjoint)c(data)k(structure)e(analysis)h(combined)f
(with)g(automatic)-303 4610 y(pool)54 b(allocation)h(can)h(enable)g
(sophisticated)f(optimizations)e(for)j(link)o(ed)-303
4784 y(data)48 b(structures,)i(because)f(the)e(compiler)h(has)g(much)g
(more)g(information)-303 4958 y(about)38 b(allocation)g(patterns)h(and)
g(locality)f(properties)g(of)h(nodes)g(allocated)-303
5133 y(from)53 b(the)g(pools.)94 b(W)-12 b(e)54 b(brie\003y)f(describe)
g(a)h(fe)l(w)g(such)f(optimizations)e(in)-303 5307 y(Section)42
b(5,)j(including)40 b(a)k(no)n(v)n(el)e Fn(automatic)f(pointer)g(compr)
-6 b(ession)43 b Fp(trans-)-303 5481 y(formation,)38
b(ho)l(we)l(v)n(er)h(e)l(v)l(aluating)f(these)h(transformations)e(is)h
(be)n(yond)g(the)-303 5656 y(scope)33 b(of)g(this)g(paper)-8
b(.)45 b(The)33 b(pointer)f(compression)h(technique)f(addresses)i(a)
-303 5830 y(k)o(e)n(y)i(problem)g(in)g(64-bit)f(architectures)h(\227)i
(pointer)m(-intensi)l(v)n(e)33 b(data)k(struc-)-303 6005
y(tures)h(pay)i(a)f(signi\002cant)f(penalty)h(in)f(terms)h(of)g(memory)
h(size)f(\(and)g(there-)-303 6179 y(fore,)63 b(cache)c(ef)l(\002cienc)n
(y)f(and)f(memory)h(bandwidth\))e(because)j(of)e(using)-303
6353 y(64-bit)42 b(pointers.)67 b(The)45 b(transformation)e(we)i
(propose)f Fn(tr)n(anspar)-6 b(ently)43 b Fp(and)-303
6528 y Fn(safely)55 b Fp(replaces)i(64-bit)c(pointers)i(within)f(each)i
(logical)f(pool-allocated)-303 6702 y(structure)44 b(with)f(smaller)j
(\(16)e(or)g(32-bit\))f(of)l(fsets)i(into)f(the)g(pool,)j(and)d(dy-)
-303 6876 y(namically)j(changes)i(pointer)e(sizes)i(and)f(re)l(writes)g
(the)h(pool)e(contents)g(as)-303 7051 y(the)52 b(data)h(structure)f
(gro)l(ws.)92 b(One)53 b(of)g(the)f(goals)g(of)h(our)f(future)g(w)o
(ork)f(is)-303 7225 y(to)44 b(implement)g(and)h(e)l(v)l(aluate)g(the)g
(pointer)m(-size)e(compression)i(and)g(other)-303 7399
y(optimizations)35 b(enabled)i(by)g(automatic)f(pool)g(allocation.)-303
7750 y Fo(1.1)198 b(The)50 b(LL)-18 b(VM)49 b(Compilation)h(System)-154
7966 y Fp(Our)43 b(w)o(ork)f(has)i(been)g(implemented)f(within)e(the)j
(LL)-15 b(VM)44 b(compilation)-303 8140 y(system.)52
b(LL)-15 b(VM)39 b(\227)h(Lo)l(w)f(Le)l(v)n(el)g(V)-9
b(irtual)38 b(Machine)h(\227)g(is)g(a)h(compilation)-303
8314 y(system)46 b(designed)f(to)g(support)f(high)h(le)l(v)n(el)g
(optimizations)f(for)h Fn(link-time)p Fp(,)-303 8489
y Fn(runtime)p Fp(,)g(and)f Fn(of)m(\003ine)f Fp(compilation.)66
b(The)44 b(k)o(e)n(y)g(idea)g(in)f(LL)-15 b(VM)45 b(is)f(to)f(use)-303
8663 y(a)48 b(rich)f(virtual)f(instruction)f(set)j(\(instead)f(of)g(ra)
n(w)h(machine)g(code\))g(as)g(the)-303 8837 y(code)35
b(representation)f(manipulated)g(by)h(a)h(link-time)d(optimizer)h(and)i
(code)-303 9012 y(generator)-8 b(.)52 b(The)40 b(LL)-15
b(VM)40 b(instruction)d(set)i(uses)h(lo)l(w-le)l(v)n(el)e(RISC-lik)o(e)
f(op-)-303 9186 y(erations,)j(b)m(ut)f(pro)n(vides)f(rich)i
(information)d(about)i(the)h(operands,)g(includ-)-303
9360 y(ing)d(e)n(xtensi)l(v)n(e)g(language-independent)f(type)h
(information)f(and)i(data\003o)l(w)-303 9535 y(information)f(in)j
(Static)f(Single)g(Assignment)g(form.)54 b(The)41 b(LL)-15
b(VM)40 b(compi-)-303 9709 y(lation)i(strate)n(gy)i(is)g(depicted)g(in)
f(Figure)h(1,)i(and)f(an)f(e)n(xample)h(C)f(function)-303
9883 y(and)29 b(it')-8 b(s)29 b(corresponding)e(LL)-15
b(VM)30 b(assembly)g(code)g(are)h(sho)l(wn)e(in)g(Figure)g(2.)-154
10058 y(The)63 b(LL)-15 b(VM)63 b(instruction)d(set)j(and)g(types)f
(are)h(lo)l(w-le)l(v)n(el)f(enough)f(to)-303 10232 y(represent)52
b(programs)g(from)g(an)n(y)h(source)f(language,)57 b(enabling)51
b(arbitrary)-303 10406 y(source-le)l(v)n(el)k(compilers)g(to)g
(generate)g(LL)-15 b(VM)56 b(object)f(code)h(instead)f(of)-303
10581 y(machine)e(code.)94 b(Once)53 b(link)o(ed,)i(the)e(LL)-15
b(VM)53 b(code)g(pro)n(vides)f(important)-303 10755 y(information)34
b(about)i(the)h(program)f(that)g(is)h(not)f(present)h(in)f(machine)h
(code,)4080 2343 y(such)46 b(as)h(type)e(and)h(data\003o)l(w)g
(information.)70 b(This)45 b(is)h(important)e(because)4080
2518 y(interprocedural)37 b(optimization)g(is)i(much)g(more)g(con)-6
b(v)n(enient)38 b(at)h(link-time)4080 2692 y(than)52
b(during)f(source-le)l(v)n(el)h(compilation)f(\(since)i(the)f(latter)g
(can)h(require)4080 2866 y(signi\002cant)47 b(changes)h(in)f(the)g(de)l
(v)n(elopment)g(process)h(to)f(mak)o(e)g(complete)4080
3041 y(or)c(nearly)g(complete)g(application)e(source)j(code)f(a)m(v)l
(ailable\).)64 b(T)-5 b(raditional)4080 3215 y(compilation)49
b(strate)n(gies)g(\(which)h(only)f(manipulate)h(lo)l(w-le)l(v)n(el)f
(machine)4080 3389 y(code)e(at)g(link)e(time\))i(mak)o(e)g(it)e(dif)l
(\002cult)h(to)g(perform)g(high-le)l(v)n(el)f(analyses)4080
3564 y(and)37 b(transformations)f(due)h(to)g(lack)g(of)g(high-le)l(v)n
(el)e(information)7509 3500 y Fm(2)7602 3564 y Fp([3,)i(1].)4230
3738 y(W)-12 b(e)52 b(ha)m(v)n(e)h(written)d(an)j(LL)-15
b(VM)52 b(back)o(end)g(for)f(GCC,)h(which)g(currently)4080
3912 y(allo)l(ws)34 b(compilation)f(of)h(C)g(to)g(LL)-15
b(VM)35 b(and)f(will)f(support)g(C++)i(in)f(the)g(near)4080
4087 y(future.)43 b(The)30 b(LL)-15 b(VM)29 b(infrastructure)f
(includes)g(standard)h(scalar)g(optimiza-)4080 4261 y(tion)48
b(passes)h(and)g(an)g(optimizing)e(link)o(er)-8 b(.)79
b(The)49 b(optimizing)e(link)o(er)g(links)4080 4435 y(the)41
b(dif)l(ferent)f(LL)-15 b(VM)42 b(object)e(code)h(\002les)h(\(along)e
(with)f(an)n(y)i(libraries)f(that)4080 4610 y(ha)m(v)n(e)e(been)f
(compiled)g(into)f(LL)-15 b(VM)37 b(object)g(code\),)h(performs)f
(interproce-)4080 4784 y(dural)52 b(optimizations)f(on)i(the)f
(resulting)f(program,)57 b(and)c(then)f(generates)4080
4958 y(nati)l(v)n(e)57 b(machine)i(code)f(for)f(a)h(SP)-14
b(ARC)58 b(v9)f(architecture.)108 b(W)-12 b(e)58 b(are)h(cur)m(-)4080
5133 y(rently)45 b(de)l(v)n(eloping)f(the)h(runtime)g(and)g(of)l
(\003ine)h(optimizers)e(sho)l(wn)i(in)f(the)4080 5307
y(diagram.)60 b(The)43 b(analysis)e(and)h(transformations)e(described)h
(in)g(this)g(paper)4080 5481 y(are)d(implemented)f(in)f(the)h(LL)-15
b(VM)38 b(optimizing)d(link)o(er)-8 b(.)4080 5887 y Fo(2.)199
b(D)-7 b(A)-19 b(T)h(A)49 b(STR)-6 b(UCTURE)49 b(AN)l(AL)-18
b(YSIS)4230 6103 y Fp(Automatic)31 b(pool)g(allocation)g(requires)h(a)h
(program)f(analysis)g(which)g(e)n(x-)4080 6278 y(poses)40
b(the)f(allocation)f(pattern)h(of)g(the)g(program,)h(the)f(connecti)l
(vity)f(graph)4080 6452 y(of)29 b(allocated)g(memory)g(objects,)i(and)e
(indicates)g(whether)g(or)g(not)f(the)h(trans-)4080 6626
y(formation)41 b(is)g(pro)n(v)l(ably)g Fn(safe)h Fp(to)f(perform.)60
b(Additionally)-10 b(,)41 b(such)h(analysis)4080 6801
y(\(which)h(is)g(fundamentally)e(interprocedural\))g(must)i(be)h(ef)l
(\002ciently)e(com-)4080 6975 y(putable)55 b(if)h(automatic)f(pool)g
(allocation)f(is)i(to)g(be)g(feasible)g(in)f(practice.)4080
7149 y(The)45 b(data)f(structure)g(analysis)f(graph)h(is)g(our)g
(representation)f(for)g(solving)4080 7324 y(these)38
b(problems.)4230 7498 y(Our)52 b(implementation)f(of)i(the)f(data)h
(structure)f(analysis)g(algorithm)g(is)4080 7672 y(implemented)k(in)g
(the)h(conte)n(xt)e(of)h(the)h(LL)-15 b(VM)57 b(system,)62
b(b)m(ut)56 b(should)f(be)4080 7847 y(easily)36 b(adaptable)f(to)g
(other)g(systems)h(with)f(similar)g(analysis)g(capabilities.)4080
8021 y(The)60 b(data)f(structure)f(analysis)g(should)g(also)h(be)g
(directly)f(applicable)g(to)4080 8195 y(static)i(or)f(link-time)f
(compilers)h(for)g(Ja)m(v)l(a)i(bytecode)e(or)g(the)h(Microsoft)4080
8370 y(Common)54 b(Language)h(Runtime)e(\(CLR\),)h(which)f(ha)m(v)n(e)i
(rich,)j(high-le)l(v)n(el)4080 8544 y(bytecode)43 b(representations)f
(from)h(which)f(the)h(necessary)h(analysis)f(infor)m(-)4080
8718 y(mation)37 b(can)g(be)h(e)n(xtracted.)4230 8893
y(The)f(k)o(e)n(y)g(analysis)g(information)e(we)i(use)h(is)f(as)h
(follo)l(ws:)4302 9190 y Fs(\017)75 b Fp(SSA)36 b(form)f(\226)g(W)-12
b(e)36 b(assume)h(a)f(lo)l(w-le)l(v)n(el)e(code)i(representation)f
(with)4454 9365 y(an)47 b(in\002nite)e(set)h(of)h(virtual)d(re)n
(gisters,)49 b(and)d(a)h(load-store)f(architec-)4454
9539 y(ture)55 b(\(memory)g(locations)f(can)i(be)f(accessed)i(only)e
(via)g(load)f(and)4454 9713 y(store)43 b(operations\).)64
b(The)44 b(virtual)d(re)n(gisters)i(are)h(assumed)g(to)f(be)h(in)4454
9888 y(SSA)32 b(form,)g(b)m(ut)f(the)g(memory)h(locations)e(are)j(not.)
43 b(W)-12 b(e)32 b(assume)h(that)p 4080 9987 1594 7
v 4086 10094 a Fl(2)4155 10157 y Fp(In)50 b(f)o(act,)k(some)c
(commercial)h(compilers)f(e)n(xport)f(the)h(static)g(compiler')-8
b(s)4080 10307 y(internal)46 b(representation)f(in)h(order)g(to)g
(enable)h(more)g(sophisticated)e(link-)4080 10456 y(time)i
(optimizations)e([1,)k(8,)h(12].)75 b(In)47 b(contrast,)i(LL)-15
b(VM)47 b(pro)n(vides)f(a)i(sim-)4080 10606 y(pler)-6
b(,)34 b(and)f(more)g(ele)n(g)o(ant)f(solution)f(that)h(can)i(w)o(ork)d
(with)h(arbitrary)f(source-)4080 10755 y(le)l(v)n(el)37
b(compilers,)g(enabling)f(sophisticated)g(high-le)l(v)n(el)f
(optimizations.)p eop end
%%Page: 3 3
TeXDict begin 3 2 bop -303 -212 a Fj(/*)79 b(C)g(Source)f(Code)h(*/)
-303 -63 y(struct)f(Patient)f({)j(...)e(};)-303 87 y(typedef)f(struct)h
(List)h({)-144 236 y(struct)f(List)318 b(*forward;)-144
386 y(struct)78 b(Patient)g(*patient;)-144 535 y(struct)g(List)318
b(*back;)-303 685 y(})79 b(List;)-303 984 y(void)f(addList\(List)e
(*list,)i(struct)g(Patient)g(*pt\))g({)-144 1133 y(List)h(*b)g(=)g
(NULL;)-144 1282 y(while)f(\(list)g(!=)i(NULL\))e({)15
1432 y(b)i(=)f(list;)15 1581 y(list)g(=)g(list->forward;)-144
1731 y(})-144 1880 y(list)g(=)g(\(List)f(*\)malloc\(sizeof\(List\)\);)
-144 2030 y(list->patient)e(=)j(pt;)-144 2179 y(list->forward)d(=)j
(NULL;)-144 2329 y(list->back)316 b(=)79 b(b;)-144 2478
y(b->forward)316 b(=)79 b(list;)-303 2627 y(})3835 -219
y(;;)g(LLVM)f(assembly)g(code)3835 -70 y(\045Patient)f(=)i(type)g({)g
(...)g(})3835 80 y(\045List)317 b(=)79 b(type)g({)g(\045List*,)f
(\045Patient*,)f(\045List*)h(})3835 378 y(void)g
(\045addList\(\045List*)d(\045list,)j(\045Patient*)f(\045pt\))i({)3835
528 y(bb0:)3994 677 y(\045cond1)f(=)h(seteq)g(\045List*)e(\045list,)h
(null)3994 827 y(br)h(bool)g(\045cond1,)e(label)h(\045bb3,)h(label)f
(\045bb2)3835 976 y(bb2:)3994 1126 y(\045list1)g(=)h(phi)239
b(\045List*)77 b([\045list2,\045bb2],)f([\045list,\045bb0])3994
1275 y(\045list2)i(=)h(load)159 b(\045List*)77 b(\045list1,)h(uint)h(0)
3994 1425 y(\045cond2)f(=)h(setne)g(\045List*)e(\045list2,)h(null)3994
1574 y(br)h(bool)g(\045cond2,)e(label)h(\045bb2,)h(label)f(\045bb3)3835
1723 y(bb3:)3994 1873 y(\045b)398 b(=)79 b(phi)239 b(\045List*)77
b([\045list1,\045bb2],)f([null,\045bb0])3994 2022 y(\045list3)i(=)h
(malloc)f(\045List)3994 2172 y(store)g(\045Patient*)f(\045pt,)318
b(\045List*)78 b(\045list3,)f(uint)i(1)3994 2321 y(store)f(\045List*)
317 b(null,)238 b(\045List*)78 b(\045list3,)f(uint)i(0)3994
2471 y(store)f(\045List*)317 b(\045b,)398 b(\045List*)78
b(\045list3,)f(uint)i(2)3994 2620 y(store)f(\045List*)317
b(\045list3,)78 b(\045List*)g(\045b,)397 b(uint)79 b(0)3994
2770 y(ret)g(void)3835 2919 y(})1917 3219 y Fq(Figur)m(e)38
b(2:)46 b Fk(A)33 b(C)g(function)h(and)f(the)g(corr)n(esponding)g(LL)
-12 b(VM)33 b(assembly)g(code)70 3715 y Fp(it)h(is)g(impossible)g(to)g
(tak)o(e)g(the)g(address)h(of)f(an)h(SSA)g(virtual)e(re)n(gister)-8
b(.)70 3889 y(Using)43 b(SSA)h(form)f(is)g(not)g(essential,)i(b)m(ut)e
(it)g(simpli\002es)g(the)g(analy-)70 4063 y(sis)38 b(because)h(re)n
(gister)e(v)l(alues)h(cannot)f(be)h(killed,)f(and)h(it)f(allo)l(ws)g
(for)70 4238 y(ef)l(\002cient)h(identi\002cation)d(of)h(uses)i(of)f(v)l
(alues.)-81 4548 y Fs(\017)74 b Fp(Identi\002cation)36
b(of)i(memory)h(objects)e(\226)h(W)-12 b(e)39 b(assume)g(that)f(the)g
(com-)70 4722 y(piler)44 b(can)h(distinguish)c(four)j(types)g(of)g
(memory)h(objects,)h(namely)-10 b(,)70 4896 y(heap)53
b(objects)f(allocated)g(by)g Fr(malloc)p Fp(,)j(stack)d(objects)g
(allocated)70 5071 y(by)c Fr(alloca)p Fp(,)h(global)e(v)l(ariables,)k
(and)d(functions;)j(and)d(can)h(iden-)70 5245 y(tify)36
b(the)h(declared)h(types)e(of)h(each)h(object.)-81 5555
y Fs(\017)74 b Fp(T)-12 b(ype)56 b(information)d(\226)j(W)-12
b(e)56 b(assume)h(that)e(all)g(SSA)g(v)l(ariables)h(and)70
5730 y(memory)d(objects)e(ha)m(v)n(e)i(an)f(associated)h(type.)91
b(The)53 b(type)f(system)70 5904 y(only)i(needs)h(to)f(distinguish)e
(primiti)l(v)n(e)h(types)i(\(e.g.,)60 b(inte)n(ger)54
b(and)70 6078 y(\003oating)44 b(point\),)g(pointers,)i(structures)d
(\(i.e.,)48 b(user)m(-de\002ned)c(aggre-)70 6253 y(g)o(ates\),)i(and)d
(arrays.)66 b(Only)42 b(memory)i(objects)f(can)h(ha)m(v)n(e)g
(structure)70 6427 y(and)38 b(array)h(types,)f(i.e.,)h(only)f
Fr(load)p Fp(,)f Fr(store)p Fp(,)g Fr(malloc)g Fp(and)h
Fr(al-)70 6601 y(loca)45 b Fp(operations)f(are)i(possible)f(on)g(such)h
(types.)72 b(All)44 b(SSA)i(v)l(ari-)70 6776 y(ables)38
b(must)f(be)g(of)g(primiti)l(v)n(e)e(or)i(pointer)f(type.)-81
7086 y Fs(\017)74 b Fp(Safety)79 b(information)e(\226)h(Our)h(analysis)
f(requires)g(that)g(there)h(is)70 7260 y(some)45 b(w)o(ay)e(to)g
(distinguish)e(type-safe)i(and)h(type-unsafe)f(usage)h(of)70
7434 y(data)62 b(v)l(alues.)121 b(In)61 b(LL)-15 b(VM,)63
b(all)f(operations)e(\(including)g(memory)70 7609 y(load/store)29
b(operations\))f(follo)l(w)g(strict)h(type)g(rules,)j(e.g.,)g(it)d(is)h
(ille)n(g)o(al)70 7783 y(to)42 b(add)g(an)h(inte)n(ger)e(and)i(a)g
(\003oating)e(point)g(number)-6 b(,)43 b(or)g(to)e(perform)70
7958 y(arithmetic)29 b(on)h(a)g(pointer)e(type.)44 b(LL)-15
b(VM)30 b(includes)f(a)i Fr(cast)d Fp(instruc-)70 8132
y(tion)46 b(that)h(can)h(be)g(used)f(to)g(con)-6 b(v)n(ert)46
b(between)i(types)f(\(e.g.,)k(before)70 8306 y(adding)40
b(an)h(inte)n(ger)e(and)i(a)g(\003oat\),)g(b)m(ut)f(most)g(such)h(cast)
g(operations)70 8481 y(do)29 b(not)g(actually)f(violate)h(type)f
(safety)i(for)e(the)i(underlying)d(data)i(v)l(al-)70
8655 y(ues.)67 b(A)44 b(speci\002c)g(form)f(of)h(this)f(instruction)e
(\(casting)i(to)g(a)h(pointer)70 8829 y(type\))28 b(is)h(the)f
Fn(single)g Fp(w)o(ay)g(that)g(type-unsafe)g(operations)f(can)i(be)g
(per)m(-)70 9004 y(formed)k(in)f(LL)-15 b(VM.)34 b(This)e(mechanism)i
(is)f(suf)l(\002cient)f(to)g(implement)70 9178 y(arbitrary)56
b(unsafe)h(code,)63 b(and)57 b(mak)o(es)h(violations)c(of)j(type)g
(safety)70 9352 y(tri)l(vial)36 b(to)g(detect.)-303 9668
y Fo(2.1)198 b(The)50 b(Disjoint)g(Data)f(Structur)l(e)j(Graph)-154
9883 y Fp(The)71 b(Disjoint)d(Data)j(Structure)f(Graph)g(\(or)g(simply)
f(data)i(structure)-303 10058 y(graph\))28 b(is)h(the)h(primary)e
(representation)g(of)h(the)h(access)h(patterns)d(of)h(a)h(func-)-303
10232 y(tion,)h(library)-10 b(,)31 b(or)f(whole)g(program.)44
b(Each)32 b(node)e(in)g(the)h(graph)f(represents)g(a)-303
10406 y(typed)f(SSA)i(re)n(gister)f(or)g(a)h(memory)g(object)f
(allocated)g(by)g(the)h(program,)g(or)-303 10581 y(multiple)36
b(objects)h(of)g(the)g(same)i(type.)47 b(A)37 b(node)g(is)h
(represented)f(by)g(a)h(node)-303 10755 y(type)54 b(\(described)h(belo)
l(w\),)60 b(the)55 b(program)f(type)h(of)g(the)g(memory)g(object,)4080
3715 y(and)50 b(a)g(set)g(of)f(\002elds.)84 b(A)49 b(node)h(contains)e
(one)i(\002eld)g(for)f(e)l(v)n(ery)g(primiti)l(v)n(e)4080
3889 y(or)44 b(pointer)e(v)l(alue)i(contained)e(in)h(the)h(object,)h
(including)c(\002elds)j(of)f(nested)4080 4063 y(structures.)61
b(An)42 b(array)-10 b(,)44 b(ho)l(we)l(v)n(er)-6 b(,)44
b(is)e(represented)g(as)h(a)f(node)g(with)f(a)i(sin-)4080
4238 y(gle)35 b(\002eld,)i(i.e.,)f(our)f(analysis)g(does)h(not)f(track)
g(indi)l(vidual)e(array)j(elements.)4080 4412 y(Note)d(that)g(an)h
(ordinary)e(pointer)g(v)l(ariable)h(is)g(represented)h(in)f(the)g
(graph)g(as)4080 4586 y(a)38 b(node)f(with)f(a)i(single)e(\002eld,)h
(for)g(uniformity)-10 b(.)4230 4761 y(Each)65 b(edge)f(in)f(the)h
(graph)g(connects)g(a)g(pointer)f(\002eld)h(of)g(one)g(node)4080
4935 y(\(the)46 b(source)g(\002eld\))g(to)f(a)i(\002eld)e(of)h(another)
f(node)h(\(the)g(tar)m(get)f(\002eld\).)73 b(The)4080
5109 y(souce)41 b(or)e(tar)m(get)h(of)g(an)g(edge)h(is)f(represented)g
(as)h(a)f Fi(<)p Fp(node,)i(\002eld-inde)n(x)p Fi(>)4080
5284 y Fp(pair)-8 b(.)144 b(A)71 b(pointer)d(\002eld)i(may)g(ha)m(v)n
(e)h(edges)f(to)f(multiple)g(tar)m(gets,)78 b(i.e.,)4080
5458 y(edges)42 b(represent)g(\223may-point-to\224)e(information.)57
b(In)42 b(practice,)h(ho)l(we)l(v)n(er)-6 b(,)4080 5632
y(a)53 b(pointer)f(\002eld)g(usually)g(has)h(a)g(single)f(outgoing)e
(edge)j(because)h(of)f(the)4080 5807 y(node-mer)m(ging)36
b(technique)h(described)g(in)f(Section)h Fh(2.2.3)p Fp(.)4230
5981 y(The)42 b(\002nished)f(analysis)h(graph)f(for)g(the)h
Fr(addlist)d Fp(function)i(\(de\002ned)4080 6155 y(in)i(Figure)g(2\))g
(is)g(sho)l(wn)h(in)f(Figure)f(3.)66 b(Its)43 b(construction)e(will)h
(be)i(used)g(as)4080 6330 y(the)37 b(running)e(e)n(xample)j(to)e(e)n
(xplain)h(the)g(data)g(structure)f(graph.)p 4221 6463
3703 7 v 4221 8405 7 1942 v 4273 8360 a @beginspecial
35 @llx 35 @lly 451 @urx 249 @ury 2160 @rwi @setspecial
%%BeginDocument: Figures/addList.ps
%!PS-Adobe-2.0
%%Creator: dot version 1.8.2 (Fri Mar 15 13:54:34 EST 2002)
%%For: (lattner) Christopher Lattner
%%Title: DataStructures
%%Pages: (atend)
%%BoundingBox: 35 35 451 249
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 451 249
%%PageOrientation: Portrait
gsave
35 35 416 214 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	Node0x424a40
gsave 10 dict begin
newpath 116 85 moveto
184 85 lineto
stroke
newpath 184 85 moveto
190 85 196 91 196 97 curveto
stroke
newpath 196 97 moveto
196 113 lineto
stroke
newpath 196 113 moveto
196 119 190 125 184 125 curveto
stroke
newpath 184 125 moveto
116 125 lineto
stroke
newpath 116 125 moveto
110 125 104 119 104 113 curveto
stroke
newpath 104 113 moveto
104 97 lineto
stroke
newpath 104 97 moveto
104 91 110 85 116 85 curveto
stroke
gsave 10 dict begin
150 110 moveto 78 -0.5 (new  %List) alignedtext
end grestore
newpath 104 105 moveto
196 105 lineto
stroke
gsave 10 dict begin
119 90 moveto 4 -0.5 ( ) alignedtext
end grestore
newpath 134 85 moveto
134 105 lineto
stroke
gsave 10 dict begin
149 90 moveto 4 -0.5 ( ) alignedtext
end grestore
newpath 165 85 moveto
165 105 lineto
stroke
gsave 10 dict begin
180 90 moveto 4 -0.5 ( ) alignedtext
end grestore
end grestore

%	Node0x424a40 -> Node0x424a40
newpath 135 84 moveto
156 71 192 54 214 76 curveto
232 94 232 115 214 134 curveto
204 144 190 139 178 131 curveto
stroke
0.000 0.000 0.000 edgecolor
134 85 2 2 ellipse_path
fill
0.000 0.000 0.000 edgecolor
0.000 0.000 0.000 edgecolor
newpath 177 133 moveto
170 125 lineto
180 129 lineto
closepath
fill
0.000 0.000 0.000 edgecolor

%	Node0x424a40 -> Node0x424a40
newpath 190 84 moveto
195 81 199 78 205 76 curveto
223 69 235 61 250 76 curveto
268 94 268 115 250 134 curveto
233 151 206 142 185 130 curveto
stroke
0.000 0.000 0.000 edgecolor
189 85 2 2 ellipse_path
fill
0.000 0.000 0.000 edgecolor
0.000 0.000 0.000 edgecolor
newpath 184 132 moveto
177 125 lineto
187 128 lineto
closepath
fill
0.000 0.000 0.000 edgecolor

%	Node0x4051f8
gsave 10 dict begin
newpath 93 8 moveto
207 8 lineto
stroke
newpath 207 8 moveto
213 8 219 14 219 20 curveto
stroke
newpath 219 20 moveto
219 36 lineto
stroke
newpath 219 36 moveto
219 42 213 48 207 48 curveto
stroke
newpath 207 48 moveto
92 48 lineto
stroke
newpath 92 48 moveto
87 48 81 42 81 36 curveto
stroke
newpath 81 36 moveto
81 20 lineto
stroke
newpath 81 20 moveto
81 14 87 8 93 8 curveto
stroke
gsave 10 dict begin
150 33 moveto 124 -0.5 (shadow  %Patient) alignedtext
end grestore
newpath 81 28 moveto
219 28 lineto
stroke
gsave 10 dict begin
150 13 moveto 4 -0.5 ( ) alignedtext
end grestore
end grestore

%	Node0x424a40 -> Node0x4051f8
newpath 150 84 moveto
150 77 150 67 150 58 curveto
stroke
0.000 0.000 0.000 edgecolor
150 85 2 2 ellipse_path
fill
0.000 0.000 0.000 edgecolor
0.000 0.000 0.000 edgecolor
newpath 148 58 moveto
150 48 lineto
153 58 lineto
closepath
fill
0.000 0.000 0.000 edgecolor

%	Node0x40e1a0Closed
gsave 10 dict begin
0.000 0.000 0.702 nodecolor
43 105 43 21 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
12.00 /Times-Roman set_font
43 107 moveto 62 -0.5 ( %Patient*) alignedtext
43 94 moveto 24 -0.5 (%pt) alignedtext
end grestore
end grestore

%	Node0x40e1a0Closed -> Node0x4051f8
gsave 10 dict begin
0.000 0.000 0.702 edgecolor
newpath 68 88 moveto
82 78 99 65 114 54 curveto
stroke
0.000 0.000 0.702 edgecolor
67 88 2 2 ellipse_path
fill
0.000 0.000 0.702 edgecolor
0.000 0.000 0.702 edgecolor
newpath 113 52 moveto
122 48 lineto
116 56 lineto
closepath
fill
0.000 0.000 0.702 edgecolor
end grestore

%	Node0x410458Closed
gsave 10 dict begin
0.000 0.000 0.702 nodecolor
93 183 33 21 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
12.00 /Times-Roman set_font
93 185 moveto 43 -0.5 ( %List*) alignedtext
93 172 moveto 28 -0.5 (%list) alignedtext
end grestore
end grestore

%	Node0x410458Closed -> Node0x424a40
gsave 10 dict begin
0.000 0.000 0.702 edgecolor
newpath 108 163 moveto
115 154 123 143 130 133 curveto
stroke
0.000 0.000 0.702 edgecolor
107 164 2 2 ellipse_path
fill
0.000 0.000 0.702 edgecolor
0.000 0.000 0.702 edgecolor
newpath 128 132 moveto
135 125 lineto
132 135 lineto
closepath
fill
0.000 0.000 0.702 edgecolor
end grestore

%	Node0x4119c8Closed
gsave 10 dict begin
0.000 0.000 0.702 nodecolor
newpath 198 201 moveto
144 201 lineto
144 165 lineto
198 165 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
12.00 /Times-Roman set_font
171 185 moveto 43 -0.5 ( %List*) alignedtext
171 172 moveto 19 -0.5 (%b) alignedtext
end grestore
end grestore

%	Node0x4119c8Closed -> Node0x424a40
gsave 10 dict begin
0.000 0.000 0.702 edgecolor
newpath 166 164 moveto
164 155 161 145 158 135 curveto
stroke
0.000 0.000 0.702 edgecolor
166 165 2 2 ellipse_path
fill
0.000 0.000 0.702 edgecolor
0.000 0.000 0.702 edgecolor
newpath 155 135 moveto
155 125 lineto
160 134 lineto
closepath
fill
0.000 0.000 0.702 edgecolor
end grestore

%	Node0x411478Closed
gsave 10 dict begin
0.000 0.000 0.702 nodecolor
newpath 270 201 moveto
216 201 lineto
216 165 lineto
270 165 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
12.00 /Times-Roman set_font
243 185 moveto 43 -0.5 ( %List*) alignedtext
243 172 moveto 34 -0.5 (%list3) alignedtext
end grestore
end grestore

%	Node0x411478Closed -> Node0x424a40
gsave 10 dict begin
0.000 0.000 0.702 edgecolor
newpath 220 164 moveto
208 154 195 143 182 132 curveto
stroke
0.000 0.000 0.702 edgecolor
221 165 2 2 ellipse_path
fill
0.000 0.000 0.702 edgecolor
0.000 0.000 0.702 edgecolor
newpath 180 133 moveto
174 125 lineto
183 130 lineto
closepath
fill
0.000 0.000 0.702 edgecolor
end grestore

%	Node0x40eb60Closed
gsave 10 dict begin
0.000 0.000 0.702 nodecolor
newpath 342 201 moveto
288 201 lineto
288 165 lineto
342 165 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
12.00 /Times-Roman set_font
315 185 moveto 43 -0.5 ( %List*) alignedtext
315 172 moveto 35 -0.5 (%list2) alignedtext
end grestore
end grestore

%	Node0x40eb60Closed -> Node0x424a40
gsave 10 dict begin
0.000 0.000 0.702 edgecolor
newpath 287 166 moveto
284 165 282 163 279 162 curveto
246 144 234 142 204 129 curveto
stroke
0.000 0.000 0.702 edgecolor
288 167 2 2 ellipse_path
fill
0.000 0.000 0.702 edgecolor
0.000 0.000 0.702 edgecolor
newpath 202 131 moveto
194 125 lineto
204 126 lineto
closepath
fill
0.000 0.000 0.702 edgecolor
end grestore

%	Node0x411980Closed
gsave 10 dict begin
0.000 0.000 0.702 nodecolor
newpath 414 201 moveto
360 201 lineto
360 165 lineto
414 165 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
12.00 /Times-Roman set_font
387 185 moveto 43 -0.5 ( %List*) alignedtext
387 172 moveto 32 -0.5 (%list1) alignedtext
end grestore
end grestore

%	Node0x411980Closed -> Node0x424a40
gsave 10 dict begin
0.000 0.000 0.702 edgecolor
newpath 359 165 moveto
356 164 354 163 351 162 curveto
287 136 263 147 202 128 curveto
stroke
0.000 0.000 0.702 edgecolor
360 166 2 2 ellipse_path
fill
0.000 0.000 0.702 edgecolor
0.000 0.000 0.702 edgecolor
newpath 202 131 moveto
193 125 lineto
203 126 lineto
closepath
fill
0.000 0.000 0.702 edgecolor
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1
%%Trailer
%%Pages: 1
end
restore
%%EOF

%%EndDocument
 @endspecial 7918 8405 V 4221 8412 3703 7 v 4763 8700
a Fq(Figur)m(e)i(3:)46 b Fk(Data)34 b(structur)n(e)e(graph)i(f)m(or)g
Fj(addList)4230 8967 y Fp(This)50 b(data)g(structure)f(graph)h(sho)l
(ws)g(the)g(graphical)f(notation)f(we)j(will)4080 9142
y(be)f(using)e(to)h(illustrate)f(the)h(analysis)g(results.)82
b(In)49 b(our)g(graphs,)k(the)c(dark)4080 9316 y(rounded)f(objects)h
(represent)g(actual)g(memory)g(objects)g(that)f(e)n(xist)g(in)h(the)
4080 9490 y(program,)78 b(whereas)70 b(the)f(lighter)f(objects)h
(represent)g(scalar)h(v)l(alues)g(in)4080 9665 y(the)37
b(function)e(\(elliptical)g(scalar)j(v)l(alues)f(indicate)f(incoming)g
(ar)m(guments\).)4080 9839 y(The)55 b(three)e(pointer)g(\002elds)h(of)f
(the)h Fr(\045List)e Fp(type)i(are)g(re\003ected)h(directly)4080
10013 y(in)d(the)h(data)g(structure)e(graph)i(as)g(three)g(\002elds)f
(in)g(the)h Fr(\045List)e Fp(memory)4080 10188 y(object.)4230
10362 y(W)-12 b(e)37 b(use)f(eight)g(distinct)e(node)i(types)g(to)g
(distinguish)d(dif)l(ferent)i(kinds)h(of)4080 10536 y(objects:)p
eop end
%%Page: 4 4
TeXDict begin 4 3 bop -117 -137 a Fp(1.)75 b Fr(new)44
b Fp(node)h(\226)f(Represents)h(memory)g(allocated)f(on)g(the)h(heap)g
(with)70 37 y(the)37 b Fr(malloc)f Fp(operation.)-117
254 y(2.)75 b Fr(alloca)45 b Fp(node)i(\226)f(Represents)h(memory)g
(allocated)g(on)f(the)h(stack)70 429 y(of)40 b(the)f(current)g
(function)f(\(either)h(by)h(the)f Fr(alloca)f Fp(instruction)f(or)70
603 y(because)47 b(the)e(address)h(of)f(an)g(automatic)g(v)l(ariable)g
(must)h(be)f(a)m(v)l(ail-)70 777 y(able\).)-117 995 y(3.)75
b Fr(global)g Fp(node)i(\226)g(Represents)f(the)h(memory)g(occupied)g
(by)f(a)70 1169 y(global)36 b(v)l(ariable.)-117 1387
y(4.)75 b Fr(function)35 b Fp(node)i(\226)g(Represents)h(a)g(function)d
(in)i(memory)-10 b(.)48 b(These)70 1561 y(nodes)37 b(serv)n(e)h(as)g
(the)e(tar)m(gets)i(of)e(function)g(pointers.)-117 1778
y(5.)75 b Fr(call)57 b Fp(node)h(\226)g(Represents)g(a)h(call)f(to)f(a)
i(function.)108 b(Contains)56 b(a)70 1953 y(\002eld)43
b(holding)e(one)h(or)h(more)g(pointers)f(to)g(the)h(called)f
Fr(function)70 2127 y Fp(node\(s\),)33 b(plus)f(\002elds)g(holding)e
(pointers)h(to)h(the)g(formal)f(ar)m(guments.)-117 2345
y(6.)75 b Fr(shadow)55 b Fp(node)h(\226)g(Represents)g(memory)h(that)f
(we)g(kno)l(w)g(e)n(xists,)70 2519 y(b)m(ut)37 b(don')m(t)f(kno)l(w)g
(ho)l(w)h(it)g(is)g(allocated.)-117 2736 y(7.)75 b Fr(cast)62
b Fp(node)h(\226)g(Represents)g(memory)g(used)g(in)f(a)i(non-typesafe)
70 2911 y(manner)-8 b(.)-117 3128 y(8.)75 b Fr(scalar)44
b Fp(node)h(\226)g(Represent)h(SSA)f(re)n(gisters)g(of)g(pointer)f
(type)h(in)70 3302 y(the)58 b(current)f(function.)108
b(These)59 b(nodes)f(ha)m(v)n(e)g(a)g(single)g(\002eld)g(that)70
3477 y(holds)30 b(the)g(set)h(of)f(memory)g(objects)g(a)h(scalar)g
(pointer)e(may)i(point)e(to.)70 3651 y(Because)46 b(we)f(assume)h(that)
f(it)f(is)g(impossible)g(to)g(tak)o(e)h(the)g(address)70
3825 y(of)40 b(an)h(SSA)f(re)n(gister)-6 b(,)40 b(there)g(may)h(be)g
(no)e(edges)i(pointing)d(to)h(scalar)70 4000 y(nodes.)-154
4299 y(F)n(or)53 b(the)g(purposes)f(of)h(analysis,)k(the)c
Fr(alloca)e Fp(and)i Fr(new)f Fp(nodes)h(are)-303 4473
y(treated)70 b(identically)-10 b(,)78 b(and)70 b(referred)h(to)f(as)h
(\223allocation\224)f(nodes.)146 b(The)-303 4648 y Fr(global)44
b Fp(and)h Fr(function)f Fp(nodes)h(are)i(also)e(treated)h(identically)
-10 b(,)47 b(since)-303 4822 y(all)36 b(functions)g(bodies)h(are)g
(global)f(objects)h(\(with)f(no)h(pointer)e(\002elds\).)-154
4996 y Fr(Shadow)d Fp(nodes)i(are)h(special)f(nodes)g(that)g(are)h
(used)f(to)f(represent)h(cases)-303 5171 y(where)h(memory)h(is)f
(allocated)g(outside)f(of)h(the)g(scope)g(of)g(the)g(analysis,)h(b)m
(ut)-303 5345 y(referenced)51 b(in)f(the)g(current)g(function.)86
b(Because)51 b(we)g(don')m(t)f(kno)l(w)g(what)-303 5519
y(kind)43 b(of)i(memory)g(it)g(is)f(\(global)g(v)l(ariable)h(or)f(an)h
(allocation\),)h(we)f(cannot)-303 5694 y(assign)37 b(it)f(a)i(concrete)
f(node,)g(so)h(we)f(mak)o(e)h(it)e(a)i(special)f Fr(shadow)f
Fp(node.)-154 5868 y(The)52 b(data)g(structure)e(graph)h(is)g(computed)
g(directly)f(from)h(the)g(LL)-15 b(VM)-303 6042 y(source.)48
b(The)38 b(k)o(e)n(y)f(goal)h(of)f(the)h(analysis)f(is)h(to)f
(construct)g(a)h(data)g(structure)-303 6217 y(graph)g(for)h(each)h
(function)d(in)h(the)h(program,)h(identifying)c(distinct)h(logical)-303
6391 y(data)51 b(structures)f(that)g(are)h(visible)f(to)g(each)i
(function.)86 b(F)n(or)50 b(pool)g(alloca-)-303 6566
y(tion)c(and)i(other)g(transformations,)h(it)e(is)h(important)e(to)i
(separate)g Fn(disjoint)-303 6740 y Fp(data)g(structures)f(into)f
(distinct)g(logical)h(data)h(structures)f(instead)h(of)f(con-)-303
6914 y(serv)l(ati)l(v)n(ely)40 b(mer)m(ging)h(them.)59
b(F)n(or)40 b(this)h(reason,)i(our)d(analysis)h(is)g(conte)n(xt-)-303
7089 y(sensiti)l(v)n(e.)-154 7263 y(The)58 b(strengths)d(of)i(our)f
(analysis)h(include)f(identi\002cation)f(of)h(disjoint)-303
7437 y(data)42 b(structures,)h(small)f(analysis)g(time,)h(concise)g
(summarization)e(of)h(im-)-303 7612 y(portant)56 b(information,)61
b(uni\002ed)c(handling)g(of)g(both)g(heap)h(and)g(stack)g(al-)-303
7786 y(locations,)c(and)d(a)h(clear)g(splitting)d(of)i(the)g(analysis)g
(between)h(intra-)e(and)-303 7960 y(inter)m(-procedural)j(analyses.)102
b(Splitting)52 b(the)k(analysis)f(into)f(an)i(tw)o(o)e(dif-)-303
8135 y(ferent)49 b(stages)i(allo)l(ws)f(the)g(intraprocedural)e
(portion)g(of)i(the)g(analysis)f(to)-303 8309 y(be)40
b(performed)g(separately)g(for)g(each)h(module,)g(requiring)e(only)g
(the)h(inter)m(-)-303 8483 y(procedural)60 b(portion)f(to)i(be)h(e)n(x)
n(ecuted)f(at)g(link-time.)118 b(Section)61 b(2.2)g(de-)-303
8658 y(scribes)54 b(the)g(intraprocedural)f(analysis,)58
b(used)d(to)e(b)m(uild)g(the)h(initial)e(v)n(er)m(-)-303
8832 y(sion)i(of)h(the)g(data)g(structure)g(graph)f(for)h(each)h
(procedure.)100 b(Section)55 b(2.3)-303 9006 y(describes)g(the)g
(interprocedural)f(analysis)h(used)g(to)g(compute)g(the)g(inter)m(-)
-303 9181 y(procedural)36 b(closure)h(of)g(the)g(graph.)-303
9493 y Fo(2.2)198 b(Intrapr)l(ocedural)51 b(Analysis)d(Algorithm)-154
9709 y Fp(The)g(intraprocedural)d(graph)i(computation)f(phase)i(is)f(a)
h Fn(\003ow-insensi-)-303 9883 y(tive)33 b Fp(analysis)g(that)g(b)m
(uilds)f(a)i(data)f(structure)g(graph)f(without)g(requiring)f(the)-303
10058 y(code)53 b(for)f(other)h(functions)e(to)i(be)g(a)m(v)l(ailable.)
94 b(The)53 b(result)g(of)f(this)h(algo-)-303 10232 y(rithm)40
b(is)h(the)g(data)g(structure)g(graph,)h(and)f(the)g(returned)g
(pointer)e(set.)59 b(The)-303 10406 y(returned)43 b(pointer)f(set)i(is)
g(used)g(to)g(track)g(which)f(pointers)g(v)l(alues)h(may)h(be)-303
10581 y(returned)c(from)g(the)h(function,)g(and)g(is)g(used)g(when)g
(computing)e(the)i(inter)m(-)-303 10755 y(procedural)36
b(closure)h(of)g(the)g(graph.)4230 -137 y(The)47 b(graph)f
(construction)e(algorithm)h(is)i(composed)f(of)h(three)f(distinct)4080
37 y(phases:)73 b(the)50 b(node)g(disco)n(v)n(ery)f(phase,)55
b(the)50 b(w)o(orklist)e(processing)i(phase,)4080 211
y(and)44 b(the)g(graph)g(simpli\002cation)f(phase.)68
b(These)45 b(analyses)g(are)g(performed)4080 386 y(directly)51
b(on)g(the)g(LL)-15 b(VM)53 b(code)e(representation,)k(making)c(e)n
(xtensi)l(v)n(e)g(use)4080 560 y(of)k(the)g(type)f(information)f(pro)n
(vided.)98 b(Although)53 b(our)i(analysis)f(is)h(\003o)l(w)4080
734 y(insensiti)l(v)n(e,)h(the)d(use)h(of)f(SSA)g(form)g(inherently)f
(pro)n(vides)g(a)h(de)n(gree)h(of)4080 909 y(\003o)l(w)33
b(sensiti)l(vity)e(and)i(reduces)h(the)f(occurrence)g(of)g(spurious)f
(edges)h(in)g(the)4080 1083 y(graph.)4080 1396 y Fh(2.2.1)183
b(Node)46 b(Disco)n(very)h(Phase)4230 1612 y Fp(The)42
b(node)f(disco)n(v)n(ery)f(phase)i(performs)f(a)h(single)f(pass)h(o)n
(v)n(er)f(the)g(func-)4080 1787 y(tion)51 b(being)g(processed,)57
b(creating)51 b(the)h(nodes)g(that)f(mak)o(e)h(up)g(the)g(graph.)4080
1961 y(Speci\002cally)-10 b(,)60 b(it)54 b(generates)h(a)h(node)e(of)h
(the)f(appropriate)g(type)g(for)g(each)4080 2135 y(function)42
b(call,)k(allocation)c(\(stack)i(or)f(heap\),)j(and)e(global)e(v)l
(ariable)h(refer)m(-)4080 2310 y(enced.)80 b(It)47 b(creates)i
Fr(cast)e Fp(nodes)g(to)h(represent)g(unsafe)g(pointer)e(con)-6
b(v)n(er)m(-)4080 2484 y(sions)33 b(and)f(scalar)i(nodes)f(for)f(SSA)h
(pointer)f(re)n(gisters.)44 b(Shado)l(w)33 b(nodes)g(are)4080
2658 y(created)43 b(for)g(v)l(alues)f(that)g(point)f(to)i(unkno)l(wn)e
(v)l(alues)i(\(incoming)e(pointer)4080 2833 y(v)l(alues)49
b(and)f(the)g(return)g(v)l(alue)g(of)g(function)f(calls)h(that)g
(return)g(pointers\).)4080 3007 y(The)34 b(w)o(orklist)d(processing)h
(phase)i(can)g(only)e(add)h(ne)l(w)g(shado)l(w)g(nodes)g(and)4080
3181 y(edges)39 b(to)f(the)g(graph,)h(so)f(all)h(nodes)f(of)g(other)g
(types)g(come)h(from)f(the)h(node)4080 3356 y(disco)n(v)n(ery)d(phase.)
4230 3530 y(As)44 b(nodes)f(are)i(generated,)h(all)d(SSA)h(v)l
(ariables)g(that)f(point)f(to)h(the)h(ne)l(w)4080 3704
y(nodes)67 b(\(for)e(e)n(xample,)75 b(the)66 b Fr(\045list3)f
Fp(v)l(ariable\))h(ha)m(v)n(e)g(their)g(outgoing)4080
3879 y(edges)47 b(updated,)i(and)e(all)f Fn(uses)h Fp(of)g(these)g(SSA)
g(v)l(ariables)f(are)h(put)f(on)h(the)4080 4053 y(w)o(orklist.)c(The)33
b(graph)g(computed)g(for)f Fr(addList)f Fp(after)i(the)g(node)g(disco)n
(v-)4080 4227 y(ery)42 b(phase)g(is)g(sho)l(wn)f(in)h(Figure)f(4.)60
b(Note)42 b(that)f(none)g(of)h(the)f(\002elds)h(of)g(the)4080
4402 y(allocated)k(nodes)h(ha)m(v)n(e)g(outgoing)d(edges)j(yet,)i(nor)d
(do)g(the)h(scalar)g(v)l(alues)4080 4576 y Fr(\045list1)p
Fp(,)36 b Fr(\045list2)p Fp(,)g(and)h Fr(\045b)p Fp(.)p
4221 4698 3703 7 v 4221 5667 7 969 v 4273 5622 a @beginspecial
35 @llx 35 @lly 592 @urx 171 @ury 2160 @rwi @setspecial
%%BeginDocument: Figures/addList_nodedisc.ps
%!PS-Adobe-2.0
%%Creator: dot version 1.8.2 (Fri Mar 15 13:54:34 EST 2002)
%%For: (lattner) Christopher Lattner
%%Title: DataStructures
%%Pages: (atend)
%%BoundingBox: 35 35 592 171
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 592 171
%%PageOrientation: Portrait
gsave
35 35 557 136 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	ListNew
gsave 10 dict begin
newpath 12 8 moveto
80 8 lineto
stroke
newpath 80 8 moveto
86 8 92 14 92 20 curveto
stroke
newpath 92 20 moveto
92 36 lineto
stroke
newpath 92 36 moveto
92 42 86 48 80 48 curveto
stroke
newpath 80 48 moveto
12 48 lineto
stroke
newpath 12 48 moveto
6 48 0 42 0 36 curveto
stroke
newpath 0 36 moveto
0 20 lineto
stroke
newpath 0 20 moveto
0 14 6 8 12 8 curveto
stroke
gsave 10 dict begin
46 33 moveto 78 -0.5 (new  %List) alignedtext
end grestore
newpath 0 28 moveto
92 28 lineto
stroke
gsave 10 dict begin
15 13 moveto 4 -0.5 ( ) alignedtext
end grestore
newpath 30 8 moveto
30 28 lineto
stroke
gsave 10 dict begin
45 13 moveto 4 -0.5 ( ) alignedtext
end grestore
newpath 61 8 moveto
61 28 lineto
stroke
gsave 10 dict begin
76 13 moveto 4 -0.5 ( ) alignedtext
end grestore
end grestore

%	ListShad
gsave 10 dict begin
newpath 122 8 moveto
213 8 lineto
stroke
newpath 213 8 moveto
219 8 225 14 225 20 curveto
stroke
newpath 225 20 moveto
225 36 lineto
stroke
newpath 225 36 moveto
225 42 219 48 213 48 curveto
stroke
newpath 213 48 moveto
122 48 lineto
stroke
newpath 122 48 moveto
116 48 110 42 110 36 curveto
stroke
newpath 110 36 moveto
110 20 lineto
stroke
newpath 110 20 moveto
110 14 116 8 122 8 curveto
stroke
gsave 10 dict begin
167 33 moveto 101 -0.5 (shadow  %List) alignedtext
end grestore
newpath 110 28 moveto
225 28 lineto
stroke
gsave 10 dict begin
129 13 moveto 4 -0.5 ( ) alignedtext
end grestore
newpath 148 8 moveto
148 28 lineto
stroke
gsave 10 dict begin
167 13 moveto 4 -0.5 ( ) alignedtext
end grestore
newpath 186 8 moveto
186 28 lineto
stroke
gsave 10 dict begin
205 13 moveto 4 -0.5 ( ) alignedtext
end grestore
end grestore

%	PatientShad
gsave 10 dict begin
newpath 254 8 moveto
368 8 lineto
stroke
newpath 368 8 moveto
374 8 380 14 380 20 curveto
stroke
newpath 380 20 moveto
380 36 lineto
stroke
newpath 380 36 moveto
380 42 374 48 368 48 curveto
stroke
newpath 368 48 moveto
254 48 lineto
stroke
newpath 254 48 moveto
248 48 242 42 242 36 curveto
stroke
newpath 242 36 moveto
242 20 lineto
stroke
newpath 242 20 moveto
242 14 248 8 254 8 curveto
stroke
gsave 10 dict begin
311 33 moveto 124 -0.5 (shadow  %Patient) alignedtext
end grestore
newpath 242 28 moveto
380 28 lineto
stroke
gsave 10 dict begin
311 13 moveto 4 -0.5 ( ) alignedtext
end grestore
end grestore

%	pt
gsave 10 dict begin
0.000 0.000 0.702 nodecolor
296 105 43 21 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
12.00 /Times-Roman set_font
296 107 moveto 62 -0.5 ( %Patient*) alignedtext
296 94 moveto 24 -0.5 (%pt) alignedtext
end grestore
end grestore

%	pt -> PatientShad
gsave 10 dict begin
0.000 0.000 0.702 edgecolor
newpath 300 83 moveto
301 75 303 66 305 58 curveto
stroke
0.000 0.000 0.702 edgecolor
300 84 2 2 ellipse_path
fill
0.000 0.000 0.702 edgecolor
0.000 0.000 0.702 edgecolor
newpath 303 57 moveto
307 48 lineto
307 58 lineto
closepath
fill
0.000 0.000 0.702 edgecolor
end grestore

%	list
gsave 10 dict begin
0.000 0.000 0.702 nodecolor
156 105 33 21 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
12.00 /Times-Roman set_font
156 107 moveto 43 -0.5 ( %List*) alignedtext
156 94 moveto 28 -0.5 (%list) alignedtext
end grestore
end grestore

%	list -> ListShad
gsave 10 dict begin
0.000 0.000 0.702 edgecolor
newpath 159 83 moveto
160 75 161 66 162 58 curveto
stroke
0.000 0.000 0.702 edgecolor
159 84 2 2 ellipse_path
fill
0.000 0.000 0.702 edgecolor
0.000 0.000 0.702 edgecolor
newpath 160 57 moveto
164 48 lineto
164 58 lineto
closepath
fill
0.000 0.000 0.702 edgecolor
end grestore

%	b
gsave 10 dict begin
0.000 0.000 0.702 nodecolor
newpath 411 123 moveto
357 123 lineto
357 87 lineto
411 87 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
12.00 /Times-Roman set_font
384 107 moveto 43 -0.5 ( %List*) alignedtext
384 94 moveto 19 -0.5 (%b) alignedtext
end grestore
end grestore

%	list3
gsave 10 dict begin
0.000 0.000 0.702 nodecolor
newpath 84 123 moveto
30 123 lineto
30 87 lineto
84 87 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
12.00 /Times-Roman set_font
57 107 moveto 43 -0.5 ( %List*) alignedtext
57 94 moveto 34 -0.5 (%list3) alignedtext
end grestore
end grestore

%	list3 -> ListNew
gsave 10 dict begin
0.000 0.000 0.702 edgecolor
newpath 54 85 moveto
53 77 51 67 50 58 curveto
stroke
0.000 0.000 0.702 edgecolor
54 87 2 2 ellipse_path
fill
0.000 0.000 0.702 edgecolor
0.000 0.000 0.702 edgecolor
newpath 48 58 moveto
49 48 lineto
52 58 lineto
closepath
fill
0.000 0.000 0.702 edgecolor
end grestore

%	list2
gsave 10 dict begin
0.000 0.000 0.702 nodecolor
newpath 483 123 moveto
429 123 lineto
429 87 lineto
483 87 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
12.00 /Times-Roman set_font
456 107 moveto 43 -0.5 ( %List*) alignedtext
456 94 moveto 35 -0.5 (%list2) alignedtext
end grestore
end grestore

%	list1
gsave 10 dict begin
0.000 0.000 0.702 nodecolor
newpath 555 123 moveto
501 123 lineto
501 87 lineto
555 87 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
12.00 /Times-Roman set_font
528 107 moveto 43 -0.5 ( %List*) alignedtext
528 94 moveto 32 -0.5 (%list1) alignedtext
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1
%%Trailer
%%Pages: 1
end
restore
%%EOF

%%EndDocument
 @endspecial 7918 5667 V 4221 5674 3703 7 v 4702 5963
a Fq(Figur)m(e)h(4:)46 b Fj(addList)31 b Fk(graph)j(after)g(node)f
(disco)o(v)o(ery)4230 6241 y Fp(The)53 b(w)o(orklist)d(currently)i
(contains)g Fr(\045cond1)f Fp(and)h Fr(\045list1)f Fp(\(which)4080
6415 y(use)39 b(\045list\),)g(and)f(the)h(four)e(store)i(instructions)d
(\(which)i(use)h Fr(\045list3)d Fp(and)4080 6589 y Fr(\045pt)p
Fp(\).)4080 6903 y Fh(2.2.2)183 b(W)-17 b(orklist)46
b(pr)-8 b(ocessing)4230 7119 y Fp(On)46 b(entry)g(to)g(the)h(w)o
(orklist)d(processing)i(phase)h(of)f(the)h(algorithm,)h(the)4080
7293 y(node)36 b(disco)n(v)n(ery)e(phase)i(has)h(created)f(data)g
(structure)f(nodes)h(for)f(all)g(of)h(the)4080 7467 y(non-shado)l(w)d
(nodes)g(\(and)g(some)h(shado)l(w)g(nodes\))f(in)g(the)g(function)f
(graph.)4080 7642 y(The)k(w)o(orklist)d(contains)i(all)g(of)g(the)g
(instructions)e(in)i(the)h(function)d(that)i(use)4080
7816 y(the)52 b(SSA)h(v)l(alues)g(corresponding)d(to)i(the)g(nodes.)92
b(W)-12 b(orklist)51 b(processing)4080 7990 y(consists)j(of)f(popping)f
(an)i(instruction)e(of)l(f)h(the)h(w)o(orklist,)i(adding)d(edges)4080
8165 y(to)39 b(the)g(data)h(structure)e(graph,)i(and)f(putting)e
(instructions)g(onto)i(the)g(w)o(ork-)4080 8339 y(list)56
b(if)f(the)n(y)h(refer)h(to)f(\002elds)g(that)g(ha)m(v)n(e)g(been)h
(updated)f(\(the)g(operations)4080 8513 y(needed)37 b(when)g(updating)e
(a)j(single)e(scalar)h(v)l(ariable)g(or)f(structure)g(\002eld)h(are)
4080 8688 y(captured)j(in)g(the)g(UpdateScalar)g(and)h(UpdateField)e
(functions)g(described)4080 8862 y(belo)l(w\):)4230 9198
y Fq(Pr)m(ocessW)-11 b(orkList)p Fp(\(\))4379 9373 y(while)36
b Fi(W)21 b(L)43 b Fs(6)p Fg(=)g Fs(;)4529 9547 y Fp(instruction)34
b Fi(inst)j Fp(=)g Fi(W)21 b(L:head)p Fp(;)38 b Fi(W)21
b(L)p Fp(.remo)n(v)n(e\()p Fi(inst)p Fp(\))4529 9721
y Fn(pr)-7 b(ocess)38 b(instruction)p Fp(\()p Fi(inst)p
Fp(\))4230 10058 y(W)-12 b(e)46 b(describe)g(the)f(ef)l(fects)i(of)e
(each)h(primiti)l(v)n(e)e(that)h(may)h(be)g(found)f(on)4080
10232 y(the)k(w)o(orklist,)g(gi)l(ving)f(the)g(C)h(syntax)f(for)g(the)h
(operation,)h(short)e(pseudo-)4080 10406 y(code)g(for)f(the)g(update,)j
(and)e(a)g(description.)76 b(In)47 b(addition)e(to)i(the)h(instruc-)
4080 10581 y(tions)39 b(belo)l(w)-10 b(,)40 b(there)g(may)g(also)f(be)h
Fr(free)f Fp(calls)g(and)h(pointer)e(comparison)4080
10755 y(operations)57 b(on)h(the)g(w)o(orklist,)j(b)m(ut)c(since)h(the)
n(y)g(do)g(not)f(af)l(fect)h(the)g(data)p eop end
%%Page: 5 5
TeXDict begin 5 4 bop -303 -137 a Fp(structure)52 b(graph)h(the)n(y)f
(are)i(ignored.)94 b(The)53 b(other)g(instructions)e(are)j(pro-)-303
37 y(cessed)38 b(as)g(follo)l(ws:)-81 310 y Fs(\017)74
b Fr(X)90 b(=)f(&\(*Y\).field)p Fi(<)p Fr(N)p Fi(>)236
485 y Fp(UpdateScalar\()p Fi(X)12 b Fp(,)37 b(Adv)l(ance\(PointingT)-12
b(o\()p Fi(Y)32 b Fp(\),)38 b Fi(N)16 b Fp(\)\))70 708
y(T)-12 b(aking)29 b(the)g(address)h(of)f(a)h(structure)e(\002eld)h(is)
g(implemented)g(by)g(sim-)70 882 y(ply)56 b(adv)l(ancing)g(the)g
(source)h(pointers)e(\()p Fi(Y)34 b Fp(\))56 b(to)g(point)e(to)i(the)g
(ne)l(w)70 1057 y(\002eld.)c(Since)39 b(pointers)f(are)h(represented)g
(as)h Fi(<)p Fp(node,)g(\002eld-inde)n(x)p Fi(>)70 1231
y Fp(pairs,)58 b(the)53 b Fi(Adv)5 b(ance)54 b Fp(function)d(simply)i
(increments)g(the)g Fi(f)16 b(iel)r(d)p Fp(-)70 1405
y Fi(index)37 b Fp(portion)e(of)i(each)h(pointer)e(in)g(the)h(input)f
(set.)-81 1678 y Fs(\017)74 b Fr(X)90 b(=)f(&A[i])236
1852 y Fp(UpdateScalar\()p Fi(X)12 b Fp(,)37 b(PointingT)-12
b(o\()p Fi(A)p Fp(\)\))70 2075 y(Our)34 b(analysis)f(ignores)g(array)h
(subscripts,)g(ef)l(fecti)l(v)n(ely)f(treating)g(en-)70
2250 y(tire)46 b(arrays)h(as)g(a)f(single)g(element.)74
b(This)47 b(is)f(conserv)l(ati)l(v)n(e,)j(b)m(ut)c(al-)70
2424 y(lo)l(ws)g(for)f(a)i(compact)f(representation)e(with)h(fe)l(w)i
(implementation)70 2599 y(dif)l(\002culties.)-81 2871
y Fs(\017)74 b Fr(*X)89 b(=)h(P)236 3045 y Fp(if)37 b(IsPointerT)-12
b(ype\(P\))36 b(then)402 3220 y(UpdateFields\(PointingT)-12
b(o\()p Fi(X)12 b Fp(\),)34 b(PointingT)-12 b(o\()p Fi(P)21
b Fp(\)\))70 3443 y(Storing)41 b(a)h(pointer)f(into)g(a)i(memory)f
(object)g(adds)g(the)g(edges)h(ema-)70 3617 y(nating)36
b(from)h(the)g(node)g(for)g Fi(P)58 b Fp(to)37 b(the)g(\002elds)g
(pointed)f(to)g(by)h Fi(X)12 b Fp(.)-81 3890 y Fs(\017)74
b Fr(X)90 b(=)f(*P)236 4064 y Fp(if)37 b(IsPointerT)-12
b(ype\(X\))35 b(then)402 4238 y(if)i(ContentsOf\(PointingT)-12
b(o\()p Fi(P)21 b Fp(\)\))33 b Fg(=)43 b Fs(;)37 b Fp(then)568
4413 y Fi(S)8 b(N)54 b Fp(=)38 b(ne)l(w)f(Shado)l(wNode\(T)-12
b(ype\(*)p Fi(X)12 b Fp(\)\))568 4587 y(UpdateFields\(PointingT)-12
b(o\()p Fi(P)21 b Fp(\),)34 b Fi(S)8 b(N)16 b Fp(\))402
4761 y(UpdateScalar\()p Fi(X)c Fp(,)37 b(ContentsOf\(PointingT)-12
b(o\()p Fi(P)21 b Fp(\)\)\))70 4985 y(Loading)54 b(a)h(pointer)e(from)h
(memory)g(updates)g(the)g(scalar)h(to)f(also)70 5159
y(include)f(the)g(contents)f(of)h(the)g(\002eld)g(in)g(memory)-10
b(.)95 b(If)53 b(there)g(is)g(no)70 5333 y(outgoing)d(edge)j(from)g
(one)f(of)g(the)h(\002elds)f(we)h(are)h(loading)d(from,)70
5508 y(ho)l(we)l(v)n(er)-6 b(,)35 b(we)f(must)g Fn(synthesize)g
Fp(a)g(shado)l(w)g(node)f(and)h(add)g(an)g(edge)70 5682
y(from)56 b(the)g(\002eld)g(to)g(the)f(ne)l(w)i(shado)l(w)f(node.)103
b(This)56 b(ensures)h(that)70 5856 y(the)i(load)g(instruction)e(will)h
(ha)m(v)n(e)h(a)h(node)e(to)h(point)f(to,)64 b(b)m(ut)59
b(it)f(is)70 6031 y(also)h(important)e(to)i(mak)o(e)g(sure)g(that)f
(edges)h(are)h(not)e(lost)g(in)g(the)70 6205 y(graph.)82
b(The)50 b(rami\002cations)f(of)g(this)f(technique)g(are)i(discussed)f
(in)70 6380 y(the)37 b(e)n(xample,)h(belo)l(w)-10 b(.)-81
6652 y Fs(\017)74 b Fr(X)90 b(=)f Fi(\036)p Fr(\(Y,)g(Z\))236
6826 y Fp(UpdateScalar\()p Fi(X)12 b Fp(,)37 b(PointingT)-12
b(o\()p Fi(Y)32 b Fp(\))2225 6714 y Ff(S)2391 6826 y
Fp(PointingT)-12 b(o\()p Fi(Z)11 b Fp(\)\))70 7050 y(The)36
b(SSA)g Fi(\036)h Fp(instruction)c(mer)m(ges)j(together)f(v)l(alues)h
(due)f(to)g(control)70 7224 y(\003o)l(w)-10 b(.)47 b(W)-12
b(e)38 b(simply)e(union)g(together)g(the)h(pointer)f(sets.)-81
7496 y Fs(\017)74 b Fr(call)89 b(func\(P\))236 7671 y
Fp(UpdateP)n(aram\()p Fi(cal)r(l)r(node)p Fp(,)39 b Fi(ar)t(g)5
b(num)p Fp(,)40 b(PointingT)-12 b(o\()p Fi(P)21 b Fp(\)\))70
7894 y(Processing)57 b(a)h(function)d(call)i(simply)f(updates)h(the)g
(call)g(node)f(to)70 8068 y(k)o(eep)44 b(track)g(of)g(the)g(accurate)h
(pointer)d(sets)j(that)e(are)i(being)e(passed)70 8243
y(in)54 b(as)h(parameters.)100 b(This)54 b(is)h(used)f(for)g(the)h
(interprocedural)d(clo-)70 8417 y(sure)37 b(stage,)h(described)f(in)f
(Section)h(2.3.)46 b(This)37 b(does)g(not)f(cause)i(an)n(y)70
8591 y(w)o(orklist)d(entries)i(to)f(be)i(modi\002ed.)-81
8864 y Fs(\017)74 b Fr(return)88 b(X)236 9038 y Fi(R)q(etur)t(nP)21
b(tr)50 b Fg(=)43 b Fi(R)q(etur)t(nP)21 b(tr)1973 8926
y Ff(S)2138 9038 y Fp(PointingT)-12 b(o\()p Fi(X)12 b
Fp(\))70 9261 y(This)39 b(adds)g(the)g(nodes)g(pointed)e(to)i(by)f
Fi(X)51 b Fp(to)39 b(the)f(return)g(set)i(for)e(the)70
9436 y(function.)-154 9709 y(The)29 b(\223PointingT)-12
b(o\224)27 b(function)g(returns)g(the)h(set)h(of)f(pointer)f(v)l(alues)
h(stored)-303 9883 y(in)48 b(the)h(scalar)g(node)g(for)f(the)h
(speci\002ed)g(v)l(ariable.)82 b(The)49 b(\223UpdateScalar\224)-303
10058 y(function)63 b(updates)i(the)g(scalar)h(node)f(corresponding)f
(to)g(the)h(speci\002ed)-303 10232 y(v)l(ariable)39 b(to)f(include)g
(all)h(of)g(the)g(pointers)f(in)g(the)h(set)g(speci\002ed)h(as)g(its)e
(sec-)-303 10406 y(ond)46 b(ar)m(gument.)77 b(If)47 b(this)f(causes)j
(the)e(scalar)h(node)f(to)g(change,)j(all)d(of)g(the)-303
10581 y(uses)f(of)f(the)h(SSA)g(scalar)g(are)g(added)g(to)f(the)h(w)o
(orklist)d(for)i(reprocessing,)-303 10755 y(and)37 b(the)g(graph)f
(simpli\002cation)g(algorithm)f(is)i(run:)4230 -137 y
Fq(UpdateScalar)p Fp(\(scalar)g Fi(S)8 b Fp(,)38 b(pointerset)e
Fi(P)21 b(S)8 b Fp(\))4379 37 y(if)37 b(edges\()p Fi(S)8
b Fp(\))5087 -75 y Ff(T)5253 37 y Fi(P)21 b(S)46 b Fs(6)p
Fg(=)37 b Fi(P)21 b(S)47 b Fp(then)4529 211 y Fi(W)21
b(L)p Fp(.add\(uses\()p Fi(S)8 b Fp(\)\))187 b(//)36
b(Add)h(all)g(uses)g(to)g(w)o(orklist)4529 386 y(edges\()p
Fi(S)8 b Fp(\).add\()p Fi(P)21 b(S)8 b Fp(\))154 b(//)36
b(Add)h(ne)l(w)g(edges)h(to)f(graph)4529 561 y(GraphSimplify\()p
Fi(S)8 b Fp(\))169 b(//)36 b(Mer)m(ge)i(nodes)f(\(Section)f
Fh(2.2.3)p Fp(\))4230 811 y(The)46 b(\223UpdateFields\224)g(function)f
(is)h(identical,)h(b)m(ut)f(updates)f(the)h(\002elds)4080
986 y(of)51 b(memory)h(objects)f(pointed)f(to)h(by)g(the)g(\002rst)g
(ar)m(gument.)89 b(If)51 b(the)g(\002elds)4080 1160 y(change,)33
b(all)e(loads)f(refering)g(to)g(the)h(structures)f(are)i(added)f(to)f
(the)h(w)o(orklist,)4080 1334 y(and)37 b(the)g(graph)g
(simpli\002cation)e(algorithm)h(is)h(run.)4230 1509 y(In)d(our)h(e)n
(xample,)h(after)f(processing)g(the)f Fr(\045cond1)g
Fp(instruction)e(\(which)4080 1683 y(is)52 b(a)g(no-op\))f(and)h
Fr(\045list1)e Fp(instructions,)j(the)f Fr(\045list2)e
Fp(instruction)g(is)4080 1857 y(added)j(to)f(the)g(w)o(orklist,)j(and)d
(an)h(edge)g(from)f Fr(\045list1)f Fp(to)h(the)g(shado)l(w)4080
2032 y Fr(\045List)45 b Fp(node)g(is)h(added.)73 b(When)47
b(processing)e(the)h Fr(\045list2)e Fp(instruction)4080
2206 y(\(a)35 b(load\),)g(a)h(shado)l(w)f(node)f(must)h(be)g
(synthesized,)g(resulting)e(in)h(the)h(graph)4080 2381
y(sho)l(wn)53 b(in)g(Figure)f(5)h(\(additionally)-10
b(,)55 b(the)e Fr(\045list1)e Fp(instruction)g(is)i(rein-)4080
2555 y(serted)48 b(into)e(the)i(w)o(orklist\).)75 b(Figure)47
b(5)g(sho)l(ws)h(the)f(data)h(structure)f(graph)4080
2729 y(after)37 b(processing)g(these)g(instructions)e(and)i
Fr(\045list1)f Fp(ag)o(ain.)p 4221 2863 3703 7 v 4221
4455 7 1593 v 4273 4410 a @beginspecial 35 @llx 35 @lly
543 @urx 247 @ury 2160 @rwi @setspecial
%%BeginDocument: Figures/addList_worklist1.ps
%!PS-Adobe-2.0
%%Creator: dot version 1.8.2 (Fri Mar 15 13:54:34 EST 2002)
%%For: (lattner) Christopher Lattner
%%Title: DataStructures
%%Pages: (atend)
%%BoundingBox: 35 35 543 247
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 543 247
%%PageOrientation: Portrait
gsave
35 35 508 212 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	ListNew
gsave 10 dict begin
newpath 32 84 moveto
100 84 lineto
stroke
newpath 100 84 moveto
106 84 112 90 112 96 curveto
stroke
newpath 112 96 moveto
112 112 lineto
stroke
newpath 112 112 moveto
112 118 106 124 100 124 curveto
stroke
newpath 100 124 moveto
32 124 lineto
stroke
newpath 32 124 moveto
26 124 20 118 20 112 curveto
stroke
newpath 20 112 moveto
20 96 lineto
stroke
newpath 20 96 moveto
20 90 26 84 32 84 curveto
stroke
gsave 10 dict begin
66 109 moveto 78 -0.5 (new  %List) alignedtext
end grestore
newpath 20 104 moveto
112 104 lineto
stroke
gsave 10 dict begin
35 89 moveto 4 -0.5 ( ) alignedtext
end grestore
newpath 50 84 moveto
50 104 lineto
stroke
gsave 10 dict begin
65 89 moveto 4 -0.5 ( ) alignedtext
end grestore
newpath 81 84 moveto
81 104 lineto
stroke
gsave 10 dict begin
96 89 moveto 4 -0.5 ( ) alignedtext
end grestore
end grestore

%	ListShad
gsave 10 dict begin
newpath 210 84 moveto
301 84 lineto
stroke
newpath 301 84 moveto
307 84 313 90 313 96 curveto
stroke
newpath 313 96 moveto
313 112 lineto
stroke
newpath 313 112 moveto
313 118 307 124 301 124 curveto
stroke
newpath 301 124 moveto
210 124 lineto
stroke
newpath 210 124 moveto
204 124 198 118 198 112 curveto
stroke
newpath 198 112 moveto
198 96 lineto
stroke
newpath 198 96 moveto
198 90 204 84 210 84 curveto
stroke
gsave 10 dict begin
255 109 moveto 101 -0.5 (shadow  %List) alignedtext
end grestore
newpath 198 104 moveto
313 104 lineto
stroke
gsave 10 dict begin
217 89 moveto 4 -0.5 ( ) alignedtext
end grestore
newpath 236 84 moveto
236 104 lineto
stroke
gsave 10 dict begin
255 89 moveto 4 -0.5 ( ) alignedtext
end grestore
newpath 274 84 moveto
274 104 lineto
stroke
gsave 10 dict begin
293 89 moveto 4 -0.5 ( ) alignedtext
end grestore
end grestore

%	ListShad2
gsave 10 dict begin
newpath 172 8 moveto
263 8 lineto
stroke
newpath 263 8 moveto
269 8 275 14 275 20 curveto
stroke
newpath 275 20 moveto
275 36 lineto
stroke
newpath 275 36 moveto
275 42 269 48 263 48 curveto
stroke
newpath 263 48 moveto
172 48 lineto
stroke
newpath 172 48 moveto
166 48 160 42 160 36 curveto
stroke
newpath 160 36 moveto
160 20 lineto
stroke
newpath 160 20 moveto
160 14 166 8 172 8 curveto
stroke
gsave 10 dict begin
217 33 moveto 101 -0.5 (shadow  %List) alignedtext
end grestore
newpath 160 28 moveto
275 28 lineto
stroke
gsave 10 dict begin
179 13 moveto 4 -0.5 ( ) alignedtext
end grestore
newpath 198 8 moveto
198 28 lineto
stroke
gsave 10 dict begin
217 13 moveto 4 -0.5 ( ) alignedtext
end grestore
newpath 236 8 moveto
236 28 lineto
stroke
gsave 10 dict begin
255 13 moveto 4 -0.5 ( ) alignedtext
end grestore
end grestore

%	ListShad -> ListShad2
newpath 217 82 moveto
217 76 217 67 217 58 curveto
stroke
0.000 0.000 0.000 edgecolor
217 84 2 2 ellipse_path
fill
0.000 0.000 0.000 edgecolor
0.000 0.000 0.000 edgecolor
newpath 215 58 moveto
217 48 lineto
220 58 lineto
closepath
fill
0.000 0.000 0.000 edgecolor

%	PatientShad
gsave 10 dict begin
newpath 380 84 moveto
494 84 lineto
stroke
newpath 494 84 moveto
500 84 506 90 506 96 curveto
stroke
newpath 506 96 moveto
506 112 lineto
stroke
newpath 506 112 moveto
506 118 500 124 494 124 curveto
stroke
newpath 494 124 moveto
380 124 lineto
stroke
newpath 380 124 moveto
374 124 368 118 368 112 curveto
stroke
newpath 368 112 moveto
368 96 lineto
stroke
newpath 368 96 moveto
368 90 374 84 380 84 curveto
stroke
gsave 10 dict begin
437 109 moveto 124 -0.5 (shadow  %Patient) alignedtext
end grestore
newpath 368 104 moveto
506 104 lineto
stroke
gsave 10 dict begin
437 89 moveto 4 -0.5 ( ) alignedtext
end grestore
end grestore

%	pt
gsave 10 dict begin
0.000 0.000 0.702 nodecolor
365 181 43 21 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
12.00 /Times-Roman set_font
365 183 moveto 62 -0.5 ( %Patient*) alignedtext
365 170 moveto 24 -0.5 (%pt) alignedtext
end grestore
end grestore

%	pt -> PatientShad
gsave 10 dict begin
0.000 0.000 0.702 edgecolor
newpath 384 161 moveto
393 151 402 141 411 131 curveto
stroke
0.000 0.000 0.702 edgecolor
383 162 2 2 ellipse_path
fill
0.000 0.000 0.702 edgecolor
0.000 0.000 0.702 edgecolor
newpath 409 129 moveto
418 124 lineto
413 133 lineto
closepath
fill
0.000 0.000 0.702 edgecolor
end grestore

%	list
gsave 10 dict begin
0.000 0.000 0.702 nodecolor
181 181 33 21 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
12.00 /Times-Roman set_font
181 183 moveto 43 -0.5 ( %List*) alignedtext
181 170 moveto 28 -0.5 (%list) alignedtext
end grestore
end grestore

%	list -> ListShad
gsave 10 dict begin
0.000 0.000 0.702 edgecolor
newpath 200 162 moveto
209 152 219 141 229 131 curveto
stroke
0.000 0.000 0.702 edgecolor
199 163 2 2 ellipse_path
fill
0.000 0.000 0.702 edgecolor
0.000 0.000 0.702 edgecolor
newpath 227 129 moveto
236 124 lineto
231 133 lineto
closepath
fill
0.000 0.000 0.702 edgecolor
end grestore

%	b
gsave 10 dict begin
0.000 0.000 0.702 nodecolor
newpath 480 199 moveto
426 199 lineto
426 163 lineto
480 163 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
12.00 /Times-Roman set_font
453 183 moveto 43 -0.5 ( %List*) alignedtext
453 170 moveto 19 -0.5 (%b) alignedtext
end grestore
end grestore

%	list3
gsave 10 dict begin
0.000 0.000 0.702 nodecolor
newpath 54 199 moveto
0 199 lineto
0 163 lineto
54 163 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
12.00 /Times-Roman set_font
27 183 moveto 43 -0.5 ( %List*) alignedtext
27 170 moveto 34 -0.5 (%list3) alignedtext
end grestore
end grestore

%	list3 -> ListNew
gsave 10 dict begin
0.000 0.000 0.702 edgecolor
newpath 36 162 moveto
41 153 46 142 52 133 curveto
stroke
0.000 0.000 0.702 edgecolor
36 163 2 2 ellipse_path
fill
0.000 0.000 0.702 edgecolor
0.000 0.000 0.702 edgecolor
newpath 50 132 moveto
56 124 lineto
54 134 lineto
closepath
fill
0.000 0.000 0.702 edgecolor
end grestore

%	list2
gsave 10 dict begin
0.000 0.000 0.702 nodecolor
newpath 127 199 moveto
73 199 lineto
73 163 lineto
127 163 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
12.00 /Times-Roman set_font
100 183 moveto 43 -0.5 ( %List*) alignedtext
100 170 moveto 35 -0.5 (%list2) alignedtext
end grestore
end grestore

%	list2 -> ListShad2
gsave 10 dict begin
0.000 0.000 0.702 edgecolor
newpath 115 162 moveto
136 135 173 85 197 54 curveto
stroke
0.000 0.000 0.702 edgecolor
114 163 2 2 ellipse_path
fill
0.000 0.000 0.702 edgecolor
0.000 0.000 0.702 edgecolor
newpath 194 54 moveto
202 48 lineto
198 57 lineto
closepath
fill
0.000 0.000 0.702 edgecolor
end grestore

%	list1
gsave 10 dict begin
0.000 0.000 0.702 nodecolor
newpath 292 199 moveto
238 199 lineto
238 163 lineto
292 163 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
12.00 /Times-Roman set_font
265 183 moveto 43 -0.5 ( %List*) alignedtext
265 170 moveto 32 -0.5 (%list1) alignedtext
end grestore
end grestore

%	list1 -> ListShad
gsave 10 dict begin
0.000 0.000 0.702 edgecolor
newpath 263 162 moveto
262 153 260 143 259 134 curveto
stroke
0.000 0.000 0.702 edgecolor
263 163 2 2 ellipse_path
fill
0.000 0.000 0.702 edgecolor
0.000 0.000 0.702 edgecolor
newpath 257 134 moveto
258 124 lineto
261 134 lineto
closepath
fill
0.000 0.000 0.702 edgecolor
end grestore

%	list1 -> ListShad2
gsave 10 dict begin
0.000 0.000 0.702 edgecolor
newpath 291 162 moveto
303 152 314 139 321 124 curveto
327 107 330 99 321 84 curveto
315 74 294 62 272 51 curveto
stroke
0.000 0.000 0.702 edgecolor
290 163 2 2 ellipse_path
fill
0.000 0.000 0.702 edgecolor
0.000 0.000 0.702 edgecolor
newpath 273 54 moveto
265 48 lineto
275 50 lineto
closepath
fill
0.000 0.000 0.702 edgecolor
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1
%%Trailer
%%Pages: 1
end
restore
%%EOF

%%EndDocument
 @endspecial 7918 4455 V 4221 4462 3703 7 v 4574 4750
a Fq(Figur)m(e)i(5:)46 b Fj(addList)31 b Fk(graph)j(after)g(some)f(w)o
(orklist)g(steps)4230 5017 y Fp(At)40 b(this)g(point,)g(the)g(w)o
(orklist)f(contains)h Fr(\045list2)e Fp(and)j Fr(\045b)f
Fp(\(which)g(use)4080 5192 y(\045list1\),)60 b(and)d(the)f(four)f
(store)h(instructions)e(\(which)h(use)i Fr(\045list3)d
Fp(and)4080 5366 y Fr(\045pt)p Fp(\).)4230 5540 y(Clearly)-10
b(,)52 b(the)d(uncontrolled)e(creation)i(of)g(shado)l(w)h(nodes)f(can)h
(lead)g(to)4080 5715 y(in\002nite)41 b(recursion:)55
b(processing)42 b Fr(\045list2)f Fp(ag)o(ain)h(w)o(ould)f(cause)i
(another)4080 5889 y(shado)l(w)36 b(node)g(to)f(be)h(created)h(\(due)e
(to)h(the)g(load)f(from)h(the)f(empty)h(\002eld)g(on)4080
6063 y(the)46 b(shado)l(w)h(node)e(created)i(in)f(the)g(last)g
(iteration\),)h(which)f(w)o(ould)e(cause)4080 6238 y(future)g(shado)l
(w)i(nodes)f(to)f(be)i(created)g(\226)f(ad)g(in\002nitum.)69
b(T)-12 b(o)46 b(pre)l(v)n(ent)e(this)4080 6412 y(in\002nite)51
b(recursion,)56 b(and)d(to)f(ensure)h(the)f(data)h(structure)e(graph)h
(remains)4080 6586 y(as)45 b(compact)g(as)g(possible,)h(the)e(graph)g
(simpli\002cation)e(algorithm)h(is)h(used)4080 6761 y(to)51
b(mer)m(ge)i(nodes)e(in)g(the)h(graph)f(that)g(are)h(indistinguishable)
c(from)j(each)4080 6935 y(other)-8 b(.)4080 7227 y Fh(2.2.3)183
b(Gr)m(aph)47 b(Simpli\002cation)f(Algorithm)4230 7443
y Fp(In)37 b(Figure)g(5,)h(the)g(tw)o(o)f Fr(\045List)f
Fp(shado)l(w)i(nodes)f(are)i Fn(indistinguishable)4080
7617 y Fp(from)g(each)h(other)-6 b(,)39 b(and)g(should)f(be)h(mer)m
(ged.)53 b(T)-12 b(w)o(o)38 b(nodes)h(are)h(considered)4080
7791 y(indistinguishable)h(if)j(the)n(y)g(are)h(of)g(the)f(same)i(LL)
-15 b(VM)45 b(type,)h(if)e(the)n(y)g(ha)m(v)n(e)4080
7966 y(the)55 b(same)i(node)e(type)g(\(or)f(if)h(at)g(least)h(one)f(is)
g(a)h(shado)l(w)f(node\),)60 b(and)55 b(if)4080 8140
y(there)37 b(is)g(a)h(\002eld)f(in)g(the)g(data)g(structure)g(graph)f
(that)h(points)f(to)g(both)g(nodes.)4080 8314 y(When)h(tw)o(o)g(nodes)g
(are)h(mer)m(ged,)g(the)f(resulting)e(node)i(contains)g(the)g(union)
4080 8489 y(of)42 b(the)g(edges)h(in)f(the)g(tw)o(o)f(original)g
(nodes,)i(pre)l(v)n(enting)e(edges)i(from)f(get-)4080
8663 y(ting)48 b(dropped)g(from)g(the)h(graph.)81 b(Additionally)-10
b(,)49 b(an)n(y)g(pointers)f(to)g(either)4080 8837 y(original)40
b(node)i(get)f(updated)h(to)f(point)f(to)i(the)f(ne)l(w)i(mer)m(ged)f
(node)g(\(this)f(is)4080 9012 y(similar)c(to)f(approaches)i(tak)o(en)e
(by)h(other)g(analyses[14,)g(22,)g(24]\).)4230 9186 y(The)44
b(intuition)d(behind)h(this)h(heuristic)g(is)h(if)f(a)i(pointer)d
(contains)h(edges)4080 9360 y(to)38 b(tw)o(o)e(dif)l(ferent)h(nodes,)i
(all)e(stores)h(and)g(loads)g(that)f(use)h(the)g(pointer)f(will)4080
9535 y(cause)46 b(their)d(ef)l(fects)i(\(either)e(edges)i(added)f(to)g
(the)g(graph,)i(or)e(scalars)h(up-)4080 9709 y(dated)f(with)e(the)h
(\002eld)g(contents\))g(to)g(happen)g(to)g(both)f(nodes)h(at)h(the)f
(same)4080 9883 y(time.)k(Since)38 b(each)g(node)f(will)f(e)l(v)n
(entually)g(contain)g(the)i(same)g(contents)f(as)4080
10058 y(the)g(other)-6 b(,)37 b(the)n(y)f(might)h(as)g(well)g(be)h(mer)
m(ged.)4230 10232 y(In)65 b(the)g(case)i(of)f Fr(addList)p
Fp(,)71 b(the)65 b Fr(\045list1)f Fp(scalar)i(points)e(to)i(both)4080
10406 y(shado)l(w)49 b(nodes,)j(and)d(the)n(y)g(are)g(of)g(compatible)f
(LL)-15 b(VM)50 b(and)f(node)g(type.)4080 10581 y(Mer)m(ging)j(the)h
(tw)o(o)f(nodes)h(together)e(causes)k(the)d(edges)i(connecting)e(the)
4080 10755 y(tw)o(o)43 b(nodes)h(to)f(become)i(a)f(self-loop,)h(pro)n
(viding)c(information)g(about)j(the)p eop end
%%Page: 6 6
TeXDict begin 6 5 bop -303 -137 a Fp(connecti)l(vity)-10
b(.)94 b(Important)52 b(to)g(note)h(is)h(that)f(this)f(summarization)h
(of)g(the)-303 37 y(graph)58 b(does)h(lose)g(information.)110
b(F)n(or)58 b(e)n(xample,)65 b(by)59 b(mer)m(ging)f(the)h(tw)o(o)-303
211 y(nodes,)43 b(we)f(lose)f(the)h(information)d(that)i
Fr(\045list)f Fp(only)h(points)f(to)h(the)g(\002rst)-303
386 y(node.)99 b(Ho)l(we)l(v)n(er)-6 b(,)60 b(because)c(we)f(are)h
(dealing)e(with)g(potentially)e(in\002nite)-303 560 y(structures)44
b(without)e(in\002nite)i(time)g(and)h(space)h(resources,)h(we)e(must)g
(per)m(-)-303 734 y(form)37 b(some)g(form)g(of)g(summarization.)-154
909 y(In)31 b(practice,)j(we)e(ha)m(v)n(e)g(found)e(this)h(information)
e(loss)j(to)f(be)h(of)f(little)f(im-)-303 1083 y(portance)45
b(to)g(our)g(data)h(structure)f(analysis.)71 b(This)46
b(is)f(suprising,)i(because)-303 1257 y(results)31 b(on)h(pointer)f
(analysis)g(ha)m(v)n(e)i(sho)l(wn)e(Steensg)o(aard')-8
b(s)33 b(algorithm[24])-303 1432 y(as)e(being)f(signi\002cantly)f(less)
j(precise)f(than)f(other)g(approaches,)j(and)e(it)f(uses)-303
1606 y(a)37 b(similar)f(mer)m(ging)g(technique.)45 b(The)37
b(dif)l(ference)g(is)g(that)e(we)i(are)h(attempt-)-303
1780 y(ing)44 b(to)h(e)n(xtract)g(data)h(structure)f(connecti)l(vity)e
(information,)j Fn(not)f Fp(aliasing)-303 1955 y(information.)55
b(Pool)40 b(allocation)g(actually)g(bene\002ts)h(from)g(graphs)f(that)g
(are)-303 2129 y(mer)m(ged)k(as)g(much)g(as)g(possible,)g(as)g(long)f
(as)h(tw)o(o)e(disjoint)g(structures)g(are)-303 2304
y(not)36 b(unneccesarily)h(mer)m(ged)h(together)-8 b(.)-154
2478 y(Figure)52 b(6)h(sho)l(ws)g(the)g(data)g(structure)f(graph)h
(after)g(mer)m(ging)f(the)h(tw)o(o)-303 2652 y(nodes,)61
b(processing)56 b Fr(\045b)g Fp(and)g(the)g(four)g(store)g
(instructions)e(\(which)i(add)-303 2827 y(outgoing)33
b(edges)k(to)e(the)h(\223ne)l(w\224)h(node)f(as)h(well)e(as)i(the)f
(remaining)f(shado)l(w)-303 3001 y(node\).)p -162 3129
3703 7 v -162 5057 7 1929 v -111 5012 a @beginspecial
35 @llx 35 @lly 501 @urx 273 @ury 2160 @rwi @setspecial
%%BeginDocument: Figures/addList_worklist2.ps
%!PS-Adobe-2.0
%%Creator: dot version 1.8.2 (Fri Mar 15 13:54:34 EST 2002)
%%For: (lattner) Christopher Lattner
%%Title: DataStructures
%%Pages: (atend)
%%BoundingBox: 35 35 501 273
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 501 273
%%PageOrientation: Portrait
gsave
35 35 466 238 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	PatientShad
gsave 10 dict begin
newpath 12 34 moveto
126 34 lineto
stroke
newpath 126 34 moveto
132 34 138 40 138 46 curveto
stroke
newpath 138 46 moveto
138 62 lineto
stroke
newpath 138 62 moveto
138 68 132 74 126 74 curveto
stroke
newpath 126 74 moveto
11 74 lineto
stroke
newpath 11 74 moveto
6 74 0 68 0 62 curveto
stroke
newpath 0 62 moveto
0 46 lineto
stroke
newpath 0 46 moveto
0 40 6 34 12 34 curveto
stroke
gsave 10 dict begin
69 59 moveto 124 -0.5 (shadow  %Patient) alignedtext
end grestore
newpath 0 54 moveto
138 54 lineto
stroke
gsave 10 dict begin
69 39 moveto 4 -0.5 ( ) alignedtext
end grestore
end grestore

%	pt
gsave 10 dict begin
0.000 0.000 0.702 nodecolor
76 207 43 21 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
12.00 /Times-Roman set_font
76 209 moveto 62 -0.5 ( %Patient*) alignedtext
76 196 moveto 24 -0.5 (%pt) alignedtext
end grestore
end grestore

%	pt -> PatientShad
gsave 10 dict begin
0.000 0.000 0.702 edgecolor
newpath 75 184 moveto
74 157 72 112 70 83 curveto
stroke
0.000 0.000 0.702 edgecolor
75 186 2 2 ellipse_path
fill
0.000 0.000 0.702 edgecolor
0.000 0.000 0.702 edgecolor
newpath 68 84 moveto
70 74 lineto
73 84 lineto
closepath
fill
0.000 0.000 0.702 edgecolor
end grestore

%	list
gsave 10 dict begin
0.000 0.000 0.702 nodecolor
254 207 33 21 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
12.00 /Times-Roman set_font
254 209 moveto 43 -0.5 ( %List*) alignedtext
254 196 moveto 28 -0.5 (%list) alignedtext
end grestore
end grestore

%	ListShad
gsave 10 dict begin
newpath 168 34 moveto
259 34 lineto
stroke
newpath 259 34 moveto
265 34 271 40 271 46 curveto
stroke
newpath 271 46 moveto
271 62 lineto
stroke
newpath 271 62 moveto
271 68 265 74 259 74 curveto
stroke
newpath 259 74 moveto
168 74 lineto
stroke
newpath 168 74 moveto
162 74 156 68 156 62 curveto
stroke
newpath 156 62 moveto
156 46 lineto
stroke
newpath 156 46 moveto
156 40 162 34 168 34 curveto
stroke
gsave 10 dict begin
213 59 moveto 101 -0.5 (shadow  %List) alignedtext
end grestore
newpath 156 54 moveto
271 54 lineto
stroke
gsave 10 dict begin
175 39 moveto 4 -0.5 ( ) alignedtext
end grestore
newpath 194 34 moveto
194 54 lineto
stroke
gsave 10 dict begin
213 39 moveto 4 -0.5 ( ) alignedtext
end grestore
newpath 232 34 moveto
232 54 lineto
stroke
gsave 10 dict begin
251 39 moveto 4 -0.5 ( ) alignedtext
end grestore
end grestore

%	list -> ListShad
gsave 10 dict begin
0.000 0.000 0.702 edgecolor
newpath 251 185 moveto
247 165 241 136 234 110 curveto
231 101 228 92 224 83 curveto
stroke
0.000 0.000 0.702 edgecolor
251 186 2 2 ellipse_path
fill
0.000 0.000 0.702 edgecolor
0.000 0.000 0.702 edgecolor
newpath 222 84 moveto
221 74 lineto
227 83 lineto
closepath
fill
0.000 0.000 0.702 edgecolor
end grestore

%	ListShad -> ListShad
newpath 192 33 moveto
217 19 263 0 288 25 curveto
306 43 306 64 288 83 curveto
275 95 258 89 243 79 curveto
stroke
0.000 0.000 0.000 edgecolor
191 34 2 2 ellipse_path
fill
0.000 0.000 0.000 edgecolor
0.000 0.000 0.000 edgecolor
newpath 242 81 moveto
235 74 lineto
245 77 lineto
closepath
fill
0.000 0.000 0.000 edgecolor

%	ListNew
gsave 10 dict begin
newpath 145 110 moveto
213 110 lineto
stroke
newpath 213 110 moveto
219 110 225 116 225 122 curveto
stroke
newpath 225 122 moveto
225 138 lineto
stroke
newpath 225 138 moveto
225 144 219 150 213 150 curveto
stroke
newpath 213 150 moveto
145 150 lineto
stroke
newpath 145 150 moveto
139 150 133 144 133 138 curveto
stroke
newpath 133 138 moveto
133 122 lineto
stroke
newpath 133 122 moveto
133 116 139 110 145 110 curveto
stroke
gsave 10 dict begin
179 135 moveto 78 -0.5 (new  %List) alignedtext
end grestore
newpath 133 130 moveto
225 130 lineto
stroke
gsave 10 dict begin
148 115 moveto 4 -0.5 ( ) alignedtext
end grestore
newpath 163 110 moveto
163 130 lineto
stroke
gsave 10 dict begin
178 115 moveto 4 -0.5 ( ) alignedtext
end grestore
newpath 194 110 moveto
194 130 lineto
stroke
gsave 10 dict begin
209 115 moveto 4 -0.5 ( ) alignedtext
end grestore
end grestore

%	ListShad -> ListNew
newpath 178 103 moveto
177 87 176 69 175 57 curveto
stroke
0.000 0.000 0.000 edgecolor
newpath 181 100 moveto
178 110 lineto
176 100 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
0.000 0.000 0.000 edgecolor
175 54 2 2 ellipse_path
fill
0.000 0.000 0.000 edgecolor

%	b
gsave 10 dict begin
0.000 0.000 0.702 nodecolor
newpath 359 225 moveto
305 225 lineto
305 189 lineto
359 189 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
12.00 /Times-Roman set_font
332 209 moveto 43 -0.5 ( %List*) alignedtext
332 196 moveto 19 -0.5 (%b) alignedtext
end grestore
end grestore

%	b -> ListShad
gsave 10 dict begin
0.000 0.000 0.702 edgecolor
newpath 324 188 moveto
312 163 288 117 253 81 curveto
stroke
0.000 0.000 0.702 edgecolor
324 189 2 2 ellipse_path
fill
0.000 0.000 0.702 edgecolor
0.000 0.000 0.702 edgecolor
newpath 251 82 moveto
245 74 lineto
254 79 lineto
closepath
fill
0.000 0.000 0.702 edgecolor
end grestore

%	list3
gsave 10 dict begin
0.000 0.000 0.702 nodecolor
newpath 196 225 moveto
142 225 lineto
142 189 lineto
196 189 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
12.00 /Times-Roman set_font
169 209 moveto 43 -0.5 ( %List*) alignedtext
169 196 moveto 34 -0.5 (%list3) alignedtext
end grestore
end grestore

%	list3 -> ListNew
gsave 10 dict begin
0.000 0.000 0.702 edgecolor
newpath 171 187 moveto
172 179 174 169 175 160 curveto
stroke
0.000 0.000 0.702 edgecolor
171 189 2 2 ellipse_path
fill
0.000 0.000 0.702 edgecolor
0.000 0.000 0.702 edgecolor
newpath 173 160 moveto
176 150 lineto
177 160 lineto
closepath
fill
0.000 0.000 0.702 edgecolor
end grestore

%	ListNew -> PatientShad
newpath 162 109 moveto
148 101 130 90 112 79 curveto
stroke
0.000 0.000 0.000 edgecolor
163 110 2 2 ellipse_path
fill
0.000 0.000 0.000 edgecolor
0.000 0.000 0.000 edgecolor
newpath 111 81 moveto
103 74 lineto
113 77 lineto
closepath
fill
0.000 0.000 0.000 edgecolor

%	ListNew -> ListShad
newpath 210 108 moveto
211 101 211 90 212 81 curveto
stroke
0.000 0.000 0.000 edgecolor
210 110 2 2 ellipse_path
fill
0.000 0.000 0.000 edgecolor
0.000 0.000 0.000 edgecolor
newpath 210 84 moveto
212 74 lineto
215 84 lineto
closepath
fill
0.000 0.000 0.000 edgecolor

%	ListNew -> ListShad
newpath 159 109 moveto
167 101 178 90 188 79 curveto
stroke
0.000 0.000 0.000 edgecolor
158 110 2 2 ellipse_path
fill
0.000 0.000 0.000 edgecolor
0.000 0.000 0.000 edgecolor
newpath 184 79 moveto
193 74 lineto
188 83 lineto
closepath
fill
0.000 0.000 0.000 edgecolor

%	list2
gsave 10 dict begin
0.000 0.000 0.702 nodecolor
newpath 392 148 moveto
338 148 lineto
338 112 lineto
392 112 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
12.00 /Times-Roman set_font
365 132 moveto 43 -0.5 ( %List*) alignedtext
365 119 moveto 35 -0.5 (%list2) alignedtext
end grestore
end grestore

%	list2 -> ListShad
gsave 10 dict begin
0.000 0.000 0.702 edgecolor
newpath 337 116 moveto
316 106 287 91 262 78 curveto
stroke
0.000 0.000 0.702 edgecolor
338 116 2 2 ellipse_path
fill
0.000 0.000 0.702 edgecolor
0.000 0.000 0.702 edgecolor
newpath 261 80 moveto
253 74 lineto
263 76 lineto
closepath
fill
0.000 0.000 0.702 edgecolor
end grestore

%	list1
gsave 10 dict begin
0.000 0.000 0.702 nodecolor
newpath 464 148 moveto
410 148 lineto
410 112 lineto
464 112 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
12.00 /Times-Roman set_font
437 132 moveto 43 -0.5 ( %List*) alignedtext
437 119 moveto 32 -0.5 (%list1) alignedtext
end grestore
end grestore

%	list1 -> ListShad
gsave 10 dict begin
0.000 0.000 0.702 edgecolor
newpath 409 113 moveto
406 112 404 111 401 110 curveto
347 88 330 91 278 76 curveto
stroke
0.000 0.000 0.702 edgecolor
410 114 2 2 ellipse_path
fill
0.000 0.000 0.702 edgecolor
0.000 0.000 0.702 edgecolor
newpath 280 79 moveto
271 74 lineto
281 74 lineto
closepath
fill
0.000 0.000 0.702 edgecolor
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1
%%Trailer
%%Pages: 1
end
restore
%%EOF

%%EndDocument
 @endspecial 3534 5057 V -162 5064 3703 7 v 351 5352
a Fq(Figur)m(e)j(6:)46 b Fj(addList)31 b Fk(graph)j(after)g(node)f(mer)
o(ging)-154 5625 y Fp(Processing)50 b(the)g(last)h(store)f(in)g(the)g
(function)f(causes)i(the)f(edge)h(to)f(the)-303 5800
y(\223ne)l(w\224)43 b(node)f(to)g(be)h(added)f(to)g(the)g(shado)l(w)g
(node.)62 b(Since)43 b(there)f(is)g(no)l(w)g(a)-303 5974
y(\002eld)h(that)g(points)f(to)h(tw)o(o)f(indistinguishable)e(nodes)k
(\(the)f(ne)l(w)h(node)f(and)-303 6148 y(the)d(shado)l(w)g(node\),)h
(the)f(tw)o(o)f(nodes)i(are)g(mer)m(ged,)h(yielding)c(the)i(\002nished)
-303 6323 y(graph)49 b(sho)l(wn)h(in)f(Figure)h(3.)85
b(This)50 b(mer)m(ging)f(beha)m(vior)g(is)h(an)h(important)-303
6497 y(part)34 b(of)g(our)h(analysis)f(\227)h(adding)f(e)n(xtra)h
(edges)g(\(for)f(e)n(xample,)i(introduced)-303 6671 y(by)52
b(conserv)l(ati)l(v)n(e)h(heuristics\))f(to)h(the)g(graphs)f(cause)j
(them)e(to)g Fn(shrink)f Fp(in)-303 6846 y(size.)-303
7227 y Fo(2.3)198 b(Inter)n(pr)l(ocedural)52 b(Closur)l(e)e(Algorithm)
-154 7443 y Fp(The)60 b(local)g(analysis)g(graph)f(is)h(of)f(limited)g
(usefulness)g(for)g(program)-303 7617 y(transformation,)35
b(because)k(most)e(interesting)e(data)j(structures)e(are)i(passed)-303
7791 y(to)70 b(functions)g(to)g(construct)h(or)f(manipulate)h(them)g
(\(for)f(e)n(xample)i(see)-303 7966 y Fr(ProcessLists)44
b Fp(in)k(Figure)f(8\).)79 b(W)-6 b(ithout)47 b(interprocedural)f
(informa-)-303 8140 y(tion,)i(it)e(is)g(impossible)g(to)g(transform)g
(these)h(functions,)h(because)g(one)e(of)-303 8314 y(the)31
b(called)h(functions)e(may)i(use)g(the)g(data)g(structure)f(in)g(w)o
(ays)g(not)g(re\003ected)-303 8489 y(in)38 b(the)g(local)h(data)g
(structure)f(graph.)50 b(T)-12 b(o)39 b(indicate)f(that)g(function)f
(calls)i(are)-303 8663 y(in)-6 b(v)m(olv)n(ed,)48 b Fr(call)e
Fp(nodes)h(are)h(introduced)d(into)h(the)h(local)g(data)h(structure)
-303 8837 y(graph)40 b(\(sho)l(wn)h(in)g(Figure)g(9\).)58
b(When)41 b(the)h(data)f(structure)f(graphs)h(for)g(the)-303
9012 y(called)h(functions)g(are)h(a)m(v)l(ailable,)i(the)d(call)h
(nodes)g(are)g(eliminated,)h(being)-303 9186 y(replaced)39
b(with)e(the)i(analysis)f(information)e(in)i(the)h(called)g(function)d
(graph)-303 9360 y(itself.)94 b(Thus,)58 b(the)53 b(interprocedural)e
(closure)i(algorithm)f(is)h(the)h(process)-303 9535 y(of)j(resolving)g
Fr(call)f Fp(nodes)i(to)g(the)f(graphs)h(that)f(the)n(y)g(represent,)64
b(pro-)-303 9709 y(pog)o(ating)47 b(interprocedural)f(information)h
(from)h(the)h(called)f(functions)f(to)-303 9883 y(the)37
b(caller)g(function')-8 b(s)35 b(graphs.)-154 10058 y(In)51
b(general,)k(each)e Fr(call)d Fp(node)h(\(and)g(therefore,)k(the)c
Fr(call)f Fp(instruc-)-303 10232 y(tion)42 b(it)g(represents\))h(may)h
(be)f(able)h(to)f(call)g(multiple)f(functions)f(if)i(it)f(is)i(an)-303
10406 y(indirect)55 b(call.)103 b(Our)56 b(analysis)g(handles)g(this)f
(in)g(a)i(simple)f(and)g(uniform)-303 10581 y(w)o(ay)-10
b(.)45 b(Functions)31 b(are)j(considered)e(to)g(be)h(global)f(objects)g
(themselv)n(es)h(\(and)-303 10755 y(are)49 b(therefore)g(represented)g
(with)e(a)j(node)e(in)h(the)g(data)g(structure)f(graph\))4080
-137 y(and)40 b(all)g Fr(call)f Fp(nodes)h(ha)m(v)n(e)h(a)f(\002eld)g
(that)g(indicates)g(which)f(functions)g(are)4080 37 y(called)58
b(by)f(the)g Fr(call)g Fp(node.)107 b(The)58 b(common)g(case)g(is)g(to)
f(call)g(a)h(single)4080 211 y(function)36 b(directly)-10
b(,)38 b(b)m(ut)f(there)g(may)i(be)f(a)g(call)g(to)f(a)i(shado)l(w)f
(function)e(\(if)h(a)4080 386 y(function)30 b(pointer)g(is)i(passed)g
(into)f(the)g(current)g(function\),)h(or)f(may)h(contain)4080
560 y(edges)38 b(to)e(multiple)g(functions)g(\(if)g(its)h(an)g
(indirect)f(call\).)4230 809 y Fq(ComputeInter)o(pr)m(oceduralClosur)m
(e)p Fp(\(graph)i Fi(G)p Fp(\))4379 983 y Fi(I)12 b(nl)r(inedF)21
b(nsS)8 b(et)37 b Fp(=)h Fs(;)4379 1158 y Fp(while)e
Fs(9)i Fp(node)f Fi(C)11 b(al)r(l)40 b Fs(2)d Fp(CallNodes\()p
Fi(G)p Fp(\))4529 1332 y(scalarnode)g Fi(C)11 b(al)r(l)r(V)34
b(al)r(ue)39 b Fp(=)e(ScalarF)n(or\()p Fi(C)11 b(al)r(l)r
Fp(\))4529 1506 y(if)36 b Fi(C)11 b(al)r(l)40 b Fs(2)e
Fi(I)12 b(nl)r(inedF)21 b(nsS)8 b(et)37 b Fp(then)4678
1681 y(Resolv)n(eNodeT)-12 b(o\()p Fi(C)11 b(al)r(l)r(V)33
b(al)r(ue)p Fp(,)39 b Fi(I)12 b(nl)r(inedF)21 b(nsS)8
b(et)p Fp([)p Fi(C)j(al)r(l)r Fp(]\))4529 1855 y(else)216
b(//)36 b(Ha)m(v)n(en')m(t)h(already)g(resolv)n(ed)g(this)f(function)
4678 2029 y Fi(R)q(etur)t(nP)21 b(tr)44 b Fp(=)38 b Fs(;)4678
2204 y(8)g Fp(node)f Fi(F)21 b(n)37 b Fs(2)h Fp(T)-12
b(ar)m(getFunctions\()p Fi(C)11 b(al)r(l)r Fp(\))4827
2378 y Fi(<r)t(etptr)t Fp(,)41 b Fi(ar)t(g)5 b(ptr)t(s>)40
b Fp(=)e(Inline\()p Fi(F)21 b(n)p Fp(,)36 b Fi(G)p Fp(\))4827
2552 y Fi(R)q(etur)t(nP)21 b(tr)45 b Fp(=)38 b Fi(R)q(etur)t(nP)21
b(tr)6518 2440 y Ff(S)6683 2552 y Fi(r)t(etptr)4827 2727
y Fp(//)37 b(Resolv)n(e)f(ar)m(gument)i(shado)l(w)f(nodes)g(to)f(call)h
(parameters)4827 2901 y Fs(8)h Fp(ptrset)e Fi(Ar)t(g)44
b Fs(2)38 b Fi(ar)t(g)5 b(ptr)t(s)4977 3075 y Fp(Resolv)n(eNodeT)-12
b(o\()p Fi(Ar)t(g)5 b Fp(,)38 b(P)n(aram\()p Fi(C)11
b(al)r(l)r Fp(,)38 b Fi(Ar)t(g)5 b Fp(\)\))4678 3250
y Fi(I)12 b(nl)r(inedF)21 b(nsS)8 b(et)p Fp([)p Fi(C)j(al)r(l)r
Fp(])37 b(=)h Fi(R)q(etur)t(nP)21 b(tr)4678 3424 y Fp(//)36
b(Resolv)n(e)h(returned)f(v)l(alue)i(to)e(union)g(of)h(returned)f
(pointers)4678 3598 y(Resolv)n(eNodeT)-12 b(o\()p Fi(C)11
b(al)r(l)r(V)33 b(al)r(ue)p Fp(,)39 b Fi(R)q(etur)t(nP)21
b(tr)t Fp(\))4678 3773 y(Remo)n(v)n(eFromGraph\()p Fi(C)11
b(al)r(l)r Fp(\))4678 3947 y(Remo)n(v)n(eUnreachableNodes\()p
Fi(G)p Fp(\))4230 4296 y(//)36 b(\223unkno)l(wn\224)h(node)f
Fi(N)54 b Fp(is)37 b(no)l(w)g(points)f(to)g Fi(P)21 b(tr)t(V)35
b(al)40 b Fp(set)4230 4470 y Fq(Resolv)o(eNodeT)-14 b(o)p
Fp(\(scalarnode)36 b Fi(N)16 b Fp(,)37 b(ptrset)g Fi(P)21
b(tr)t(V)35 b(al)r Fp(\))4379 4645 y(edges\()p Fi(N)16
b Fp(\).add\()p Fi(P)21 b(tr)t(V)35 b(al)r Fp(\))4379
4819 y(GraphSimplify\()p Fi(N)16 b Fp(\))4379 4993 y(Remo)n(v)n
(eFromGraph\()p Fi(N)g Fp(\))4629 5506 y Fq(Figur)m(e)38
b(7:)45 b(Inter)o(pr)m(ocedural)39 b(Closur)m(e)f(Algorithm)4230
5772 y Fp(The)45 b(interprocedural)d(closure)j(algorithm)e(\(de\002ned)
h(in)g(Figure)g(7\))g(op-)4080 5947 y(erates)i(by)g(looping)d(o)n(v)n
(er)i(the)g Fr(call)g Fp(nodes)g(in)g(the)h(speci\002ed)g(graph,)h(in-)
4080 6121 y(lining)k(each)i(called)g(function')-8 b(s)50
b(graph)i(in)g(place)h(of)f(the)h(call)f(node.)92 b(As)4080
6295 y(it)50 b(does)h(so,)j(it)c(uses)h(the)g Fr(ResolveNodeTo)46
b Fp(function)j(to)i(resolv)n(e)f(an)n(y)4080 6470 y(ar)m(gument)35
b(shado)l(w)g(nodes)g(to)f(the)h(actual)g(parameters)h(that)e(are)i
(passed)g(in.)4080 6644 y(This)i(analysis)f(handles)h(indirect)e(call)i
(nodes)f(by)g(repeatedly)h(inlining)d(the)4080 6818 y(called)43
b(function)d(graphs)i(for)g(each)h(function)d(called)j(by)f(a)g
(particular)f(call)4080 6993 y(node.)78 b(If)47 b(the)h(called)f
(function)f(returns)h(a)h(pointer)-6 b(,)49 b(the)f(return)e(v)l(alue)i
(set)4080 7167 y(of)41 b(the)g(inlined)e(function)g(graph)h(is)h(used)g
(to)g(eliminate)f(the)h(shado)l(w)g(node)4080 7342 y(generated)c(for)g
(the)g(call)g(node.)4230 7516 y(The)i(core)g(of)f(the)h
(interprocedural)d(closure)j(algorithm)e(is)h(the)h(\223Inline\224)4080
7690 y(function.)53 b(This)39 b(graph)g(inliner)g(copies)g(all)h(of)f
(the)g(nodes)h(from)f(the)h(graph)4080 7865 y(of)47 b(the)g
(speci\002ed)h(function)d(into)h(another)g(graph,)k(preserving)c(edges)
h(be-)4080 8039 y(tween)58 b(nodes.)108 b(The)59 b Fr(scalar)d
Fp(nand)h Fr(alloca)f Fp(nodes)i(of)f(the)h(inlined)4080
8213 y(function)46 b(are)i(discarded)f(and)h(their)e(incident)h(edges)h
(are)g(remo)n(v)n(ed)f(from)4080 8388 y(the)32 b(graph)f(\(the)h(v)l
(alues)g(the)n(y)f(represent)h(are)h(out)e(of)h(scope,)i(so)e(the)n(y)f
(cannot)4080 8562 y(be)40 b(referenced\).)54 b(The)41
b(return)d(v)l(alue)i(set)g(and)f(the)h(set)g(of)f(ar)m(gument)h(nodes)
4080 8736 y(from)e(the)g(inlined)e(graph)i(are)g(returned)g(as)g(a)h
(pair)-8 b(.)49 b(The)38 b(result)f(of)h(inlining)4080
8911 y(a)49 b(function)e(call)i(is)f(memoized)i(in)e(the)g
Fn(InlinedFnsSet)f Fp(to)h(a)m(v)m(oid)g(in\002nite)4080
9085 y(recursion)37 b(when)g(inlining)d(recursi)l(v)n(e)j(functions.)
4230 9259 y(Although)29 b(it)h(is)h(possible)f(to)h(simply)f(inline)g
(the)h(intraprocedural)e(datas-)4080 9434 y(tructure)40
b(graph)h(for)g(a)g(function,)g(the)g(inliner)f(prefers)h(to)g(inline)f
(the)h(inter)m(-)4080 9608 y(procedural)50 b(graph)g(for)g(the)g
(speci\002ed)h(function)e(if)h(it)g(is)g(a)m(v)l(ailable.)87
b(The)4080 9782 y(only)40 b(scenario)g(where)h(the)f(graph)g(is)h(una)m
(v)l(ailable)f(is)g(when)g(we)h(are)g(inlin-)4080 9957
y(ing)34 b(a)g(function)f(call)h(to)f(a)i(mutually)e(recursi)l(v)n(e)h
(function,)f(in)h(this)f(case,)k(the)4080 10131 y(intraprocedural)43
b(graph)h(must)h(be)g(selected)g(to)f(a)m(v)m(oid)g(in\002nite)g
(recursion.)4080 10305 y(T)-12 b(o)48 b(get)e(this)h(ef)l(fect,)j(we)e
(calculate)f(the)g(interprocedural)e(closure)i(graphs)4080
10480 y(in)37 b(a)h(postorder)d(tra)m(v)n(ersal)i(o)n(v)n(er)f(the)h
(call)h(graph.)4230 10654 y(The)67 b(\223Resolv)n(eNodeT)-12
b(o\224)68 b(function)d(mer)m(ges)k(a)e(node)g(with)f(a)i(set)g(of)p
eop end
%%Page: 7 7
TeXDict begin 7 6 bop -303 -137 a Fp(nodes)73 b(referenced)h(by)g(a)g
(pointer)e(v)l(alue,)83 b(and)74 b(is)g(used)f(to)g(eliminate)-303
37 y(shado)l(w)50 b(nodes.)84 b(This)50 b(function)e(tak)o(es)i(a)g
(node)g(ar)m(gument)g(and)g(a)g(set)g(of)-303 211 y(pointer)32
b(v)l(alues)j(to)f(resolv)n(e.)45 b(The)35 b(node)f(ar)m(gument)g(is)g
(either)g(the)g Fr(scalar)-303 386 y Fp(node)29 b(that)h(captures)g
(the)f(return)g(v)l(alue)i(of)e(a)i(call,)g(or)f(is)g(a)g(pointer)f(ar)
m(gument)-303 560 y(in)37 b(the)g(inlined)f(function)f(that)i(is)h(no)l
(w)f(being)g(resolv)n(ed.)46 b(The)38 b(\223Resolv)n(eN-)-303
734 y(ode\224)i(function)f(operates)h(by)g(using)g(the)g
(\223GraphSimplify\224)f(algorithm)f(to)-303 909 y(mer)m(ge)29
b(the)f(node)g(sets)h(together)-6 b(,)29 b(eliminating)d(the)i(shado)l
(w)g(nodes)h(inserted)-303 1083 y(during)35 b(the)i(node)g(disco)n(v)n
(ery)f(phase.)-154 1257 y(As)29 b(a)g(e)n(xample)g(to)f(sho)l(w)g(the)g
(interprocedural)f(closure)h(algorithm,)h(con-)-303 1432
y(sider)37 b(the)f Fr(ProcessLists)e Fp(function:)-144
1616 y Fj(void)79 b(ProcessLists\(unsigned)73 b(N\))79
b({)15 1766 y(List)g(*L1)g(=)g(malloc\(sizeof\(List\)\);)15
1915 y(List)g(*L2)g(=)g(malloc\(sizeof\(List\)\);)15
2065 y(unsigned)f(i;)15 2214 y(/*)i(populate)d(lists)h(*/)15
2363 y(for)h(\(i)g(=)h(0;)f(i)g(!=)g(N;)g(++i\))g({)175
2513 y(addList\(L1,)d(malloc\(sizeof\(Patient\)\)\);)175
2662 y(addList\(L2,)g(malloc\(sizeof\(Patient\)\)\);)15
2812 y(})15 2961 y(useLists\(L1,)h(L2\);)237 b(/*)80
b(Use)e(lists)h(*/)-144 3111 y(})203 3604 y Fq(Figur)m(e)38
b(8:)46 b(Sour)m(ce)38 b(f)l(or)g Fr(ProcessLists)33
b Fq(function)-154 3901 y Fp(In)47 b(this)f(e)n(xample,)k(there)d(are)h
(three)f(function)e(calls.)76 b(F)n(or)47 b(purposes)f(of)-303
4075 y(discussion,)i(assume)g(that)e(we)h(ha)m(v)n(e)g(the)g(data)f
(structure)g(graph)h(for)f Fr(ad-)-303 4250 y(dList)52
b Fp(before,)57 b(b)m(ut)c(we)h(do)f(not)f(ha)m(v)n(e)i(the)f(graph)g
(for)g Fr(useList)e Fp(yet.)-303 4424 y(In)39 b(this)g(case,)i(the)f
(tw)o(o)e Fr(addList)g(call)g Fp(nodes)h(in)g(the)h(intraprocedural)
-303 4599 y(data)53 b(structure)f(graph)h(\(Figure)g(9\))f(may)i(be)g
(resolv)n(ed)e(to)h(actual)g(graphs)-303 4773 y(that)36
b(the)n(y)h(correspond)f(to.)p -162 4906 3703 7 v -162
5694 7 788 v -111 5649 a @beginspecial 35 @llx 35 @lly
726 @urx 169 @ury 2160 @rwi @setspecial
%%BeginDocument: Figures/DoListStuff_local.ps
%!PS-Adobe-2.0
%%Creator: dot version 1.8.2 (Fri Mar 15 13:54:34 EST 2002)
%%For: (lattner) Christopher Lattner
%%Title: DataStructures
%%Pages: (atend)
%%BoundingBox: 35 35 726 169
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 726 169
%%PageOrientation: Portrait
gsave
35 35 691 134 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	Node0x403a38
gsave 10 dict begin
newpath 144 8 moveto
212 8 lineto
stroke
newpath 212 8 moveto
218 8 224 14 224 20 curveto
stroke
newpath 224 20 moveto
224 36 lineto
stroke
newpath 224 36 moveto
224 42 218 48 212 48 curveto
stroke
newpath 212 48 moveto
144 48 lineto
stroke
newpath 144 48 moveto
138 48 132 42 132 36 curveto
stroke
newpath 132 36 moveto
132 20 lineto
stroke
newpath 132 20 moveto
132 14 138 8 144 8 curveto
stroke
gsave 10 dict begin
178 33 moveto 78 -0.5 (new  %List) alignedtext
end grestore
newpath 132 28 moveto
224 28 lineto
stroke
gsave 10 dict begin
147 13 moveto 4 -0.5 ( ) alignedtext
end grestore
newpath 162 8 moveto
162 28 lineto
stroke
gsave 10 dict begin
177 13 moveto 4 -0.5 ( ) alignedtext
end grestore
newpath 193 8 moveto
193 28 lineto
stroke
gsave 10 dict begin
208 13 moveto 4 -0.5 ( ) alignedtext
end grestore
end grestore

%	Node0x403fd0
gsave 10 dict begin
newpath 464 8 moveto
532 8 lineto
stroke
newpath 532 8 moveto
538 8 544 14 544 20 curveto
stroke
newpath 544 20 moveto
544 36 lineto
stroke
newpath 544 36 moveto
544 42 538 48 532 48 curveto
stroke
newpath 532 48 moveto
464 48 lineto
stroke
newpath 464 48 moveto
458 48 452 42 452 36 curveto
stroke
newpath 452 36 moveto
452 20 lineto
stroke
newpath 452 20 moveto
452 14 458 8 464 8 curveto
stroke
gsave 10 dict begin
498 33 moveto 78 -0.5 (new  %List) alignedtext
end grestore
newpath 452 28 moveto
544 28 lineto
stroke
gsave 10 dict begin
467 13 moveto 4 -0.5 ( ) alignedtext
end grestore
newpath 482 8 moveto
482 28 lineto
stroke
gsave 10 dict begin
497 13 moveto 4 -0.5 ( ) alignedtext
end grestore
newpath 513 8 moveto
513 28 lineto
stroke
gsave 10 dict begin
528 13 moveto 4 -0.5 ( ) alignedtext
end grestore
end grestore

%	Node0x404730
gsave 10 dict begin
newpath 12 8 moveto
102 8 lineto
stroke
newpath 102 8 moveto
108 8 114 14 114 20 curveto
stroke
newpath 114 20 moveto
114 36 lineto
stroke
newpath 114 36 moveto
114 42 108 48 102 48 curveto
stroke
newpath 102 48 moveto
12 48 lineto
stroke
newpath 12 48 moveto
6 48 0 42 0 36 curveto
stroke
newpath 0 36 moveto
0 20 lineto
stroke
newpath 0 20 moveto
0 14 6 8 12 8 curveto
stroke
gsave 10 dict begin
57 33 moveto 100 -0.5 (new  %Patient) alignedtext
end grestore
newpath 0 28 moveto
114 28 lineto
stroke
gsave 10 dict begin
57 13 moveto 4 -0.5 ( ) alignedtext
end grestore
end grestore

%	Node0x404780
gsave 10 dict begin
newpath 574 8 moveto
664 8 lineto
stroke
newpath 664 8 moveto
670 8 676 14 676 20 curveto
stroke
newpath 676 20 moveto
676 36 lineto
stroke
newpath 676 36 moveto
676 42 670 48 664 48 curveto
stroke
newpath 664 48 moveto
574 48 lineto
stroke
newpath 574 48 moveto
568 48 562 42 562 36 curveto
stroke
newpath 562 36 moveto
562 20 lineto
stroke
newpath 562 20 moveto
562 14 568 8 574 8 curveto
stroke
gsave 10 dict begin
619 33 moveto 100 -0.5 (new  %Patient) alignedtext
end grestore
newpath 562 28 moveto
676 28 lineto
stroke
gsave 10 dict begin
619 13 moveto 4 -0.5 ( ) alignedtext
end grestore
end grestore

%	Node0x401ee0
gsave 10 dict begin
newpath 163 84 moveto
193 84 lineto
stroke
newpath 193 84 moveto
199 84 205 90 205 96 curveto
stroke
newpath 205 96 moveto
205 112 lineto
stroke
newpath 205 112 moveto
205 118 199 124 193 124 curveto
stroke
newpath 193 124 moveto
163 124 lineto
stroke
newpath 163 124 moveto
157 124 151 118 151 112 curveto
stroke
newpath 151 112 moveto
151 96 lineto
stroke
newpath 151 96 moveto
151 90 157 84 163 84 curveto
stroke
gsave 10 dict begin
178 109 moveto 23 -0.5 (call) alignedtext
end grestore
newpath 151 104 moveto
205 104 lineto
stroke
gsave 10 dict begin
160 89 moveto 4 -0.5 ( ) alignedtext
end grestore
newpath 169 84 moveto
169 104 lineto
stroke
gsave 10 dict begin
178 89 moveto 4 -0.5 ( ) alignedtext
end grestore
newpath 187 84 moveto
187 104 lineto
stroke
gsave 10 dict begin
196 89 moveto 4 -0.5 ( ) alignedtext
end grestore
end grestore

%	Node0x401ee0 -> Node0x403a38
newpath 178 82 moveto
178 76 178 67 178 58 curveto
stroke
0.000 0.000 0.000 edgecolor
178 84 2 2 ellipse_path
fill
0.000 0.000 0.000 edgecolor
0.000 0.000 0.000 edgecolor
newpath 176 58 moveto
178 48 lineto
181 58 lineto
closepath
fill
0.000 0.000 0.000 edgecolor

%	Node0x401ee0 -> Node0x404730
newpath 186 90 moveto
170 83 138 67 109 53 curveto
stroke
0.000 0.000 0.000 edgecolor
187 90 2 2 ellipse_path
fill
0.000 0.000 0.000 edgecolor
0.000 0.000 0.000 edgecolor
newpath 107 55 moveto
99 48 lineto
109 50 lineto
closepath
fill
0.000 0.000 0.000 edgecolor

%	addList
gsave 10 dict begin
newpath 254 10 moveto
316 10 lineto
stroke
newpath 316 10 moveto
322 10 328 16 328 22 curveto
stroke
newpath 328 22 moveto
328 34 lineto
stroke
newpath 328 34 moveto
328 40 322 46 316 46 curveto
stroke
newpath 316 46 moveto
254 46 lineto
stroke
newpath 254 46 moveto
248 46 242 40 242 34 curveto
stroke
newpath 242 34 moveto
242 21 lineto
stroke
newpath 242 21 moveto
242 16 248 10 254 10 curveto
stroke
gsave 10 dict begin
285 23 moveto 72 -0.5 (fn addList) alignedtext
end grestore
end grestore

%	Node0x401ee0 -> addList
newpath 171 88 moveto
187 80 219 64 245 49 curveto
stroke
0.000 0.000 0.000 edgecolor
169 89 2 2 ellipse_path
fill
0.000 0.000 0.000 edgecolor
0.000 0.000 0.000 edgecolor
newpath 241 48 moveto
251 46 lineto
243 53 lineto
closepath
fill
0.000 0.000 0.000 edgecolor

%	useLists
gsave 10 dict begin
newpath 358 10 moveto
423 10 lineto
stroke
newpath 423 10 moveto
429 10 435 16 435 22 curveto
stroke
newpath 435 22 moveto
435 34 lineto
stroke
newpath 435 34 moveto
435 40 429 46 423 46 curveto
stroke
newpath 423 46 moveto
358 46 lineto
stroke
newpath 358 46 moveto
352 46 346 40 346 34 curveto
stroke
newpath 346 34 moveto
346 21 lineto
stroke
newpath 346 21 moveto
346 16 352 10 358 10 curveto
stroke
gsave 10 dict begin
390 23 moveto 75 -0.5 (fn useLists) alignedtext
end grestore
end grestore

%	Node0x404500
gsave 10 dict begin
newpath 483 84 moveto
513 84 lineto
stroke
newpath 513 84 moveto
519 84 525 90 525 96 curveto
stroke
newpath 525 96 moveto
525 112 lineto
stroke
newpath 525 112 moveto
525 118 519 124 513 124 curveto
stroke
newpath 513 124 moveto
483 124 lineto
stroke
newpath 483 124 moveto
477 124 471 118 471 112 curveto
stroke
newpath 471 112 moveto
471 96 lineto
stroke
newpath 471 96 moveto
471 90 477 84 483 84 curveto
stroke
gsave 10 dict begin
498 109 moveto 23 -0.5 (call) alignedtext
end grestore
newpath 471 104 moveto
525 104 lineto
stroke
gsave 10 dict begin
480 89 moveto 4 -0.5 ( ) alignedtext
end grestore
newpath 489 84 moveto
489 104 lineto
stroke
gsave 10 dict begin
498 89 moveto 4 -0.5 ( ) alignedtext
end grestore
newpath 507 84 moveto
507 104 lineto
stroke
gsave 10 dict begin
516 89 moveto 4 -0.5 ( ) alignedtext
end grestore
end grestore

%	Node0x404500 -> Node0x403fd0
newpath 498 82 moveto
498 76 498 67 498 58 curveto
stroke
0.000 0.000 0.000 edgecolor
498 84 2 2 ellipse_path
fill
0.000 0.000 0.000 edgecolor
0.000 0.000 0.000 edgecolor
newpath 496 58 moveto
498 48 lineto
501 58 lineto
closepath
fill
0.000 0.000 0.000 edgecolor

%	Node0x404500 -> Node0x404780
newpath 526 83 moveto
539 72 556 62 571 53 curveto
stroke
0.000 0.000 0.000 edgecolor
525 84 2 2 ellipse_path
fill
0.000 0.000 0.000 edgecolor
0.000 0.000 0.000 edgecolor
newpath 569 51 moveto
579 48 lineto
572 55 lineto
closepath
fill
0.000 0.000 0.000 edgecolor

%	Node0x404500 -> addList
newpath 470 83 moveto
415 51 390 68 332 49 curveto
stroke
0.000 0.000 0.000 edgecolor
471 84 2 2 ellipse_path
fill
0.000 0.000 0.000 edgecolor
0.000 0.000 0.000 edgecolor
newpath 332 52 moveto
323 46 lineto
333 47 lineto
closepath
fill
0.000 0.000 0.000 edgecolor

%	Node0x404558
gsave 10 dict begin
newpath 393 84 moveto
423 84 lineto
stroke
newpath 423 84 moveto
429 84 435 90 435 96 curveto
stroke
newpath 435 96 moveto
435 112 lineto
stroke
newpath 435 112 moveto
435 118 429 124 423 124 curveto
stroke
newpath 423 124 moveto
393 124 lineto
stroke
newpath 393 124 moveto
387 124 381 118 381 112 curveto
stroke
newpath 381 112 moveto
381 96 lineto
stroke
newpath 381 96 moveto
381 90 387 84 393 84 curveto
stroke
gsave 10 dict begin
408 109 moveto 23 -0.5 (call) alignedtext
end grestore
newpath 381 104 moveto
435 104 lineto
stroke
gsave 10 dict begin
390 89 moveto 4 -0.5 ( ) alignedtext
end grestore
newpath 399 84 moveto
399 104 lineto
stroke
gsave 10 dict begin
408 89 moveto 4 -0.5 ( ) alignedtext
end grestore
newpath 417 84 moveto
417 104 lineto
stroke
gsave 10 dict begin
426 89 moveto 4 -0.5 ( ) alignedtext
end grestore
end grestore

%	Node0x404558 -> Node0x403a38
newpath 398 90 moveto
393 88 387 85 381 84 curveto
315 64 294 69 233 51 curveto
stroke
0.000 0.000 0.000 edgecolor
399 90 2 2 ellipse_path
fill
0.000 0.000 0.000 edgecolor
0.000 0.000 0.000 edgecolor
newpath 233 54 moveto
224 48 lineto
234 49 lineto
closepath
fill
0.000 0.000 0.000 edgecolor

%	Node0x404558 -> Node0x403fd0
newpath 436 83 moveto
446 73 457 63 467 54 curveto
stroke
0.000 0.000 0.000 edgecolor
435 84 2 2 ellipse_path
fill
0.000 0.000 0.000 edgecolor
0.000 0.000 0.000 edgecolor
newpath 465 53 moveto
474 48 lineto
468 56 lineto
closepath
fill
0.000 0.000 0.000 edgecolor

%	Node0x404558 -> useLists
newpath 390 83 moveto
390 76 390 65 390 56 curveto
stroke
0.000 0.000 0.000 edgecolor
390 84 2 2 ellipse_path
fill
0.000 0.000 0.000 edgecolor
0.000 0.000 0.000 edgecolor
newpath 388 56 moveto
390 46 lineto
393 56 lineto
closepath
fill
0.000 0.000 0.000 edgecolor

%	Node0x403718Local
gsave 10 dict begin
0.000 0.000 0.702 nodecolor
newpath 320 122 moveto
266 122 lineto
266 86 lineto
320 86 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
12.00 /Times-Roman set_font
293 106 moveto 43 -0.5 ( %List*) alignedtext
293 93 moveto 25 -0.5 (%L1) alignedtext
end grestore
end grestore

%	Node0x403718Local -> Node0x403a38
gsave 10 dict begin
0.000 0.000 0.702 edgecolor
newpath 265 86 moveto
250 77 232 64 216 53 curveto
stroke
0.000 0.000 0.702 edgecolor
266 86 2 2 ellipse_path
fill
0.000 0.000 0.702 edgecolor
0.000 0.000 0.702 edgecolor
newpath 215 55 moveto
208 48 lineto
218 51 lineto
closepath
fill
0.000 0.000 0.702 edgecolor
end grestore

%	Node0x403760Local
gsave 10 dict begin
0.000 0.000 0.702 nodecolor
newpath 597 122 moveto
543 122 lineto
543 86 lineto
597 86 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
12.00 /Times-Roman set_font
570 106 moveto 43 -0.5 ( %List*) alignedtext
570 93 moveto 28 -0.5 (%L2) alignedtext
end grestore
end grestore

%	Node0x403760Local -> Node0x403fd0
gsave 10 dict begin
0.000 0.000 0.702 edgecolor
newpath 552 85 moveto
543 76 533 65 524 55 curveto
stroke
0.000 0.000 0.702 edgecolor
553 86 2 2 ellipse_path
fill
0.000 0.000 0.702 edgecolor
0.000 0.000 0.702 edgecolor
newpath 522 57 moveto
517 48 lineto
526 53 lineto
closepath
fill
0.000 0.000 0.702 edgecolor
end grestore

%	Node0x403c60Local
gsave 10 dict begin
0.000 0.000 0.702 nodecolor
newpath 114 122 moveto
40 122 lineto
40 86 lineto
114 86 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
12.00 /Times-Roman set_font
77 106 moveto 62 -0.5 ( %Patient*) alignedtext
77 93 moveto 46 -0.5 (%reg117) alignedtext
end grestore
end grestore

%	Node0x403c60Local -> Node0x404730
gsave 10 dict begin
0.000 0.000 0.702 edgecolor
newpath 72 85 moveto
70 77 67 67 65 58 curveto
stroke
0.000 0.000 0.702 edgecolor
72 86 2 2 ellipse_path
fill
0.000 0.000 0.702 edgecolor
0.000 0.000 0.702 edgecolor
newpath 62 58 moveto
62 48 lineto
67 57 lineto
closepath
fill
0.000 0.000 0.702 edgecolor
end grestore

%	Node0x403cf0Local
gsave 10 dict begin
0.000 0.000 0.702 nodecolor
newpath 689 122 moveto
615 122 lineto
615 86 lineto
689 86 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
12.00 /Times-Roman set_font
652 106 moveto 62 -0.5 ( %Patient*) alignedtext
652 93 moveto 48 -0.5 (%reg120) alignedtext
end grestore
end grestore

%	Node0x403cf0Local -> Node0x404780
gsave 10 dict begin
0.000 0.000 0.702 edgecolor
newpath 644 85 moveto
640 77 636 67 632 57 curveto
stroke
0.000 0.000 0.702 edgecolor
644 86 2 2 ellipse_path
fill
0.000 0.000 0.702 edgecolor
0.000 0.000 0.702 edgecolor
newpath 630 58 moveto
628 48 lineto
634 56 lineto
closepath
fill
0.000 0.000 0.702 edgecolor
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1
%%Trailer
%%Pages: 1
end
restore
%%EOF

%%EndDocument
 @endspecial 3534 5694 V -162 5701 3703 7 v 234 5990
a Fq(Figur)m(e)i(9:)45 b Fk(Intrapr)n(ocedural)34 b Fj(ProcessLists)29
b Fk(graph)-154 6257 y Fp(Inlining)38 b(the)h(function)g(graph)g(for)h
(the)f(\002rst)h Fr(addList)e Fp(call)i(results)f(in)-303
6431 y(one)44 b(of)g(the)g(P)n(atient)f(and)h(one)h(of)f(the)g(List)g
(nodes)g(being)f(used)i(to)e(resolv)n(e)-303 6605 y(the)32
b(incoming)g(ar)m(guments)h(of)g(the)f Fr(addList)f Fp(function.)43
b(After)33 b(the)f(graph)-303 6780 y(is)39 b(inlined,)f(it)g(is)h
(simpli\002ed)f(\(see)i(Section)f Fh(2.2.3)g Fp(which)g(mer)m(ges)h
(the)f(e)n(x-)-303 6954 y(isting)45 b(shado)l(w)i(P)n(atient)g(node)f
(with)g(the)h(P)n(atient)g(node)f(allocated)h(in)g(this)-303
7128 y(function.)c(The)35 b(second)g(call)f(is)g(inlined)e(in)i(an)g
(identical)f(manner)-6 b(,)36 b(produc-)-303 7303 y(ing)g(the)h
(\002nished)g(graph)f(sho)l(wn)h(in)g(Figure)f(10.)p
-162 7436 V -162 9107 7 1672 v -111 9063 a @beginspecial
35 @llx 35 @lly 513 @urx 245 @ury 2160 @rwi @setspecial
%%BeginDocument: Figures/DoListStuff_resolved.ps
%!PS-Adobe-2.0
%%Creator: dot version 1.8.2 (Fri Mar 15 13:54:34 EST 2002)
%%For: (lattner) Christopher Lattner
%%Title: DataStructures
%%Pages: (atend)
%%BoundingBox: 35 35 513 245
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 513 245
%%PageOrientation: Portrait
gsave
35 35 478 210 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	Node0x401c88
gsave 10 dict begin
newpath 165 8 moveto
255 8 lineto
stroke
newpath 255 8 moveto
261 8 267 14 267 20 curveto
stroke
newpath 267 20 moveto
267 36 lineto
stroke
newpath 267 36 moveto
267 42 261 48 255 48 curveto
stroke
newpath 255 48 moveto
165 48 lineto
stroke
newpath 165 48 moveto
159 48 153 42 153 36 curveto
stroke
newpath 153 36 moveto
153 20 lineto
stroke
newpath 153 20 moveto
153 14 159 8 165 8 curveto
stroke
gsave 10 dict begin
210 33 moveto 100 -0.5 (new  %Patient) alignedtext
end grestore
newpath 153 28 moveto
267 28 lineto
stroke
gsave 10 dict begin
210 13 moveto 4 -0.5 ( ) alignedtext
end grestore
end grestore

%	Node0x401cd8
gsave 10 dict begin
newpath 311 8 moveto
401 8 lineto
stroke
newpath 401 8 moveto
407 8 413 14 413 20 curveto
stroke
newpath 413 20 moveto
413 36 lineto
stroke
newpath 413 36 moveto
413 42 407 48 401 48 curveto
stroke
newpath 401 48 moveto
311 48 lineto
stroke
newpath 311 48 moveto
305 48 299 42 299 36 curveto
stroke
newpath 299 36 moveto
299 20 lineto
stroke
newpath 299 20 moveto
299 14 305 8 311 8 curveto
stroke
gsave 10 dict begin
356 33 moveto 100 -0.5 (new  %Patient) alignedtext
end grestore
newpath 299 28 moveto
413 28 lineto
stroke
gsave 10 dict begin
356 13 moveto 4 -0.5 ( ) alignedtext
end grestore
end grestore

%	Node0x409008
gsave 10 dict begin
newpath 176 84 moveto
244 84 lineto
stroke
newpath 244 84 moveto
250 84 256 90 256 96 curveto
stroke
newpath 256 96 moveto
256 112 lineto
stroke
newpath 256 112 moveto
256 118 250 124 244 124 curveto
stroke
newpath 244 124 moveto
176 124 lineto
stroke
newpath 176 124 moveto
170 124 164 118 164 112 curveto
stroke
newpath 164 112 moveto
164 96 lineto
stroke
newpath 164 96 moveto
164 90 170 84 176 84 curveto
stroke
gsave 10 dict begin
210 109 moveto 78 -0.5 (new  %List) alignedtext
end grestore
newpath 164 104 moveto
256 104 lineto
stroke
gsave 10 dict begin
179 89 moveto 4 -0.5 ( ) alignedtext
end grestore
newpath 194 84 moveto
194 104 lineto
stroke
gsave 10 dict begin
209 89 moveto 4 -0.5 ( ) alignedtext
end grestore
newpath 225 84 moveto
225 104 lineto
stroke
gsave 10 dict begin
240 89 moveto 4 -0.5 ( ) alignedtext
end grestore
end grestore

%	Node0x409008 -> Node0x401c88
newpath 210 82 moveto
210 76 210 67 210 58 curveto
stroke
0.000 0.000 0.000 edgecolor
210 84 2 2 ellipse_path
fill
0.000 0.000 0.000 edgecolor
0.000 0.000 0.000 edgecolor
newpath 208 58 moveto
210 48 lineto
213 58 lineto
closepath
fill
0.000 0.000 0.000 edgecolor

%	Node0x409008 -> Node0x409008
newpath 195 83 moveto
216 70 252 53 274 75 curveto
292 93 292 114 274 133 curveto
264 143 250 138 238 130 curveto
stroke
0.000 0.000 0.000 edgecolor
194 84 2 2 ellipse_path
fill
0.000 0.000 0.000 edgecolor
0.000 0.000 0.000 edgecolor
newpath 237 132 moveto
230 124 lineto
240 128 lineto
closepath
fill
0.000 0.000 0.000 edgecolor

%	Node0x409008 -> Node0x409008
newpath 250 83 moveto
255 80 259 77 265 75 curveto
283 68 295 60 310 75 curveto
328 93 328 114 310 133 curveto
293 150 266 141 245 129 curveto
stroke
0.000 0.000 0.000 edgecolor
249 84 2 2 ellipse_path
fill
0.000 0.000 0.000 edgecolor
0.000 0.000 0.000 edgecolor
newpath 244 131 moveto
237 124 lineto
247 127 lineto
closepath
fill
0.000 0.000 0.000 edgecolor

%	Node0x4090f8
gsave 10 dict begin
newpath 322 84 moveto
390 84 lineto
stroke
newpath 390 84 moveto
396 84 402 90 402 96 curveto
stroke
newpath 402 96 moveto
402 112 lineto
stroke
newpath 402 112 moveto
402 118 396 124 390 124 curveto
stroke
newpath 390 124 moveto
322 124 lineto
stroke
newpath 322 124 moveto
316 124 310 118 310 112 curveto
stroke
newpath 310 112 moveto
310 96 lineto
stroke
newpath 310 96 moveto
310 90 316 84 322 84 curveto
stroke
gsave 10 dict begin
356 109 moveto 78 -0.5 (new  %List) alignedtext
end grestore
newpath 310 104 moveto
402 104 lineto
stroke
gsave 10 dict begin
325 89 moveto 4 -0.5 ( ) alignedtext
end grestore
newpath 340 84 moveto
340 104 lineto
stroke
gsave 10 dict begin
355 89 moveto 4 -0.5 ( ) alignedtext
end grestore
newpath 371 84 moveto
371 104 lineto
stroke
gsave 10 dict begin
386 89 moveto 4 -0.5 ( ) alignedtext
end grestore
end grestore

%	Node0x4090f8 -> Node0x401cd8
newpath 356 82 moveto
356 76 356 67 356 58 curveto
stroke
0.000 0.000 0.000 edgecolor
356 84 2 2 ellipse_path
fill
0.000 0.000 0.000 edgecolor
0.000 0.000 0.000 edgecolor
newpath 354 58 moveto
356 48 lineto
359 58 lineto
closepath
fill
0.000 0.000 0.000 edgecolor

%	Node0x4090f8 -> Node0x4090f8
newpath 341 83 moveto
362 70 398 53 420 75 curveto
438 93 438 114 420 133 curveto
410 143 396 138 384 130 curveto
stroke
0.000 0.000 0.000 edgecolor
340 84 2 2 ellipse_path
fill
0.000 0.000 0.000 edgecolor
0.000 0.000 0.000 edgecolor
newpath 383 132 moveto
376 124 lineto
386 128 lineto
closepath
fill
0.000 0.000 0.000 edgecolor

%	Node0x4090f8 -> Node0x4090f8
newpath 396 83 moveto
401 80 405 77 411 75 curveto
429 68 441 60 456 75 curveto
474 93 474 114 456 133 curveto
439 150 412 141 391 129 curveto
stroke
0.000 0.000 0.000 edgecolor
395 84 2 2 ellipse_path
fill
0.000 0.000 0.000 edgecolor
0.000 0.000 0.000 edgecolor
newpath 390 131 moveto
383 124 lineto
393 127 lineto
closepath
fill
0.000 0.000 0.000 edgecolor

%	useLists
gsave 10 dict begin
newpath 70 86 moveto
135 86 lineto
stroke
newpath 135 86 moveto
141 86 147 92 147 98 curveto
stroke
newpath 147 98 moveto
147 110 lineto
stroke
newpath 147 110 moveto
147 116 141 122 135 122 curveto
stroke
newpath 135 122 moveto
70 122 lineto
stroke
newpath 70 122 moveto
64 122 58 116 58 110 curveto
stroke
newpath 58 110 moveto
58 98 lineto
stroke
newpath 58 98 moveto
58 92 64 86 70 86 curveto
stroke
gsave 10 dict begin
102 99 moveto 75 -0.5 (fn useLists) alignedtext
end grestore
end grestore

%	Node0x4089b0
gsave 10 dict begin
newpath 195 160 moveto
225 160 lineto
stroke
newpath 225 160 moveto
231 160 237 166 237 172 curveto
stroke
newpath 237 172 moveto
237 188 lineto
stroke
newpath 237 188 moveto
237 194 231 200 225 200 curveto
stroke
newpath 225 200 moveto
195 200 lineto
stroke
newpath 195 200 moveto
189 200 183 194 183 188 curveto
stroke
newpath 183 188 moveto
183 172 lineto
stroke
newpath 183 172 moveto
183 166 189 160 195 160 curveto
stroke
gsave 10 dict begin
210 185 moveto 23 -0.5 (call) alignedtext
end grestore
newpath 183 180 moveto
237 180 lineto
stroke
gsave 10 dict begin
192 165 moveto 4 -0.5 ( ) alignedtext
end grestore
newpath 201 160 moveto
201 180 lineto
stroke
gsave 10 dict begin
210 165 moveto 4 -0.5 ( ) alignedtext
end grestore
newpath 219 160 moveto
219 180 lineto
stroke
gsave 10 dict begin
228 165 moveto 4 -0.5 ( ) alignedtext
end grestore
end grestore

%	Node0x4089b0 -> Node0x409008
newpath 210 158 moveto
210 152 210 143 210 134 curveto
stroke
0.000 0.000 0.000 edgecolor
210 160 2 2 ellipse_path
fill
0.000 0.000 0.000 edgecolor
0.000 0.000 0.000 edgecolor
newpath 208 134 moveto
210 124 lineto
213 134 lineto
closepath
fill
0.000 0.000 0.000 edgecolor

%	Node0x4089b0 -> Node0x4090f8
newpath 238 159 moveto
246 153 276 140 304 127 curveto
stroke
0.000 0.000 0.000 edgecolor
237 160 2 2 ellipse_path
fill
0.000 0.000 0.000 edgecolor
0.000 0.000 0.000 edgecolor
newpath 301 126 moveto
311 124 lineto
303 130 lineto
closepath
fill
0.000 0.000 0.000 edgecolor

%	Node0x4089b0 -> useLists
newpath 182 159 moveto
169 147 154 136 140 127 curveto
stroke
0.000 0.000 0.000 edgecolor
183 160 2 2 ellipse_path
fill
0.000 0.000 0.000 edgecolor
0.000 0.000 0.000 edgecolor
newpath 139 129 moveto
132 122 lineto
142 125 lineto
closepath
fill
0.000 0.000 0.000 edgecolor

%	Node0x403718Closed
gsave 10 dict begin
0.000 0.000 0.702 nodecolor
newpath 159 198 moveto
105 198 lineto
105 162 lineto
159 162 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
12.00 /Times-Roman set_font
132 182 moveto 43 -0.5 ( %List*) alignedtext
132 169 moveto 25 -0.5 (%L1) alignedtext
end grestore
end grestore

%	Node0x403718Closed -> Node0x409008
gsave 10 dict begin
0.000 0.000 0.702 edgecolor
newpath 151 161 moveto
161 152 172 141 183 131 curveto
stroke
0.000 0.000 0.702 edgecolor
150 162 2 2 ellipse_path
fill
0.000 0.000 0.702 edgecolor
0.000 0.000 0.702 edgecolor
newpath 181 129 moveto
190 124 lineto
185 133 lineto
closepath
fill
0.000 0.000 0.702 edgecolor
end grestore

%	Node0x403760Closed
gsave 10 dict begin
0.000 0.000 0.702 nodecolor
newpath 346 198 moveto
292 198 lineto
292 162 lineto
346 162 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
12.00 /Times-Roman set_font
319 182 moveto 43 -0.5 ( %List*) alignedtext
319 169 moveto 28 -0.5 (%L2) alignedtext
end grestore
end grestore

%	Node0x403760Closed -> Node0x4090f8
gsave 10 dict begin
0.000 0.000 0.702 edgecolor
newpath 329 161 moveto
334 153 338 142 342 133 curveto
stroke
0.000 0.000 0.702 edgecolor
328 162 2 2 ellipse_path
fill
0.000 0.000 0.702 edgecolor
0.000 0.000 0.702 edgecolor
newpath 340 132 moveto
346 124 lineto
344 134 lineto
closepath
fill
0.000 0.000 0.702 edgecolor
end grestore

%	Node0x403c60Closed
gsave 10 dict begin
0.000 0.000 0.702 nodecolor
newpath 74 198 moveto
0 198 lineto
0 162 lineto
74 162 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
12.00 /Times-Roman set_font
37 182 moveto 62 -0.5 ( %Patient*) alignedtext
37 169 moveto 46 -0.5 (%reg117) alignedtext
end grestore
end grestore

%	Node0x403c60Closed -> Node0x401c88
gsave 10 dict begin
0.000 0.000 0.702 edgecolor
newpath 34 161 moveto
32 140 31 106 49 84 curveto
78 47 104 62 147 50 curveto
stroke
0.000 0.000 0.702 edgecolor
34 162 2 2 ellipse_path
fill
0.000 0.000 0.702 edgecolor
0.000 0.000 0.702 edgecolor
newpath 143 49 moveto
153 48 lineto
144 54 lineto
closepath
fill
0.000 0.000 0.702 edgecolor
end grestore

%	Node0x403cf0Closed
gsave 10 dict begin
0.000 0.000 0.702 nodecolor
newpath 470 198 moveto
396 198 lineto
396 162 lineto
470 162 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
12.00 /Times-Roman set_font
433 182 moveto 62 -0.5 ( %Patient*) alignedtext
433 169 moveto 48 -0.5 (%reg120) alignedtext
end grestore
end grestore

%	Node0x403cf0Closed -> Node0x401cd8
gsave 10 dict begin
0.000 0.000 0.702 edgecolor
newpath 432 161 moveto
430 141 425 109 411 84 curveto
405 73 397 63 388 55 curveto
stroke
0.000 0.000 0.702 edgecolor
432 162 2 2 ellipse_path
fill
0.000 0.000 0.702 edgecolor
0.000 0.000 0.702 edgecolor
newpath 386 57 moveto
381 48 lineto
390 53 lineto
closepath
fill
0.000 0.000 0.702 edgecolor
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1
%%Trailer
%%Pages: 1
end
restore
%%EOF

%%EndDocument
 @endspecial 3534 9107 V -162 9114 3703 7 v 138 9403
a Fq(Figur)m(e)i(10:)45 b Fj(ProcessLists)30 b Fk(graph)k(with)f(r)n
(esolv)o(ed)g(calls)-154 9670 y Fp(This)47 b(e)n(xample)g(sho)l(ws)f
(three)h(critical)f(aspects)h(of)f(our)h(algorithm)e(that)-303
9844 y(dif)l(ferentiates)40 b(it)h(from)g(e)n(xisting)f(w)o(ork.)58
b(First,)42 b(it)f(is)g Fn(incr)-6 b(emental)p Fp(,)43
b(allo)l(w-)-303 10019 y(ing)49 b(programs)h(to)f(be)i(analyzed)f(as)h
(the)n(y)e(are)i(brought)d(together)-8 b(.)84 b(In)50
b(the)-303 10193 y(case)40 b(abo)n(v)n(e,)f(perhaps)g(the)f
Fr(addList)f Fp(and)i Fr(ProcessLists)c Fp(function)-303
10367 y(were)g(in)g(the)g(same)i(translation)c(unit,)i(allo)l(wing)f
(the)h(graph)f(to)h(be)h(partially)-303 10542 y(resolv)n(ed)31
b(during)g(compilation.)43 b(Presumably)-10 b(,)34 b(the)e
Fr(useLists)e Fp(function)-303 10716 y(graph)36 b(will)g(later)h(be)g
(resolv)n(ed)g(at)g(link)f(time.)4230 -137 y(The)56 b(second)h
(important)d(property)h(is)h(that)g(the)g(algorithm)e(preserv)n(es)4080
37 y Fn(disjoint)59 b Fp(data)i(structures.)118 b(In)61
b(the)g(e)n(xample)g(abo)n(v)n(e,)67 b(the)61 b(tw)o(o)f(disjoint)4080
211 y(link)o(ed)27 b(lists)g(are)j(not)d(conserv)l(ati)l(v)n(ely)h(mer)
m(ged)h(together)e(just)h(because)h(the)n(y)4080 386
y(are)45 b(b)m(uilt)d(with)h(the)h(same)h(function)d(\(the)h
Fr(addList)f Fp(function)g(allocates)4080 560 y(all)h(b)m(ut)f(one)h
(of)f(the)h(nodes)g(in)f(the)h(list\).)62 b(This)43 b(property)e(is)i
(important)e(for)4080 734 y(pool)d(allocation)g(because)i(it)e(means)i
(that)e(we)h(can)h(more)f(accurately)g(allo-)4080 909
y(cate)f(data)f(structures)g(into)f(pools.)p 4221 1042
V 4221 3068 7 2026 v 4273 3023 a @beginspecial 35 @llx
35 @lly 418 @urx 241 @ury 2160 @rwi @setspecial
%%BeginDocument: Figures/ProcessLists_finished.ps
%!PS-Adobe-2.0
%%Creator: dot version 1.8.2 (Fri Mar 15 13:54:34 EST 2002)
%%For: (lattner) Christopher Lattner
%%Title: DataStructures
%%Pages: (atend)
%%BoundingBox: 35 35 418 241
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 418 241
%%PageOrientation: Portrait
gsave
35 35 383 206 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	Node0x401c88
gsave 10 dict begin
newpath 12 8 moveto
102 8 lineto
stroke
newpath 102 8 moveto
108 8 114 14 114 20 curveto
stroke
newpath 114 20 moveto
114 36 lineto
stroke
newpath 114 36 moveto
114 42 108 48 102 48 curveto
stroke
newpath 102 48 moveto
12 48 lineto
stroke
newpath 12 48 moveto
6 48 0 42 0 36 curveto
stroke
newpath 0 36 moveto
0 20 lineto
stroke
newpath 0 20 moveto
0 14 6 8 12 8 curveto
stroke
gsave 10 dict begin
57 33 moveto 100 -0.5 (new  %Patient) alignedtext
end grestore
newpath 0 28 moveto
114 28 lineto
stroke
gsave 10 dict begin
57 13 moveto 4 -0.5 ( ) alignedtext
end grestore
end grestore

%	Node0x401cd8
gsave 10 dict begin
newpath 196 8 moveto
286 8 lineto
stroke
newpath 286 8 moveto
292 8 298 14 298 20 curveto
stroke
newpath 298 20 moveto
298 36 lineto
stroke
newpath 298 36 moveto
298 42 292 48 286 48 curveto
stroke
newpath 286 48 moveto
196 48 lineto
stroke
newpath 196 48 moveto
190 48 184 42 184 36 curveto
stroke
newpath 184 36 moveto
184 20 lineto
stroke
newpath 184 20 moveto
184 14 190 8 196 8 curveto
stroke
gsave 10 dict begin
241 33 moveto 100 -0.5 (new  %Patient) alignedtext
end grestore
newpath 184 28 moveto
298 28 lineto
stroke
gsave 10 dict begin
241 13 moveto 4 -0.5 ( ) alignedtext
end grestore
end grestore

%	Node0x409008
gsave 10 dict begin
newpath 23 84 moveto
91 84 lineto
stroke
newpath 91 84 moveto
97 84 103 90 103 96 curveto
stroke
newpath 103 96 moveto
103 112 lineto
stroke
newpath 103 112 moveto
103 118 97 124 91 124 curveto
stroke
newpath 91 124 moveto
23 124 lineto
stroke
newpath 23 124 moveto
17 124 11 118 11 112 curveto
stroke
newpath 11 112 moveto
11 96 lineto
stroke
newpath 11 96 moveto
11 90 17 84 23 84 curveto
stroke
gsave 10 dict begin
57 109 moveto 78 -0.5 (new  %List) alignedtext
end grestore
newpath 11 104 moveto
103 104 lineto
stroke
gsave 10 dict begin
26 89 moveto 4 -0.5 ( ) alignedtext
end grestore
newpath 41 84 moveto
41 104 lineto
stroke
gsave 10 dict begin
56 89 moveto 4 -0.5 ( ) alignedtext
end grestore
newpath 72 84 moveto
72 104 lineto
stroke
gsave 10 dict begin
87 89 moveto 4 -0.5 ( ) alignedtext
end grestore
end grestore

%	Node0x409008 -> Node0x401c88
newpath 57 82 moveto
57 76 57 67 57 58 curveto
stroke
0.000 0.000 0.000 edgecolor
57 84 2 2 ellipse_path
fill
0.000 0.000 0.000 edgecolor
0.000 0.000 0.000 edgecolor
newpath 55 58 moveto
57 48 lineto
60 58 lineto
closepath
fill
0.000 0.000 0.000 edgecolor

%	Node0x409008 -> Node0x409008
newpath 42 83 moveto
63 71 100 53 121 75 curveto
139 93 139 114 121 133 curveto
111 143 97 138 85 130 curveto
stroke
0.000 0.000 0.000 edgecolor
41 84 2 2 ellipse_path
fill
0.000 0.000 0.000 edgecolor
0.000 0.000 0.000 edgecolor
newpath 84 132 moveto
77 124 lineto
87 128 lineto
closepath
fill
0.000 0.000 0.000 edgecolor

%	Node0x409008 -> Node0x409008
newpath 97 83 moveto
101 80 106 77 112 75 curveto
130 68 142 60 157 75 curveto
175 93 175 114 157 133 curveto
140 150 113 141 92 129 curveto
stroke
0.000 0.000 0.000 edgecolor
96 84 2 2 ellipse_path
fill
0.000 0.000 0.000 edgecolor
0.000 0.000 0.000 edgecolor
newpath 91 131 moveto
84 124 lineto
94 127 lineto
closepath
fill
0.000 0.000 0.000 edgecolor

%	Node0x4090f8
gsave 10 dict begin
newpath 207 84 moveto
275 84 lineto
stroke
newpath 275 84 moveto
281 84 287 90 287 96 curveto
stroke
newpath 287 96 moveto
287 112 lineto
stroke
newpath 287 112 moveto
287 118 281 124 275 124 curveto
stroke
newpath 275 124 moveto
207 124 lineto
stroke
newpath 207 124 moveto
201 124 195 118 195 112 curveto
stroke
newpath 195 112 moveto
195 96 lineto
stroke
newpath 195 96 moveto
195 90 201 84 207 84 curveto
stroke
gsave 10 dict begin
241 109 moveto 78 -0.5 (new  %List) alignedtext
end grestore
newpath 195 104 moveto
287 104 lineto
stroke
gsave 10 dict begin
210 89 moveto 4 -0.5 ( ) alignedtext
end grestore
newpath 225 84 moveto
225 104 lineto
stroke
gsave 10 dict begin
240 89 moveto 4 -0.5 ( ) alignedtext
end grestore
newpath 256 84 moveto
256 104 lineto
stroke
gsave 10 dict begin
271 89 moveto 4 -0.5 ( ) alignedtext
end grestore
end grestore

%	Node0x4090f8 -> Node0x401cd8
newpath 241 82 moveto
241 76 241 67 241 58 curveto
stroke
0.000 0.000 0.000 edgecolor
241 84 2 2 ellipse_path
fill
0.000 0.000 0.000 edgecolor
0.000 0.000 0.000 edgecolor
newpath 239 58 moveto
241 48 lineto
244 58 lineto
closepath
fill
0.000 0.000 0.000 edgecolor

%	Node0x4090f8 -> Node0x4090f8
newpath 226 83 moveto
247 70 283 53 305 75 curveto
323 93 323 114 305 133 curveto
295 143 281 138 269 130 curveto
stroke
0.000 0.000 0.000 edgecolor
225 84 2 2 ellipse_path
fill
0.000 0.000 0.000 edgecolor
0.000 0.000 0.000 edgecolor
newpath 268 132 moveto
261 124 lineto
271 128 lineto
closepath
fill
0.000 0.000 0.000 edgecolor

%	Node0x4090f8 -> Node0x4090f8
newpath 281 83 moveto
286 80 290 77 296 75 curveto
314 68 326 60 341 75 curveto
359 93 359 114 341 133 curveto
324 150 297 141 276 129 curveto
stroke
0.000 0.000 0.000 edgecolor
280 84 2 2 ellipse_path
fill
0.000 0.000 0.000 edgecolor
0.000 0.000 0.000 edgecolor
newpath 275 131 moveto
268 124 lineto
278 127 lineto
closepath
fill
0.000 0.000 0.000 edgecolor

%	Node0x403718Closed
gsave 10 dict begin
0.000 0.000 0.702 nodecolor
newpath 86 196 moveto
32 196 lineto
32 160 lineto
86 160 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
12.00 /Times-Roman set_font
59 180 moveto 43 -0.5 ( %List*) alignedtext
59 167 moveto 25 -0.5 (%L1) alignedtext
end grestore
end grestore

%	Node0x403718Closed -> Node0x409008
gsave 10 dict begin
0.000 0.000 0.702 edgecolor
newpath 59 159 moveto
59 151 58 142 58 134 curveto
stroke
0.000 0.000 0.702 edgecolor
59 160 2 2 ellipse_path
fill
0.000 0.000 0.702 edgecolor
0.000 0.000 0.702 edgecolor
newpath 56 134 moveto
58 124 lineto
61 134 lineto
closepath
fill
0.000 0.000 0.702 edgecolor
end grestore

%	Node0x403760Closed
gsave 10 dict begin
0.000 0.000 0.702 nodecolor
newpath 265 196 moveto
211 196 lineto
211 160 lineto
265 160 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
12.00 /Times-Roman set_font
238 180 moveto 43 -0.5 ( %List*) alignedtext
238 167 moveto 28 -0.5 (%L2) alignedtext
end grestore
end grestore

%	Node0x403760Closed -> Node0x4090f8
gsave 10 dict begin
0.000 0.000 0.702 edgecolor
newpath 239 159 moveto
239 151 240 142 240 134 curveto
stroke
0.000 0.000 0.702 edgecolor
239 160 2 2 ellipse_path
fill
0.000 0.000 0.702 edgecolor
0.000 0.000 0.702 edgecolor
newpath 238 134 moveto
240 124 lineto
243 134 lineto
closepath
fill
0.000 0.000 0.702 edgecolor
end grestore

%	Node0x403c60Closed
gsave 10 dict begin
0.000 0.000 0.702 nodecolor
newpath 183 196 moveto
109 196 lineto
109 160 lineto
183 160 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
12.00 /Times-Roman set_font
146 180 moveto 62 -0.5 ( %Patient*) alignedtext
146 167 moveto 46 -0.5 (%reg117) alignedtext
end grestore
end grestore

%	Node0x403c60Closed -> Node0x401c88
gsave 10 dict begin
0.000 0.000 0.702 edgecolor
newpath 142 159 moveto
137 139 127 108 112 84 curveto
106 74 97 64 89 55 curveto
stroke
0.000 0.000 0.702 edgecolor
142 160 2 2 ellipse_path
fill
0.000 0.000 0.702 edgecolor
0.000 0.000 0.702 edgecolor
newpath 87 57 moveto
82 48 lineto
91 53 lineto
closepath
fill
0.000 0.000 0.702 edgecolor
end grestore

%	Node0x403cf0Closed
gsave 10 dict begin
0.000 0.000 0.702 nodecolor
newpath 381 196 moveto
307 196 lineto
307 160 lineto
381 160 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
12.00 /Times-Roman set_font
344 180 moveto 62 -0.5 ( %Patient*) alignedtext
344 167 moveto 48 -0.5 (%reg120) alignedtext
end grestore
end grestore

%	Node0x403cf0Closed -> Node0x401cd8
gsave 10 dict begin
0.000 0.000 0.702 edgecolor
newpath 337 159 moveto
328 139 313 108 296 84 curveto
288 74 279 63 270 55 curveto
stroke
0.000 0.000 0.702 edgecolor
337 160 2 2 ellipse_path
fill
0.000 0.000 0.702 edgecolor
0.000 0.000 0.702 edgecolor
newpath 269 57 moveto
264 48 lineto
272 54 lineto
closepath
fill
0.000 0.000 0.702 edgecolor
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1
%%Trailer
%%Pages: 1
end
restore
%%EOF

%%EndDocument
 @endspecial 7918 3068 V 4221 3075 3703 7 v 4691 3364
a Fq(Figur)m(e)i(11:)46 b Fk(The)32 b(\002nished)g Fj(ProcessLists)e
Fk(graph)4230 3631 y Fp(The)44 b(third)e(important)h(property)f(is)i
(that)f(the)h(data)g(structure)f(graph)g(for)4080 3805
y(a)j(function)e(is)h(small,)j(only)c(including)f(nodes)i(that)g(are)h
(reachable)g(in)f(the)4080 3979 y(current)h(function.)72
b(F)n(or)45 b(e)n(xample,)k(assume)f(that)d(the)h Fr(useLists)e
Fp(func-)4080 4154 y(tion)36 b(is)h(an)g(empty)g(function,)f(which)h(w)
o(ould)e(resolv)n(e)i(to)f(the)h(graph)g(sho)l(wn)4080
4328 y(in)54 b(Figure)f(11.)97 b(In)54 b(this)f(case,)60
b(we)55 b(kno)l(w)e(that)h(the)g(lifetime)f(of)h(the)g(tw)o(o)4080
4502 y(lists)46 b(are)h(bounded)e(by)h(the)g(lifetime)f(of)h
Fr(ProcessLists)d Fp(function)h(it-)4080 4677 y(self,)f(because)g(the)n
(y)d(do)h(not)g(escape)i(from)e(the)g(function.)58 b(If)41
b(we)h(consider)4080 4851 y(another)c(function)f(\(say)h
Fr(main)p Fp(\))g(that)f(calls)i(the)f Fr(ProcessLists)d
Fp(func-)4080 5025 y(tion,)49 b(the)e(tw)o(o)f(lists)g(in)h(Figure)g
(10)f(will)g(not)h(be)g(reachable)h(in)f(the)g Fr(main)4080
5200 y Fp(graph)41 b(when)h(the)f(call)h(to)f Fr(ProcessLists)d
Fp(is)j(resolv)n(ed.)59 b(F)n(or)41 b(this)g(rea-)4080
5374 y(son,)49 b(the)d(nodes)g(are)h(eliminated,)h(re\003ecting)e(the)g
(f)o(act)g(that)f Fr(main)g Fp(is)h(not)4080 5548 y(e)n(xposed)37
b(to)g(the)g(internal)f(data)h(structures)f(used)h(by)g
Fr(ProcessLists)p Fp(.)4080 5987 y Fo(3.)199 b(A)-10
b(UT)l(OMA)-19 b(TIC)49 b(POOL)h(ALLOCA)-19 b(TION)4230
6202 y Fp(Man)n(y)32 b(other)g(researchers)h(ha)m(v)n(e)g(illustrated)d
(the)j(v)l(alue)f(of)h(pool)e(allocat-)4080 6377 y(ing)40
b(data)h(structures)f([10,)i(13,)g(26],)g(b)m(ut)e Fn(fully)g
(automatic)e Fp(transformation)4080 6551 y(is)h(a)g(challenging)f
(problem.)51 b(Here)39 b(we)h(describe)f(a)g(simple)g(algorithm)e(for)
4080 6725 y(automatic)31 b(pool)f(allocation)g(of)i(C)f(programs)g
(that)g(uses)h(the)f(data)g(structure)4080 6900 y(graph)37
b(to)f(ensure)i(safety)f(of)g(transformation.)4080 7227
y Fo(3.1)199 b(Runtime)50 b(support)4230 7443 y Fp(W)-12
b(e)46 b(designed)f(a)h(simple)f(pool)f(allocation)g(runtime)h(library)
f(with)g(four)4080 7617 y(e)n(xternal)65 b(functions)f(\()p
Fr(poolinit)p Fp(,)70 b Fr(pooldestroy)p Fp(,)g Fr(poolalloc)p
Fp(,)4080 7791 y Fr(poolfree)p Fp(\),)55 b(and)e(one)g(data)g(type)g
(\(the)f(pool)g(descriptor\).)93 b(W)-12 b(e)54 b(trans-)4080
7966 y(form)d(the)g(program)g(to)g(pass)h(the)f(pool)f(descriptors)g
(into)g(functions)g(that)4080 8140 y(must)h(allocate)g(or)g(free)h
(nodes)f(from)g(or)g(to)g(the)g(pool.)87 b(In)51 b(this)g(w)o(ay)-10
b(,)55 b(the)4080 8314 y(pool)36 b(descriptor)g(is)h(al)o(w)o(ays)g(a)m
(v)l(ailable)g(where)g(it)g(is)g(needed.)4230 8489 y(Our)k(pool)g
(allocator)h(assumes)h(that)f(a)g(memory)h(pool)e(consists)h(of)g(uni-)
4080 8663 y(formly)e(sized)h(objects,)h(b)m(ut)e(can)h(allocate)g
(multiple)e(consecuti)l(v)n(e)i(objects)4080 8837 y(if)f(needed)g
(\(for)f(arrays\).)54 b(When)40 b(pool)f(allocating)f(a)j(comple)n(x)e
(data)h(struc-)4080 9012 y(ture)51 b(\(for)g(e)n(xample,)56
b(the)c(main)f(data)h(structure)f(for)g(the)g Fr(power)g
Fp(bench-)4080 9186 y(mark,)38 b(sho)l(wn)e(in)h(Figure)f(12\(a\)\))g
(each)i(data)f(structure)f(node)g(in)g(the)h(graph)4080
9360 y(is)46 b(allocated)g(from)g(a)h(dif)l(ferent)e(pool)g(in)h
(memory)-10 b(.)74 b(This)46 b(simple)g(heuris-)4080
9535 y(tic)38 b(groups)e(memory)i(objects)g(together)e(of)i(the)f(same)
j(type,)d(which)h(w)o(orks)4080 9709 y(well)44 b(for)g(tree)h(nodes,)i
(link)o(ed)c(lists,)i(and)g(other)f(hea)m(vily)g(recursi)l(v)n(e)g
(struc-)4080 9883 y(tures.)119 b(In)61 b(the)g Fr(power)f
Fp(benchmark)i(e)n(xample,)68 b(there)61 b(are)h(four)f(mem-)4080
10058 y(ory)41 b(pools,)h(each)h(corresponding)c(to)i(a)h(le)l(v)n(el)f
(of)h(a)g(heterogeneous)f(\223tree\224)4080 10232 y(structure,)c(where)
g(each)h(le)l(v)n(el)f(is)g(a)h(link)o(ed)d(list)i(of)f(nodes.)4230
10406 y(In)60 b(addition)e(to)i(bookk)o(eeping)d(information)i(for)g
(the)h(pool)f(allocator)4080 10581 y(runtime,)69 b(the)63
b(pool)g(descriptors)f(can)i(also)f(be)g(augmented)h(to)e(include)4080
10755 y(pointers)51 b(to)h(the)g(other)f(pool)g(descriptors)h(in)f(the)
h(data)h(structure,)i(form-)p eop end
%%Page: 8 8
TeXDict begin 8 7 bop 114 2110 a @beginspecial 35 @llx
35 @lly 211 @urx 389 @ury 720 @rwi @setspecial
%%BeginDocument: Figures/power.ps
%!PS-Adobe-2.0
%%Creator: dot version 1.8.2 (Fri Mar 15 13:54:34 EST 2002)
%%For: (lattner) Christopher Lattner
%%Title: DataStructures
%%Pages: (atend)
%%BoundingBox: 35 35 211 389
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 211 389
%%PageOrientation: Portrait
gsave
35 35 176 354 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	Node0x4401e8
gsave 10 dict begin
newpath 19 232 moveto
89 232 lineto
stroke
newpath 89 232 moveto
95 232 101 238 101 244 curveto
stroke
newpath 101 244 moveto
101 260 lineto
stroke
newpath 101 260 moveto
101 266 95 272 89 272 curveto
stroke
newpath 89 272 moveto
19 272 lineto
stroke
newpath 19 272 moveto
13 272 7 266 7 260 curveto
stroke
newpath 7 260 moveto
7 244 lineto
stroke
newpath 7 244 moveto
7 238 13 232 19 232 curveto
stroke
gsave 10 dict begin
54 257 moveto 80 -0.5 (new  %root) alignedtext
end grestore
newpath 7 252 moveto
101 252 lineto
stroke
gsave 10 dict begin
54 237 moveto 4 -0.5 ( ) alignedtext
end grestore
end grestore

%	Node0x4425b0
gsave 10 dict begin
newpath 12 156 moveto
97 156 lineto
stroke
newpath 97 156 moveto
103 156 109 162 109 168 curveto
stroke
newpath 109 168 moveto
109 184 lineto
stroke
newpath 109 184 moveto
109 190 103 196 97 196 curveto
stroke
newpath 97 196 moveto
12 196 lineto
stroke
newpath 12 196 moveto
6 196 0 190 0 184 curveto
stroke
newpath 0 184 moveto
0 168 lineto
stroke
newpath 0 168 moveto
0 162 6 156 12 156 curveto
stroke
gsave 10 dict begin
54 181 moveto 95 -0.5 (new  %lateral) alignedtext
end grestore
newpath 0 176 moveto
109 176 lineto
stroke
gsave 10 dict begin
27 161 moveto 4 -0.5 ( ) alignedtext
end grestore
newpath 54 156 moveto
54 176 lineto
stroke
gsave 10 dict begin
81 161 moveto 4 -0.5 ( ) alignedtext
end grestore
end grestore

%	Node0x4401e8 -> Node0x4425b0
newpath 54 230 moveto
54 224 54 215 54 206 curveto
stroke
0.000 0.000 0.000 edgecolor
54 232 2 2 ellipse_path
fill
0.000 0.000 0.000 edgecolor
0.000 0.000 0.000 edgecolor
newpath 52 206 moveto
54 196 lineto
57 206 lineto
closepath
fill
0.000 0.000 0.000 edgecolor

%	Node0x4425b0 -> Node0x4425b0
newpath 44 155 moveto
66 143 104 125 126 147 curveto
144 165 144 186 126 205 curveto
114 217 96 210 81 200 curveto
stroke
0.000 0.000 0.000 edgecolor
43 156 2 2 ellipse_path
fill
0.000 0.000 0.000 edgecolor
0.000 0.000 0.000 edgecolor
newpath 82 204 moveto
76 196 lineto
85 200 lineto
closepath
fill
0.000 0.000 0.000 edgecolor

%	Node0x4427a8
gsave 10 dict begin
newpath 36 80 moveto
127 80 lineto
stroke
newpath 127 80 moveto
133 80 139 86 139 92 curveto
stroke
newpath 139 92 moveto
139 108 lineto
stroke
newpath 139 108 moveto
139 114 133 120 127 120 curveto
stroke
newpath 127 120 moveto
36 120 lineto
stroke
newpath 36 120 moveto
30 120 24 114 24 108 curveto
stroke
newpath 24 108 moveto
24 92 lineto
stroke
newpath 24 92 moveto
24 86 30 80 36 80 curveto
stroke
gsave 10 dict begin
81 105 moveto 101 -0.5 (new  %branch) alignedtext
end grestore
newpath 24 100 moveto
139 100 lineto
stroke
gsave 10 dict begin
52 85 moveto 4 -0.5 ( ) alignedtext
end grestore
newpath 81 80 moveto
81 100 lineto
stroke
gsave 10 dict begin
110 85 moveto 4 -0.5 ( ) alignedtext
end grestore
end grestore

%	Node0x4425b0 -> Node0x4427a8
newpath 81 154 moveto
81 148 81 139 81 130 curveto
stroke
0.000 0.000 0.000 edgecolor
81 156 2 2 ellipse_path
fill
0.000 0.000 0.000 edgecolor
0.000 0.000 0.000 edgecolor
newpath 79 130 moveto
81 120 lineto
84 130 lineto
closepath
fill
0.000 0.000 0.000 edgecolor

%	Node0x4427a8 -> Node0x4427a8
newpath 70 79 moveto
92 67 133 48 156 71 curveto
174 89 174 110 156 129 curveto
143 141 126 135 111 125 curveto
stroke
0.000 0.000 0.000 edgecolor
69 80 2 2 ellipse_path
fill
0.000 0.000 0.000 edgecolor
0.000 0.000 0.000 edgecolor
newpath 110 127 moveto
103 120 lineto
113 123 lineto
closepath
fill
0.000 0.000 0.000 edgecolor

%	Node0x4427f8
gsave 10 dict begin
newpath 76 8 moveto
145 8 lineto
stroke
newpath 145 8 moveto
151 8 157 14 157 20 curveto
stroke
newpath 157 20 moveto
157 32 lineto
stroke
newpath 157 32 moveto
157 38 151 44 145 44 curveto
stroke
newpath 145 44 moveto
76 44 lineto
stroke
newpath 76 44 moveto
70 44 64 38 64 32 curveto
stroke
newpath 64 32 moveto
64 19 lineto
stroke
newpath 64 19 moveto
64 14 70 8 76 8 curveto
stroke
gsave 10 dict begin
110 21 moveto 79 -0.5 (new  %leaf) alignedtext
end grestore
end grestore

%	Node0x4427a8 -> Node0x4427f8
newpath 110 79 moveto
110 72 110 63 110 54 curveto
stroke
0.000 0.000 0.000 edgecolor
110 80 2 2 ellipse_path
fill
0.000 0.000 0.000 edgecolor
0.000 0.000 0.000 edgecolor
newpath 108 54 moveto
110 44 lineto
113 54 lineto
closepath
fill
0.000 0.000 0.000 edgecolor

%	Node0x430190Closed
gsave 10 dict begin
0.000 0.000 0.702 nodecolor
newpath 84 344 moveto
24 344 lineto
24 308 lineto
84 308 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
12.00 /Times-Roman set_font
54 328 moveto 45 -0.5 ( %Root) alignedtext
54 315 moveto 48 -0.5 (%reg109) alignedtext
end grestore
end grestore

%	Node0x430190Closed -> Node0x4401e8
gsave 10 dict begin
0.000 0.000 0.702 edgecolor
newpath 54 307 moveto
54 299 54 290 54 282 curveto
stroke
0.000 0.000 0.702 edgecolor
54 308 2 2 ellipse_path
fill
0.000 0.000 0.702 edgecolor
0.000 0.000 0.702 edgecolor
newpath 52 282 moveto
54 272 lineto
57 282 lineto
closepath
fill
0.000 0.000 0.702 edgecolor
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1
%%Trailer
%%Pages: 1
end
restore
%%EOF

%%EndDocument
 @endspecial -4 2285 a Fp(\(a\))51 b(Data)37 b(structure)f(graph)2027
2110 y @beginspecial 35 @llx 35 @lly 188 @urx 317 @ury
720 @rwi @setspecial
%%BeginDocument: Figures/power_pools.ps
%!PS-Adobe-2.0
%%Creator: dot version 1.8.2 (Fri Mar 15 13:54:34 EST 2002)
%%For: (lattner) Christopher Lattner
%%Title: DataStructures
%%Pages: (atend)
%%BoundingBox: 35 35 188 317
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 188 317
%%PageOrientation: Portrait
gsave
35 35 153 282 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	root
gsave 10 dict begin
newpath 8 232 moveto
83 232 lineto
83 272 lineto
8 272 lineto
closepath
stroke
gsave 10 dict begin
45 257 moveto 61 -0.5 (root pool) alignedtext
end grestore
newpath 8 252 moveto
83 252 lineto
stroke
gsave 10 dict begin
45 237 moveto 4 -0.5 ( ) alignedtext
end grestore
end grestore

%	lateral
gsave 10 dict begin
newpath 0 156 moveto
90 156 lineto
90 196 lineto
0 196 lineto
closepath
stroke
gsave 10 dict begin
45 181 moveto 76 -0.5 (lateral pool) alignedtext
end grestore
newpath 0 176 moveto
90 176 lineto
stroke
gsave 10 dict begin
22 161 moveto 4 -0.5 ( ) alignedtext
end grestore
newpath 45 156 moveto
45 176 lineto
stroke
gsave 10 dict begin
67 161 moveto 4 -0.5 ( ) alignedtext
end grestore
end grestore

%	root -> lateral
newpath 45 223 moveto
45 218 45 212 45 206 curveto
stroke
0.000 0.000 0.000 edgecolor
newpath 48 222 moveto
45 232 lineto
43 222 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
0.000 0.000 0.000 edgecolor
newpath 43 206 moveto
45 196 lineto
48 206 lineto
closepath
fill
0.000 0.000 0.000 edgecolor

%	lateral -> lateral
newpath 44 152 moveto
63 141 91 130 108 147 curveto
126 165 126 186 108 205 curveto
98 214 85 210 73 202 curveto
stroke
0.000 0.000 0.000 edgecolor
newpath 47 153 moveto
37 156 lineto
44 149 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
0.000 0.000 0.000 edgecolor
newpath 72 204 moveto
65 196 lineto
75 200 lineto
closepath
fill
0.000 0.000 0.000 edgecolor

%	branch
gsave 10 dict begin
newpath 19 80 moveto
115 80 lineto
115 120 lineto
19 120 lineto
closepath
stroke
gsave 10 dict begin
67 105 moveto 82 -0.5 (branch pool) alignedtext
end grestore
newpath 19 100 moveto
115 100 lineto
stroke
gsave 10 dict begin
43 85 moveto 4 -0.5 ( ) alignedtext
end grestore
newpath 67 80 moveto
67 100 lineto
stroke
gsave 10 dict begin
91 85 moveto 4 -0.5 ( ) alignedtext
end grestore
end grestore

%	lateral -> branch
newpath 67 147 moveto
67 142 67 136 67 130 curveto
stroke
0.000 0.000 0.000 edgecolor
newpath 70 146 moveto
67 156 lineto
65 146 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
0.000 0.000 0.000 edgecolor
newpath 65 130 moveto
67 120 lineto
70 130 lineto
closepath
fill
0.000 0.000 0.000 edgecolor

%	branch -> branch
newpath 65 76 moveto
86 65 115 53 133 71 curveto
151 89 151 110 133 129 curveto
123 139 109 134 96 126 curveto
stroke
0.000 0.000 0.000 edgecolor
newpath 68 77 moveto
58 80 lineto
65 73 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
0.000 0.000 0.000 edgecolor
newpath 95 128 moveto
88 120 lineto
98 124 lineto
closepath
fill
0.000 0.000 0.000 edgecolor

%	leaf
gsave 10 dict begin
newpath 54 8 moveto
128 8 lineto
128 44 lineto
54 44 lineto
closepath
stroke
gsave 10 dict begin
91 21 moveto 60 -0.5 (leaf pool) alignedtext
end grestore
end grestore

%	branch -> leaf
newpath 91 71 moveto
91 65 91 60 91 54 curveto
stroke
0.000 0.000 0.000 edgecolor
newpath 94 70 moveto
91 80 lineto
89 70 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
0.000 0.000 0.000 edgecolor
newpath 89 54 moveto
91 44 lineto
94 54 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
endpage
grestore
%%PageTrailer
%%EndPage: 1
%%Trailer
%%Pages: 1
end
restore
%%EOF

%%EndDocument
 @endspecial 1871 2285 a(\(b\))50 b(Pool)36 b(descriptor)g(graph)110
2598 y Fq(Figur)m(e)i(12:)45 b Fk(Main)34 b(data)g(structur)n(e)f(f)m
(or)g Fj(power)f Fk(benchmark)-303 3107 y Fp(ing)42 b(a)i(graph)f
(isomorphic)f(to)h(the)g(data)g(structure)g(graph)g(\(b)m(ut)f
(accessable)-303 3282 y(at)35 b(runtime,)g(and)g(including)e(back)o
(edges)i(as)g(well)g(as)h(forw)o(ard)d(edges\).)46 b(F)n(or)-303
3456 y(the)33 b Fr(power)g Fp(benchmark,)i(this)e(graph)g(is)g(sho)l
(wn)h(in)f(Figure)g(12\(b\).)45 b(By)33 b(us-)-303 3630
y(ing)39 b(this)g(graph,)i(the)f(runtime)g(can)h(locate)f(all)g(of)g
(the)g(memory)g(blocks)g(al-)-303 3805 y(located)35 b(to)h(a)g(data)g
(structure)f(by)g(tra)m(v)n(ersing)g(the)g(pool)g(descriptors)g(for)g
(the)-303 3979 y(data)54 b(structure,)k(inspecting)52
b(the)i(\223)p Fr(isAllocated)p Fp(\224)d(bit)i(for)h(each)h(cell)-303
4153 y(that)49 b(is)h(allocatable)g(from)g(the)g(pool.)84
b(This)50 b(information)e(is)i(v)n(ery)f(useful)-303
4328 y(for)42 b(a)i(v)l(ariety)f(of)g(transformations,)g(for)g(e)n
(xample)h(the)f(pointer)f(compres-)-303 4502 y(sion)36
b(algorithm)g(described)h(in)f(Section)h(5.1.)-303 4823
y Fo(3.2)198 b(Identifying)50 b(candidate)g(data)f(structur)l(es)-154
5039 y Fp(In)60 b(order)g(to)f(pool)g(allocate)h(a)h(data)f(structure,)
65 b(we)c(must)f(detect)g(the)-303 5213 y(bounds)41 b(on)i(the)g
(lifetime)f(of)g(the)h(data)g(structure)f(\(to)g(allocate)h(and)g
(delete)-303 5388 y(the)57 b(pools)f(themselv)n(es\),)62
b(and)c(determine)f(whether)g(it)f(is)h Fn(safe)h Fp(to)e(pool-)-303
5562 y(allocate)34 b(the)g(data)h(structure.)45 b(W)-12
b(e)35 b(use)g(the)f(data)h(structure)e(analysis)h(graph)-303
5736 y(for)i(both)g(purposes.)-154 5911 y(Using)44 b(the)g(data)h
(structure)e(graph,)j(we)f(detect)g(data)f(structures)g(whose)-303
6085 y(lifetimes)g(are)i(bound)e(by)h(a)h(function)d(lifetime,)k(allo)l
(wing)d(us)h(to)g(allocate)-303 6259 y(the)37 b(pool)g(on)h(entry)f(to)
h(the)g(function,)e(and)i(deallocate)g(it)g(on)f(e)n(xit)g(from)h(the)
-303 6434 y(function.)82 b(W)-12 b(e)50 b(identify)e(these)h
(candidates)h(by)f(scanning)g(the)g(functions)-303 6608
y(in)54 b(the)h(program)g(\(because)h(each)h(function')-8
b(s)53 b(graph)h(only)h(contains)f(the)-303 6782 y(data)37
b(structures)g(that)f(are)i(acessable)h(by)e(that)f(function\),)g
(inspecting)g(each)-303 6957 y(functions)f(interprocedural)g(data)j
(structure)e(graph)h(as)h(we)f(go.)-154 7131 y(The)j(lifetime)e(of)g(a)
i(data)f(structure)f(is)g(contained)h(the)f(current)h(function)-303
7305 y(if)45 b(the)h(data)h(structure')-8 b(s)45 b(subgraph)g(w)o(ould)
f(be)j(unreachable)f(without)e(the)-303 7480 y(edges)53
b(due)g(to)g(the)g(scalar)h(pointer)d(map)j(\(i.e.,)k(no)53
b(globals)f(point)f(to)i(the)-303 7654 y(structure,)k(and)e(it)e(is)h
(not)f(returned)g(from)h(the)g(current)g(function\).)95
b(This)-303 7828 y(escape)53 b(analysis)e(\(which)g(is)g(similar)g(to)g
(the)g(points-to)e(escape)k(analysis)-303 8003 y(of)g([29]\))f(is)i(a)g
(conserv)l(ati)l(v)n(e,)k(b)m(ut)53 b(ef)l(fecti)l(v)n(e,)58
b(heuristic)53 b(for)g(the)g(appoxi-)-303 8177 y(mation)47
b(of)h(data)g(structure)g(lifetime.)78 b(W)-12 b(e)49
b(refer)g(to)e(the)h(function)f(whose)-303 8351 y(lifetime)32
b(bounds)g(the)h(lifetime)f(of)h(the)g(data)g(structure)f(as)i(the)f
(\223root\224)f(func-)-303 8526 y(tion,)41 b(because)i(it)e(is)g(the)h
(root)e(of)i(a)g(subtree)f(of)g(the)h(call)f(graph)g(that)g(needs)-303
8700 y(to)36 b(be)i(modi\002ed)e(to)h(handle)g(pool)f(allocation.)-303
8949 y Fq(P)m(oolAllocatePr)m(ogram)p Fp(\(program)f
Fi(P)21 b(r)t(og)5 b Fp(\))-154 9123 y Fs(8)38 b Fp(function)d
Fi(F)21 b(n)38 b Fs(2)f Fi(P)21 b(r)t(og)-4 9298 y Fs(8)37
b Fp(disjointdatastructure)d Fi(D)t(S)45 b Fs(2)38 b
Fp(DSGraph\()p Fi(F)21 b(n)p Fp(\))145 9472 y(if)37 b(CallNodes\()p
Fi(D)t(S)8 b Fp(\))1275 9360 y Ff(S)1440 9472 y Fp(CastNodes\()p
Fi(D)t(S)g Fp(\))37 b(=)g Fs(;)g Fp(then)294 9646 y(if)g
Fs(:)p Fp(escapes\()p Fi(D)t(S)8 b Fp(\))39 b(then)444
9821 y(PoolAllocate\()p Fi(F)21 b(n)p Fp(,)36 b Fi(D)t(S)8
b Fp(\))233 10140 y Fq(Figur)m(e)38 b(13:)46 b(Candidate)36
b(identi\002cation)g(algorithm)-154 10406 y Fp(It)42
b(is)h(safe)h(to)e(con)-6 b(v)n(ert)42 b(a)h(data)g(structure)f(to)g
(use)h(pool)f(allocation)f(when)-303 10581 y(we)36 b(can)g(pro)n(v)n(e)
f(that)g(we)i(kno)l(w)e(all)g(of)h(the)g(allocation)e(and)i(deletion)e
(points)-303 10755 y(for)45 b(nodes)i(in)e(the)i(data)f(structure,)i
(and)f(that)e(the)i(program)e(does)i(not)e(use)4080 -137
y(the)50 b(data)f(structure)g(in)g(a)h(non-typesafe)f(w)o(ay)-10
b(.)84 b(T)-12 b(o)50 b(ensure)f(that)g(we)h(ha)m(v)n(e)4080
37 y(analyzed)41 b(all)g(of)f(the)h(rele)l(v)l(ant)g(portions)e(of)h
(the)h(program,)h(and)f(that)f(none)4080 211 y(of)j(the)g(accesses)j
(to)d(the)g(data)h(structure)e(contain)g(unsafe)i(operations,)g(we)4080
386 y(do)33 b(a)h(simple)f(tra)m(v)n(ersal)g(of)f(the)h(graph)g
(looking)e(for)i(either)g Fr(call)f Fp(or)h Fr(cast)4080
560 y Fp(nodes.)87 b(If)50 b(either)g(is)g(found,)k(a)d(portion)d(of)i
(the)h(program)f(is)g(outside)g(the)4080 734 y(scope)56
b(of)g(our)f(analysis)g(or)h(an)g(unsafe)f(operation)g(has)h(been)g
(found,)j(so)4080 909 y(pool)49 b(allocation)f(cannot)h(be)h
(performed.)83 b(This)49 b(algorithm)f(is)i(sho)l(wn)f(in)4080
1083 y(Figure)37 b(13.)4080 1398 y Fo(3.3)199 b(T)-15
b(ransf)-5 b(orming)49 b(function)h(bodies)4230 1613
y Fp(F)n(or)34 b(a)i(data)f(structure)f(identi\002ed)g(to)h(be)g(pool)f
(allocated,)i(the)f(root)f(func-)4080 1788 y(tion)39
b(must)i(be)f(modi\002ed)g(to)g(allocate)h(pool)e(descriptors)g
(representing)h(the)4080 1962 y(v)l(arious)47 b(nodes)g(in)f(the)h
(subgraph.)76 b(W)-12 b(e)48 b(insert)e(code)h(to)g(stack-allocate)g(a)
4080 2136 y(pool)53 b(descriptor)-6 b(,)58 b(code)d(to)f(initialize)f
(the)h(pool)f(descriptor)g(on)h(entry)g(to)4080 2311
y(the)37 b(function,)e(and)i(code)f(to)h(destro)o(y)e(the)h(pool)g
(descriptor)f(\(and)h(all)h(book-)4080 2485 y(k)o(eeping)45
b(information)g(associated)h(with)g(the)g(memory)h(pool\))e(at)h(the)g
(e)n(xit)4080 2660 y(nodes)37 b(of)g(the)g(function.)4230
2834 y(Once)52 b(the)g(pools)f(are)i(created,)k(the)51
b(body)h(of)f(the)h(root)f(function,)j(and)4080 3008
y(functions)39 b(it)g(calls)h(\(that)f(use)i(the)f(data)g(structure\),)
g(must)g(be)g(transformed)4080 3183 y(to)f(use)g Fr(poolalloc)e
Fp(and)i Fr(poolfree)d Fp(calls)k(instead)e(of)h Fr(malloc)e
Fp(and)4080 3357 y Fr(free)46 b Fp(instructions.)72 b(T)-12
b(o)47 b(do)f(this)g(the)h(pool)e(descriptor)g(must)i(be)g(passed)4080
3531 y(into)64 b(called)i(functions)d(so)j(that)e(the)n(y)h(are)h(a)m
(v)l(ailable)f(for)g(the)g(e)l(v)n(entual)4080 3706 y
Fr(poolalloc)56 b Fp(and)i Fr(poolfree)d Fp(calls.)110
b(The)59 b(algorithm)d(is)i(sho)l(wn)g(in)4080 3880 y(Figure)37
b(14.)4080 4129 y Fq(P)m(oolAllocate)p Fp(\(function)d
Fi(R)q(ootF)21 b(n)p Fp(,)39 b(datastructure)d Fi(D)t(S)8
b Fp(\))4230 4303 y Fi(W)21 b(or)t(k)t(l)r(ist)39 b Fp(=)e
Fs(f)p Fi(R)q(ootF)21 b(n)p Fs(g)4230 4478 y(8)37 b Fp(function)f
Fi(F)21 b(n)37 b Fs(2)h Fi(W)21 b(or)t(k)t(l)r(ist)4379
4652 y Fs(8)38 b Fp(instruction)c Fi(I)50 b Fs(2)37 b
Fp(Instructions\()p Fi(F)21 b(n)p Fp(\))4529 4826 y(if)36
b(UsesDataStructure\()p Fi(I)12 b Fp(,)37 b Fi(D)t(S)8
b Fp(\))37 b(then)4678 5001 y(if)g(IsMallocOrFree\()p
Fi(I)12 b Fp(\))36 b(then)4827 5175 y(Con)-6 b(v)n(ertT)-12
b(oPoolFunction\()p Fi(I)12 b Fp(,)34 b Fi(D)t(S)8 b
Fp(\))4678 5349 y(elseif)37 b(IsCall\()p Fi(I)12 b Fp(\))36
b(then)4827 5524 y(AddPoolAr)m(guments\()p Fi(I)12 b
Fp(,)36 b Fi(D)t(S)8 b Fp(\))4827 5698 y Fi(W)21 b(or)t(k)t(l)r(ist)39
b Fp(=)f Fi(W)21 b(or)t(k)t(l)r(ist)6277 5586 y Ff(S)6442
5698 y Fp(CalledFunction\()p Fi(I)12 b Fp(\))4598 6191
y Fq(Figur)m(e)38 b(14:)45 b(Function)38 b(transf)l(ormation)f
(algorithm)4230 6458 y Fp(The)c(transformation)f(loops)g(o)n(v)n(er)h
(a)h(w)o(orklist)c(of)j(functions)f(to)h(process,)4080
6632 y(transforming)i(each)i(function)e(until)g(the)h(w)o(orklist)e(is)
i(empty)-10 b(.)47 b(Initially)34 b(the)4080 6807 y(w)o(orklist)28
b(is)i(seeded)h(with)e(the)h(root)f(function,)h(and)h(is)f(e)n(xpanded)
f(whene)l(v)n(er)4080 6981 y(a)43 b(call)f(to)g(an)h(untransformed)e
(function)f(is)i(encountered.)62 b(The)43 b(body)e(of)h(a)4080
7155 y(function)36 b(is)h(transformed)f(according)h(to)f(the)h(follo)l
(wing)e(rules:)4302 7493 y Fs(\017)75 b Fr(malloc)29
b Fp(and)i Fr(free)f Fp(operations)g(referring)g(to)g(the)h(pool)f
(allocated)4454 7668 y(data)37 b(structure)e(are)i(changed)g(into)f
(calls)g(to)g(the)h Fr(poolalloc)c Fp(and)4454 7842 y
Fr(poolfree)h Fp(library)i(functions.)4302 8151 y Fs(\017)75
b Fp(Function)34 b(calls)h(that)g(tak)o(e)g(a)h(pointer)e(into)h(the)g
(data)h(structure)e(as)i(an)4454 8325 y(ar)m(gument,)h(or)f(return)g(a)
h(pointer)f(that)g(is)g(part)h(of)f(the)g(data)h(structure)4454
8499 y(are)j(modi\002ed)f(to)h(pass)g(the)f(pool)g(descriptor)g(of)g
(the)g(data)h(structure)4454 8674 y(into)e(the)i(called)f(function.)52
b(If)40 b(the)f(function)f(has)i(not)f(already)g(been)4454
8848 y(processed,)f(it)e(is)h(put)g(on)f(the)h(transformation)f(w)o
(orklist.)4230 9186 y(The)66 b(transformed)e Fr(ProcessLists)e
Fp(function)i(\(Figure)g(15\))h(allo-)4080 9360 y(cates)51
b(four)e(memory)h(pools,)i(one)e(for)f(each)i(data)f(structure)f(node)g
(in)h(the)4080 9535 y(tw)o(o)42 b(disjoint)e(data)j(structures)f(in)g
(it.)63 b(The)43 b Fr(addList)d Fp(function)h(is)i(trans-)4080
9709 y(formed)37 b(similarly)-10 b(.)4230 9883 y(One)50
b(problem)g(with)f(modifying)g(functions)g(in)h(this)f(w)o(ay)i(is)f
(that)g(it)g(is)4080 10058 y(possible)35 b(for)h(it)f(to)h(cause)h(e)n
(xponential)d(code)i(gro)l(wth,)g(because)h(functions)4080
10232 y(must)42 b(be)g(cloned)f(before)h(the)n(y)f(are)i(transformed.)
59 b(F)n(or)42 b(e)n(xample,)h(if)f(there)4080 10406
y(is)35 b(one)f(client)g(of)h Fr(addList)d Fp(that)i(pool)g(allocates)h
(the)f(link)o(ed)f(list,)i(b)m(ut)e(an-)4080 10581 y(other)40
b(client)f(that)g(cannot,)i(tw)o(o)e(copies)h(of)g(the)g(code)g(w)o
(ould)f(be)h(required.)4080 10755 y(In)29 b(practice,)i(our)d
(implementation)f(chooses)i(to)f(only)g(pool-allocate)f(a)i(data)p
eop end
%%Page: 9 9
TeXDict begin 9 8 bop 597 -297 6531 7 v 594 52 7 349
v 687 -175 a Fq(Benchmark)38 b(Name)p 1931 52 V 1961
52 V 210 w(LOC)p 2464 52 V 179 w(Primary)g(data)e(structur)m(e)p
4126 52 V 238 w(Analysis)g(T)m(ime)4420 0 y(\(millisec.\))p
5326 52 V 5432 -175 a(Graph)i(size)5487 0 y(f)l(or)g
Fr(main)p 6225 52 V 6408 -175 a Fq(Primary)6448 0 y(DS)f(size)p
7124 52 V 597 59 6531 7 v 594 233 7 175 v 687 181 a Fr(bisort)p
1931 233 V 1961 233 V 926 w Fp(348)p 2464 233 V 179 w(binary)f(tree)p
4126 233 V 1778 w(47.3)p 5326 233 V 464 w(21)p 6225 233
V 787 w(1)p 7124 233 V 594 407 V 687 355 a Fr(em3d)p
1931 407 V 1961 407 V 1106 w Fp(683)p 2464 407 V 179
w(lists,)h(arrays)p 4126 407 V 1665 w(221.4)p 5326 407
V 464 w(59)p 6225 407 V 787 w(5)p 7124 407 V 594 582
V 687 529 a Fr(perimeter)p 1931 582 V 1961 582 V 656
w Fp(484)p 2464 582 V 179 w(quad)g(tree)p 4126 582 V
1794 w(177.0)p 5326 582 V 464 w(16)p 6225 582 V 787 w(1)p
7124 582 V 594 756 V 687 704 a Fr(power)p 1931 756 V
1961 756 V 1016 w Fp(615)p 2464 756 V 179 w(hierarch)o(y)g(of)g(lists)p
4126 756 V 1416 w(59.2)p 5326 756 V 464 w(21)p 6225 756
V 787 w(4)p 7124 756 V 594 930 V 687 878 a Fr(treeadd)p
1931 930 V 1961 930 V 836 w Fp(245)p 2464 930 V 179 w(binary)f(tree)p
4126 930 V 1778 w(13.5)p 5326 930 V 464 w(19)p 6225 930
V 787 w(1)p 7124 930 V 594 1105 V 687 1052 a Fr(tsp)p
1931 1105 V 1961 1105 V 1196 w Fp(578)p 2464 1105 V 179
w(2-d)h(tree)p 4126 1105 V 1960 w(84.0)p 5326 1105 V
464 w(29)p 6225 1105 V 787 w(1)p 7124 1105 V 594 1279
V 687 1227 a Fr(matrix)p 1931 1279 V 1961 1279 V 1001
w Fp(66)p 2464 1279 V 179 w(2-d)g(matrices)p 4126 1279
V 1678 w(12.2)p 5326 1279 V 464 w(15)p 6225 1279 V 787
w(6)p 7124 1279 V 597 1286 6531 7 v 2100 1397 a Fq(T)-14
b(able)37 b(1:)45 b(Pr)m(eliminary)38 b(Results)f(f)l(or)h(the)f(Olden)
h(Benchmarks)-144 1814 y Fj(void)79 b(ProcessLists\(unsigned)73
b(N\))79 b({)15 1964 y(PoolDescriptor)d(L1PD,)i(L2PD,)g(P1PD,)h(P2PD;)
15 2113 y(List)g(*L1,)f(*L2;)238 b(unsigned)78 b(i;)15
2263 y(poolinit\(&L1PD,)e(sizeof\(List\)\);)15 2412 y(poolinit\(&L2PD,)
g(sizeof\(List\)\);)15 2561 y(poolinit\(&P1PD,)g(sizeof\(Patient\)\);)
15 2711 y(poolinit\(&P2PD,)g(sizeof\(Patient\)\);)15
3010 y(L1)k(=)f(\(List*\)poolalloc\(&L1PD,)73 b(1\);)15
3159 y(L2)80 b(=)f(\(List*\)poolalloc\(&L2PD,)73 b(1\);)15
3458 y(/*)80 b(populate)d(lists)h(*/)15 3608 y(for)h(\(i)g(=)h(0;)f(i)g
(!=)g(N;)g(++i\))g({)175 3757 y(addList_pa\(L1,)c(&L1PD,)j
(poolalloc\(&P1PD,)d(1\)\);)175 3906 y(addList_pa\(L2,)g(&L2PD,)j
(poolalloc\(&P2PD,)d(1\)\);)15 4056 y(})15 4205 y(useLists_pa\(L1,)h
(&L1PD,)i(L2,)g(&L2PD\);)15 4355 y(pooldestroy\(&L1PD\);)c
(pooldestroy\(&L2PD\);)15 4504 y(pooldestroy\(&P1PD\);)g
(pooldestroy\(&P2PD\);)-144 4654 y(})-17 4997 y Fq(Figur)m(e)38
b(15:)45 b(Sour)m(ce)39 b(f)l(or)f(pool-allocated)c Fr(ProcessLists)
-303 5531 y Fp(structure)j(if)g(all)h(the)f(functions)g(that)g(refer)h
(to)g(the)f(data)h(structure)f(are)i(only)-303 5705 y(called)f(with)e
(pool)h(allocated)h(data)g(structures.)48 b(Note)37 b(that)h(only)e
(functions)-303 5880 y(that)55 b(allocate)h(or)f(free)i(nodes)e(\(or)h
(call)g(functions)e(that)h(do\))h(in)f(the)h(data)-303
6054 y(structure)36 b(need)h(to)g(be)g(modi\002ed)g(by)g(this)f
(algorithm.)-303 6529 y Fo(4.)198 b(PRELIMIN)l(AR)-7
b(Y)48 b(RESUL)-18 b(TS)-154 6745 y Fp(W)-12 b(e)46 b(ha)m(v)n(e)f
(fully)f(implemented)g(both)g(the)h(disjoint)e(logical)h(data)h(struc-)
-303 6920 y(ture)53 b(analysis)h(and)f(the)h(automatic)f(pool)g
(allocation)g(transformation)e(in)-303 7094 y(the)42
b(LL)-15 b(VM)44 b(system.)65 b(It)42 b(performs)h(fully)e(automatic)i
(pool)f(allocation)f(for)-303 7268 y(data)32 b(structure)f(graphs,)i
(including)c(re)l(writing)h(structure)h(\002elds)h(and)g(scalar)-303
7443 y(v)l(ariables,)j(pool)f(allocation,)g(and)h(deallocation.)44
b(It)34 b(also)h(supports)e(alloca-)-303 7617 y(tion)c(of)i(a)g
(structure)f(with)f(heterogeneous)h(nodes)h(\(using)f(multiple)f
(pools\).)-154 7791 y(W)-12 b(e)56 b(tested)f(these)g(transformations)e
(on)i(se)l(v)n(eral)h(programs)e(from)h(the)-303 7966
y(Olden)g(benchmark)h(suite,)k(a)c(collection)f(of)g(programs)h(that)f
(ha)m(v)n(e)h(been)-303 8140 y(used)36 b(for)f(se)l(v)n(eral)h(pointer)
f(prefetching)f(studies)i(\(e.g.,)h([19]\).)45 b(W)-12
b(e)36 b(present)-303 8314 y(preliminary)48 b(results)g(for)h(these)h
(programs)f(here.)84 b(Unfortunately)-10 b(,)51 b(these)-303
8489 y(codes)41 b(are)h(relati)l(v)n(ely)e(small)h(and)g(each)h(of)f
(them)h(only)e(allocates)h(a)h(single)-303 8663 y(lar)m(ge,)37
b(recursi)l(v)n(e)f(data)g(structure.)46 b(Ne)l(v)n(ertheless,)37
b(the)f(benchmarks)g(co)n(v)n(er)-303 8837 y(the)75 b(full)f(spectrum)h
(of)g(dif)l(\002cult)f(issues)h(including)e(pointer)m(-intensi)l(v)n(e)
-303 9012 y(link)o(ed)48 b(structures,)k(dynamic)d(stack)h(allocation,)
i(pointers)c(to)h(functions,)-303 9186 y(global)d(v)l(ariable)i
(references,)k(and)c(hea)m(vy)g(use)g(of)g(recursion.)78
b(In)48 b(the)f(fu-)-303 9360 y(ture,)41 b(we)g(aim)f(to)g(test)g
(these)h(techniques)f(on)g(other)f(benchmarks,)j(includ-)-303
9535 y(ing)36 b(the)h(SPEC2000)f(benchmarks.)-154 9709
y(T)-12 b(able)49 b(1)f(sho)l(ws)h(the)f(results)f(for)h(six)g(of)g
(the)g(Olden)g(programs,)j(and)d(a)-303 9883 y(simple)g(matrix)g
(multiply)e(routine)i(function)e(operating)i(on)g(three)g(matri-)-303
10058 y(ces.)104 b(The)56 b(table)g(sho)l(ws)g(the)g(compilation)e
(time)i(for)f(each)i(benchmark,)-303 10232 y(including)46
b(the)i(time)g(for)g(data)g(structure)g(analysis)f(and)i(pool)e
(allocation,)-303 10406 y(b)m(ut)i(these)i(times)f(are)h(nearly)f(ne)n
(gligible)e(because)k(the)e(benchmarks)g(are)-303 10581
y(quite)40 b(small.)59 b(F)n(or)41 b(all)g(the)g(programs,)i(the)e
(compiler)g(is)g(correctly)g(able)g(to)-303 10755 y(identify)j(the)j
(logical)f(data)h(structure)e(used)i(at)g(the)f(top)g(le)l(v)n(el)h(of)
f(the)h(pro-)4080 1892 y(gram.)65 b(In)43 b(all)f(cases,)47
b(ho)l(we)l(v)n(er)-6 b(,)45 b(lo)l(wer)m(-le)l(v)n(el)d(functions)g
(in)g(the)h(tree)g(allo-)4080 2067 y(cate)35 b(and)g(process)f
(disjoint)e(subsets)i(of)g(these)h(logical)e(structures,)h(and)h(the)
4080 2241 y(compiler)49 b(correctly)f(pro)n(v)n(es)h(those)g(subsets)g
(are)h(disjoint)d(\(not)h(re\003ected)4080 2415 y(in)58
b(the)g(table\).)110 b(The)58 b(interprocedural)f(graphs)h(computed)g
(for)f(the)i(top-)4080 2590 y(le)l(v)n(el)44 b(function)e(\()p
Fr(main)p Fp(\))g(are)i(relati)l(v)n(ely)f(lar)m(ge)h(b)m(ut)f(most)h
(of)f(those)h(nodes)4080 2764 y(are)52 b(due)g(to)f(calls)h(to)f(the)g
(e)n(xternal)g(function)f Fr(printf)p Fp(,)k(and)d(the)h(global)4080
2938 y(format)43 b(strings)f(passed)h(to)g(those)f(calls.)65
b(The)43 b(primary)g(data)g(structure)f(in)4080 3113
y(each)37 b(benchmark)f(had)g(4)g(nodes)f(for)h Fr(power)p
Fp(,)f(6)g(nodes)h(for)f Fr(matrix)f Fp(and)4080 3287
y(only)55 b(1)g(node)h(for)f(each)i(of)e(the)h(other)f(benchmarks.)102
b(The)56 b(structure)f(in)4080 3461 y(the)43 b Fr(power)e
Fp(benchmark)i(has)g(4)g(heterogeneous)f(node)g(types)h(\(as)g(sho)l
(wn)4080 3636 y(in)g(Figure)g(4\),)i(and)e(the)g(compiler)g(correctly)f
(identi\002es)h(the)g(linkages)f(be-)4080 3810 y(tween)52
b(these)h(structures)e(and)i(allocates)f(these)h(to)e(4)h(separate)h
(pools,)j(as)4080 3984 y(noted)37 b(pre)l(viously)-10
b(.)4230 4159 y(In)45 b(order)f(to)h(further)f(demonstrate)h(the)g
(capabilities)g(of)g(the)g(compiler)-6 b(,)4080 4333
y(we)38 b(modi\002ed)f(one)g(of)h(the)f(benchmarks)h(as)g(follo)l(ws.)
46 b(A)37 b(potentially)e(dif)l(\002-)4080 4507 y(cult)e(usage)h
(pattern)f(is)g(that)g(programs)g(may)h(allocate)g(dif)l(ferent)e
(structures)4080 4682 y(and)48 b(then)f(repeatedly)g(e)n(xtract)g
(nodes)g(from)g(one)h(structure)e(and)h(insert)g(it)4080
4856 y(into)f(another)-8 b(.)77 b(Ne)l(v)n(ertheless,)50
b(such)e(structures)f(should)f(still)g(be)h(reason-)4080
5031 y(able)35 b(candidates)f(for)g(separate)h(pool)f(allocation.)44
b(T)-12 b(o)35 b(test)f(the)g(compiler)g(in)4080 5205
y(such)42 b(a)h(case,)i(we)d(wrote)g(a)g(simple)g(code)g(that)g
(creates)h(tw)o(o)e(trees,)j(initial-)4080 5379 y(izes)33
b(v)l(alues)f(in)g(the)g(nodes)g(of)f(both)g(trees)i(in)e(one)h(loop,)h
(and)f(then)f(tra)m(v)n(erses)4080 5554 y(the)50 b(tw)o(o)f(trees)i(mo)
n(ving)e(nodes)h(from)g(one)g(to)g(the)g(other)-8 b(.)84
b(The)51 b(compiler)4080 5728 y(ag)o(ain)32 b(w)o(as)g(correctly)g
(able)g(to)f(pro)n(v)n(e)g(that)g(the)h(tw)o(o)f(instances)h(are)g
(disjoint,)4080 5902 y(and)37 b(allocate)g(the)g(tw)o(o)f(trees)i(to)f
(separate)g(pools.)4080 6337 y Fo(5.)199 b(APPLICA)-19
b(TIONS)47 b(&)j(FUTURE)f(W)n(ORK)4230 6553 y Fp(A)35
b(primary)h(bene\002t)f(of)h(automatic)f(pool)g(allocation)f(is)i(that)
f(it)g(pro)n(vides)4080 6727 y(the)h(compiler)f(a)h(basis)g(for)f
(performing)f(aggressi)l(v)n(e)h(data)h(structure)f(trans-)4080
6901 y(formations)g(of)h(entire)f(link)o(ed)g(data)h(structures)f
(safely)h(and)g(transparently)-10 b(.)4080 7076 y(Such)46
b(transformations)e(can)i(use)g(the)f(data)h(structure)e(graph)h(and)h
(kno)l(wl-)4080 7250 y(edge)40 b(about)f(the)h(pool)e(allocation)h(to)g
(analyze)h(and)g(optimize)f(accesses)j(to)4080 7425 y(the)47
b(data)g(structures)f(in)g(the)h(program)f(at)h(compile)f(time,)k(and)d
(to)f(control)4080 7599 y(the)57 b(layout)f(of)h(data)g(within)f(pools)
g(at)h(compile-time)f(or)h(runtime.)106 b(W)-12 b(e)4080
7773 y(brie\003y)44 b(discuss)h(a)h(fe)l(w)f(such)g(transformations)e
(here,)k(describing)d(one)h(of)4080 7948 y(them)e(\(pointer)e
(compression\))i(in)f(some)i(detail,)g(b)m(ut)e(more)h(w)o(ork)f(will)f
(be)4080 8122 y(needed)d(to)e(implement)h(and)g(e)l(v)l(aluate)h(all)f
(these)g(optimizations.)4080 8447 y Fo(5.1)199 b(P)l(ointer)50
b(Compr)l(ession)4230 8663 y Fp(Only)d(a)h(small)g(fraction)f(of)g
(data)h(structures)f(in)g(modern)h(applications)4080
8837 y(are)41 b(lik)o(ely)e(to)h(use)g Fg(2)5156 8774
y Fl(32)5327 8837 y Fp(or)g(more)g(addressable)h(objects,)g(and)g(a)g
(signi\002cant)4080 9012 y(fraction)52 b(are)i(lik)o(ely)e(to)g(use)i
(less)g(than)e Fg(2)6314 8948 y Fl(16)6498 9012 y Fp(objects.)94
b(Pointer)m(-intensi)l(v)n(e)4080 9186 y(data)52 b(structures)g(on)f(a)
i(64-bit)d(architecture)i(therefore)f(mak)o(e)i(v)n(ery)e(inef-)4080
9360 y(\002cient)g(use)g(of)g(memory)-10 b(,)55 b(and)c(consequently)f
(memory)h(bandwidth)e(and)4080 9535 y(cache)41 b(capacity)-10
b(.)55 b(F)n(or)40 b(e)n(xample,)h(a)f(tree)g(structure)f(with)g(tw)o
(o)f(child)h(point-)4080 9709 y(ers)i(and)g(8)g(bytes)f(of)h(data)g(w)o
(ould)e(require)h Fg(3)d Fs(\002)g Fg(8)k Fp(bytes)f(of)h(memory)-10
b(.)57 b(Re-)4080 9883 y(placing)39 b(64-bit)f(pointers)g(with)h
(32-bit)f(ones)i(w)o(ould)e(reduce)i(the)f(memory)4080
10058 y(consumption)28 b(by)h Fg(1)p Fi(=)p Fg(3)p Fp(,)h(and)g(16-bit)
d(pointers)h(w)o(ould)f(reduce)j(it)f(by)f(a)i(f)o(actor)4080
10232 y(of)37 b(2.)4230 10406 y(The)e(logical)g(data)g(structure)f
(analysis)h(and)g(automatic)g(pool)f(allocation)4080
10581 y(transformation)e(mak)o(e)j(it)e(possible)h(to)f(replace)i
(pointers)e(with)g(smaller)h(in-)4080 10755 y(de)n(x)49
b(v)l(alues)h(into)e(a)h(pool.)82 b(A)49 b(simple)g(transformation)e(w)
o(ould)h(be)h(to)g(use)p eop end
%%Page: 10 10
TeXDict begin 10 9 bop -303 -137 a Fp(\002x)n(ed)47 b(32-bit)f
(indices,)51 b(and)c(generate)h(a)h(runtime)e(error)g(if)g(a)h(single)f
(logi-)-303 37 y(cal)j(structure)f(uses)i(more)f(than)g
Fg(2)1544 -26 y Fl(32)1717 37 y Fs(\000)45 b Fg(1)50
b Fp(separate)h(objects)e(at)h(runtime.)-303 211 y(Although)42
b(rare,)48 b(such)d(potential)e(errors)i(may)h(mak)o(e)f(the)g
(transformation)-303 386 y(unacceptable)29 b(to)f(some)i(lar)m(ge)f
(applications.)42 b(A)29 b(rob)m(ust)f(and)h(more)g(aggres-)-303
560 y(si)l(v)n(e)43 b(strate)n(gy)g(is)g(to)h(dynamically)e(gro)l(w)h
(the)h(inde)n(x)f(sizes)h(as)g(needed,)i(by)-303 734
y(relocating)33 b(the)i(pool)e(and)i(re)l(writing)e(all)h(inde)n(x)n
(es)g(into)g(it)g(runtime.)45 b(Such)34 b(a)-303 909
y(strate)n(gy)29 b(w)o(ould)g(allo)l(w)h(us)g(to)g(use)h(e)l(v)n(en)f
(smaller)h(\(16-bit\))d(of)l(fsets)i(initially)-10 b(,)-303
1083 y(and)37 b(gro)l(w)g(these)g(to)g(32-bit)e(or)i(64-bit)e(of)l
(fsets)i(if)g(needed.)-154 1257 y(There)48 b(are)g(tw)o(o)e(major)h
(potential)e(challenges)i(to)g(such)g(a)h(transforma-)-303
1432 y(tion.)43 b(First,)32 b(because)h(the)e(storage)g(size)h(of)f(a)h
(pointer)e(v)l(ariable)h(can)h(change)-303 1606 y(at)38
b(runtime,)h(some)g(\002eld)f(of)l(fsets)h(for)f(structures)f
(containing)g(pointers)g(are)-303 1780 y(no)d(longer)h(compile-time)f
(constants.)45 b(This)35 b(requires)g(an)g(additional)e(le)l(v)n(el)
-303 1955 y(of)53 b(indirection)e(in)i(addressing)f(those)h(structure)g
(\002elds,)58 b(which)52 b(can)i(po-)-303 2129 y(tentially)44
b(cause)k(high)d(runtime)h(o)n(v)n(erhead)g(\(this)f(is)h(the)h(major)f
(challenge)-303 2304 y(to)j(achie)l(ving)h(net)h(bene\002ts)f(from)g
(pointer)f(compression\).)86 b(The)51 b(second)-303 2478
y(challenge)42 b(is)h(that)f(all)g(object)h(references)g(must)g(be)g
(dynamically)f(re)l(writ-)-303 2652 y(ten)35 b(when)g(the)g(of)l(fsets)
g(gro)l(w)f(in)h(size.)46 b(Note,)36 b(ho)l(we)l(v)n(er)-6
b(,)36 b(that)e(this)g(can)i(hap-)-303 2827 y(pen)k(at)g(most)g(2)f
(times)h(for)g(an)n(y)g(single)f(logical)g(data)h(structure)f(\()p
Fg(16)47 b Fs(!)h Fg(32)-303 3001 y Fp(and)f Fg(32)61
b Fs(!)g Fg(64)p Fp(\).)77 b(W)-12 b(e)47 b(choose)h(to)e(limit)g
(ourselv)n(es)h(to)f(16,)k(32,)g(or)d(64-bit)-303 3175
y(pointers)32 b(for)h(this)g(reason.)45 b(Here,)36 b(we)e(describe)f
(the)h(basic)g(transformation)-303 3350 y(and)j(discuss)g(brie\003y)f
(ho)l(w)h(we)h(can)g(address)f(these)h(tw)o(o)e(challenges.)-303
3715 y Fh(P)-15 b(ointer)46 b(Size)g(T)-10 b(r)m(ansformation)-303
3956 y Fp(An)n(y)30 b(logical)g(data)g(structure)g(for)h(which)f
(automatic)g(pool)g(allocation)f(is)i(le-)-303 4130 y(g)o(al)h(\(as)g
(described)g(pre)l(viously\))e(is)h(a)i(potential)d(candidate)i(for)f
(our)g(pointer)-303 4304 y(compression)47 b(transformation.)77
b(An)48 b(additional)e(restriction)g(we)j(impose)-303
4479 y(is)e(that)g(pointers)f(to)h(objects)g(of)g(a)h(type)f
Fi(T)69 b Fp(may)48 b(be)g(compressed)g(only)e(if)-303
4653 y Fn(all)d Fp(objects)i(of)f(type)g Fi(T)66 b Fp(are)45
b(pool-allocated,)g(though)e(not)h(necessarily)g(in)-303
4827 y(the)57 b(same)i(pool.)107 b(This)57 b(ensures)h(that)f(the)h
(same)h(code)f(can)g(be)g(used)f(to)-303 5002 y(dereference)38
b(all)f(such)g(pointers.)-154 5176 y(W)-12 b(e)50 b(assume)h(for)e(no)l
(w)g(that)g(all)h(objects)f(in)g(a)h(single)f(pool)f(are)j(homo-)-303
5350 y(geneous,)e(i.e.,)h(dif)l(ferent)45 b(node)h(types)h(in)f
(heterogeneous)g(structures)f(are)-303 5525 y(allocated)j(in)h(dif)l
(ferent)e(pools.)81 b(This)49 b(may)g(not)f(be)h(possible)f(for)h
(object-)-303 5699 y(oriented)40 b(languages)i(with)e(inheritance,)i
(ho)l(we)l(v)n(er)-6 b(,)44 b(and)d(we)h(will)f(ha)m(v)n(e)g(to)-303
5873 y(mak)o(e)34 b(all)g(pool)g(entries)g(be)g(a)h(multiple)e(of)h
(the)g(GCD)g(of)g(the)g(static)g(sizes)h(of)-303 6048
y(all)h(types)h(in)g(the)g(pool.)-154 6222 y(F)n(or)48
b(a)g(homogeneous)g(logical)f(structure,)j Fi(S)8 b Fp(,)52
b(let)47 b(its)h(node)g(type)f(be)i Fi(T)-303 6397 y
Fp(and)c(it')-8 b(s)44 b(pool)h(be)g Fi(P)21 b Fp(.)72
b(The)46 b(tw)o(o)e(pre)l(vious)h(analyses)h(ha)m(v)n(e)f(already)h
(iden-)-303 6571 y(ti\002ed)c(all)g(static)h(v)l(ariables)g(\(scalar)g
(v)l(ariables,)i(structure)d(\002elds,)i(or)f(array)-303
6745 y(elements\))50 b(that)f(can)h(hold)e(pointers)h(either)g(to)g
(the)h(nodes)f(of)g(that)g(struc-)-303 6920 y(ture,)43
b(or)e(to)h(\002elds)g(within)e(a)j(node.)60 b(If)42
b(there)g(is)g(a)g(such)g(a)h(v)l(ariable)f(within)-303
7094 y(the)f(type)h Fi(T)63 b Fp(\(i.e.,)44 b(type)e
Fi(T)63 b Fp(is)42 b(recursi)l(v)n(e\),)h(or)f(within)e(an)n(y)h(other)
h(pool)f(that)-303 7268 y(has)c(a)h(pool)e(pointer)g(to)h
Fi(P)21 b Fp(,)38 b(we)g(simply)e(change)i(the)f(type)g(of)f(that)h(v)l
(ariable)-303 7443 y(to)k(hold)g(an)h(inde)n(x)f(into)f(pool)h
Fi(P)21 b Fp(.)62 b(At)41 b(compile-time,)i(we)f(use)g(inte)n(gers)f
(of)-303 7617 y(size)c Fi(O)83 7634 y Fe(min)359 7617
y Fp(for)g(the)g(indices,)g(where)g Fi(O)1808 7634 y
Fe(min)2084 7617 y Fp(def)o(aults)f(to)g(16)h(bits.)-154
7791 y(If)48 b(a)h(pointer)f(v)l(ariable)g(outside)f(an)n(y)i(pool)e
(is)h(of)h(type)f Fi(T)21 b Fs(\003)p Fp(,)51 b(it)d(must)h(be)-303
7966 y(replaced)c(with)f(a)i(pair)e(of)h(v)l(ariables)g
Fi(<)p Fd(ptr\(Pdesc\),)j(inde)n(x)p Fi(>)p Fp(,)e(so)g(that)e(the)-303
8140 y(pointer)g(can)i(\223carry)g(with)e(it\224)i(the)f(information)e
(required)i(to)g(decode)h(the)-303 8314 y(indices.)i(The)38
b(same)i(transformation)c(also)i(applies)f(to)g(all)h(formal)f(param-)
-303 8489 y(eters)43 b(of)g(type)g Fi(T)21 b Fs(\003)p
Fp(,)46 b(so)d(that)g(pool)f(descriptor)g(pointers)h(are)h(passed)g
(along)-303 8663 y(with)36 b(indices)g(on)h(function)f(calls)h(\(and)g
(returns\).)-154 8837 y(If)c(the)g(inde)n(x)f(size)h(is)g(ne)l(v)n(er)g
(changed)h(at)f(runtime,)g(then)g(the)f(abo)n(v)n(e)h(sim-)-303
9012 y(ple)g(transformations)f(are)i(suf)l(\002cient.)45
b(T)-12 b(o)34 b(enable)g(dynamic)g(size)g(changes,)-303
9186 y(more)42 b(comple)n(x)g(runtime)f(support)g(and)h(address)h
(arithmetic)e(are)i(needed.)-303 9360 y(The)d(pool)e(descriptor)g(is)i
(augmented)f(to)g(include)g(an)g(array)h(of)f(of)l(fsets)g(for)-303
9535 y(each)33 b(\002eld)f(of)g Fi(T)21 b Fp(.)45 b(An)32
b(access)i(to)d Fi(X)54 b Fs(!)43 b Fg(\015d)1976 9552
y Fe(n)2094 9535 y Fp(\()p Fg(0)f Fs(\024)h Fi(n)f(<)33
b Fp(number)f(of)g(\002elds)-303 9709 y(of)k Fi(T)21
b Fp(\))38 b(becomes:)-154 10058 y Fj(*\(Pdesc)p Fc(!)p
Fj(poolbase)75 b(+)80 b(Xindex)e(+)h(Pdesc)p Fc(!)p Fj(offsets[n]\))
-154 10406 y Fp(Clearly)-10 b(,)56 b(the)c(o)n(v)n(erheads)g(of)f(such)
i(an)f(access)i(sequence)f(could)f(o)n(v)n(er)m(-)-303
10581 y(whelm)58 b(an)n(y)f(bene\002ts)h(of)g(the)g(transformation.)107
b(The)58 b(ne)n(xt)f(section)h(de-)-303 10755 y(scribes)d(some)i
(optimizations)c(that)i(are)i(crucial)e(to)g(mak)o(e)h(this)f(strate)n
(gy)4080 -137 y(practical.)107 b(The)58 b(section)f(follo)l(wing)e(it)i
(describes)h(ho)l(w)f(references)i(are)4080 37 y(updated)37
b(on)f(a)i(runtime)e(pointer)g(size)i(change.)4080 355
y Fh(Optimizing)46 b(P)-15 b(ointer)46 b(Der)-7 b(efer)g(ences)4080
596 y Fp(W)-12 b(e)50 b(propose)f(tw)o(o)f(optimizations)f(that)i(can)h
(be)g(performed)f(at)g(compile-)4080 770 y(time)d(to)g(achie)l(v)n(e)h
(ef)l(\002cient)f(structure)f(\002eld)h(addressing)g(in)g(the)g
(presence)4080 945 y(of)37 b(dynamically)f(changing)g(\002eld)h(sizes.)
4230 1119 y(First,)52 b(since)e(accesses)i(to)d(type)g
Fi(T)71 b Fp(are)50 b(type-safe,)j(we)d(can)h(safely)e(re-)4080
1293 y(order)58 b(the)g(\002elds)h(of)f Fi(T)21 b Fp(.)110
b(W)-12 b(e)59 b(can)g(mo)n(v)n(e)f(all)g(non-pointer)e(\002elds)i(of)g
Fi(T)4080 1468 y Fp(to)46 b(come)i(before)f(pointer)e(\002elds.)76
b(This)46 b(guarantees)i(that)e(the)g(of)l(fsets)h(for)4080
1642 y(non-pointer)52 b(\002elds)i(and)h(for)e(the)h(\002rst)g(pointer)
f(\002eld)h(are)h(compile-time)4080 1816 y(constants,)j(and)c(in)-6
b(v)m(olv)n(e)52 b(no)h(additional)f(o)n(v)n(erhead)i(be)n(yond)e(that)
h(of)h(or)m(-)4080 1991 y(dinary)48 b(pool)g(accesses,)54
b(i.e.,)f(the)n(y)48 b(only)f(require)h(the)h(\002rst)f(tw)o(o)g(terms)
h(in)4080 2165 y(the)55 b(address)g(e)n(xpression)e(abo)n(v)n(e.)99
b(The)55 b(result)e(is)i(that)f(man)n(y)g(common-)4080
2340 y(case)35 b(accesses)h(\(e.g.,)g(non-pointer)31
b(\002elds)j(in)f(\003at)h(structures,)g(and)g(the)g(\002rst)4080
2514 y(pointer)51 b(in)g(an)n(y)h(structure\))f(ha)m(v)n(e)h(zero)g(o)n
(v)n(erhead)g(for)f(dynamic)h(pointer)4080 2688 y(compression.)4230
2863 y(The)35 b(second)g(k)o(e)n(y)f(optimization)f(is)i(to)f(mo)n(v)n
(e)h(\002eld)g(access)h(calculations)4080 3037 y(out)d(of)g(loops)f(or)
h(re)n(gions)f(of)h(the)g(call)g(graph)g(that)f(do)h(not)f(allocate)i
(or)f(deal-)4080 3211 y(locate)42 b(structure)f(nodes.)60
b(The)43 b(pool)d(allocation)h(transformation)e(already)4080
3386 y(identi\002es)e(the)g(program)f(points)g(where)h(these)h(occur)-8
b(.)4080 3704 y Fh(Dynamic)46 b(P)-15 b(ointer)46 b(Size)g(Chang)n(es)
4080 3945 y Fp(When)30 b(a)h(pool)e Fi(P)51 b Fp(detects)30
b(that)g(it)f(must)h(be)g(e)n(xpanded)f(and)h(it')-8
b(s)29 b(inde)n(x)g(range)4080 4119 y(gro)l(ws)44 b(be)n(yond)f(that)g
(addressable)i(by)f(the)g(current)f(inde)n(x)g(size,)k(we)e(must)4080
4293 y(re)l(write)j(all)h(locations)e(that)h(contain)f(indices)i(into)e
(pool)g Fi(P)21 b Fp(.)81 b(References)4080 4468 y(within)27
b(objects)h(in)f Fi(P)50 b Fp(can)29 b(be)g(found)e(simply)h(by)g(tra)m
(v)n(ersing)f(all)h(the)g(objects)4080 4642 y(in)36 b
Fi(P)21 b Fp(,)38 b(all)f(of)f(which)g(are)i(of)e(kno)l(wn)g(types.)47
b(The)37 b(same)h(operation)d(suf)l(\002ces)4080 4816
y(on)29 b(e)l(v)n(ery)g(pool)f(that)g(contains)g(references)i(into)e
Fi(P)21 b Fp(;)32 b(such)d(pools)f(are)h(easy)h(to)4080
4991 y(\002nd)k(because)g Fi(P)56 b Fp(has)34 b(pointers)e(to)h(all)g
(other)g(pools)g(containing)e(references)4080 5165 y(into)41
b(it.)62 b(Finally)-10 b(,)44 b(the)e(pool)g(descriptors)f(must)h(be)h
(updated)f(to)g(record)h(the)4080 5339 y(ne)l(w)38 b(of)l(fsets)f(for)f
(\002elds)i(of)e(types)h(that)g(contain)f(pointers)g(into)g(this)g
(pool.)4080 5658 y Fo(5.2)199 b(Impr)l(o)n(v)n(ed)49
b(Pr)l(efetching)j(Strategies)4230 5873 y Fp(One)29 b(of)g(the)g(major)
f(challenges)h(in)g(optimizing)e(accesses)k(to)e(link)o(ed)e(data)4080
6048 y(structures)47 b(is)g(to)g(ef)l(fecti)l(v)n(ely)f(hide)h(memory)h
(latencies)f(via)g(prefetching.)4080 6222 y(One)56 b(k)o(e)n(y)e(dif)l
(\002culty)g(is)i(to)f(predict)f(which)h(objects)g(will)f(be)i
(referenced)4080 6397 y(in)50 b(the)g(future)f(without)f(e)n(xplicitly)
g(loading)h(a)i(chain)f(of)g(pointer)f(v)l(alues;)4080
6571 y(this)j(has)i(been)f(called)g(the)f(\223pointer)m(-chasing)g
(problem\224)g([19].)93 b(A)53 b(v)l(ari-)4080 6745 y(ety)41
b(of)f(solutions)f(ha)m(v)n(e)h(been)h(proposed,)g(most)g(of)f(which)g
(add)h(a)g(\223history)4080 6920 y(pointer\224)36 b(to)f(each)j
(structure)d(node)i(to)e(record)i(either)f(the)g(allocation)f(order)
4080 7094 y(or)44 b(some)h(e)n(xpected)f(tra)m(v)n(ersal)f(order)h(for)
f(link)o(ed)g(data)h(structures.)66 b(These)4080 7268
y(history)57 b(pointers)f(are)j(then)e(used)i(to)e(schedule)h
(prefetches)g(for)g(objects)4080 7443 y(e)n(xpected)42
b(to)g(be)g(accessed)i(later)d(in)h(the)g(e)n(x)n(ecution)e([19,)j(4,)h
(21].)60 b(The)42 b(au-)4080 7617 y(tomatic)58 b(pool)f(allocation)f
(and)i(pointer)f(compression)g(transformations)4080 7791
y(each)43 b(enable)e(a)h(potentially)d(v)l(aluable)i(impro)n(v)n(ement)
f(for)h(such)h(prefetch-)4080 7966 y(ing)37 b(strate)n(gies.)4230
8140 y Fq(Cr)m(eation-order)42 b(pr)m(efetching)g(without)f(history)g
(pointers)p Fp(:)54 b(One)42 b(of)4080 8314 y(the)57
b(k)o(e)n(y)e(history-pointer)e(prefetching)j(schemes)i(pre)l(viously)c
(proposed)4080 8489 y(is)41 b(creation-order)e(prefetching,)i(in)g
(which)f(history)f(pointers)h(are)h(used)g(to)4080 8663
y(record)53 b(the)g(order)f(in)g(which)h(nodes)f(in)h(a)g(link)o(ed)e
(structure)h(are)i(created)4080 8837 y(at)i(runtime)f(and)h(to)g
(prefetch)f(nodes)h(in)g(that)f(order)-8 b(.)102 b(Luk)56
b(and)g(Mo)l(wry)4080 9012 y(suggested)66 b(a)g(v)l(ariant)g(of)g(this)
f(scheme)i(the)n(y)f(call)g(Data-Linearization)4080 9186
y(Prefetching,)80 b(which)71 b(w)o(ould)f(not)h(require)g(history)e
(pointers,)80 b(and)71 b(in-)4080 9360 y(stead)31 b(relies)g(on)g
(placing)f(consecuti)l(v)n(ely)g(created)i(objects)e(within)f(the)i
(data)4080 9535 y(structure)52 b(in)h(consecuti)l(v)n(ely)f(memory)h
(focations)f(\(or)g(remapping)g(them)4080 9709 y(after)47
b(allocation\),)h(b)m(ut)d(the)n(y)h(do)h(not)e(describe)i(ho)l(w)g(to)
f(do)g(so)h(in)f(a)h(com-)4080 9883 y(piler)36 b([19].)4230
10058 y(In)67 b(f)o(act,)74 b(the)67 b(automatic)g(pool)f
(transformation)g(is)h(e)n(xactly)g(what)g(is)4080 10232
y(needed)37 b(to)f(implement)g(such)g(a)h(scheme,)h(i.e.,)g(to)e
(perform)g(creation)g(order)4080 10406 y(prefetching)44
b Fn(without)f(adding)g(any)j(history)e(pointer)o(s)g(to)h(the)g(data)f
(struc-)4080 10581 y(tur)-6 b(es)p Fp(.)47 b(In)37 b(particular)-6
b(,)36 b(if)g(memory)h(for)f(successi)l(v)n(ely)h(allocated)g(objects)f
(in)4080 10755 y(a)d(pool)d(is)i(allocated)g(in)f(consecuti)l(v)n(e)h
(memory)g(locations,)g(later)g(tra)m(v)n(ersals)p eop
end
%%Page: 11 11
TeXDict begin 11 10 bop -303 -137 a Fp(of)31 b(the)g(link)o(ed)e(data)j
(structure)e(can)i(prefetch)f(v)l(alues)g Fi(k)36 b Fp(accesses)e
(ahead)d(for)-303 37 y(arbitrary)44 b Fi(k)t Fp(,)49
b(without)44 b(needing)h(an)n(y)h(history)e(pointers.)71
b(This)46 b(w)o(ould)e(not)-303 211 y(w)o(ork)35 b(for)h(structures)g
(whose)g(linkages)g(are)h(modi\002ed)g(after)f(the)g(initial)f(al-)-303
386 y(location)i(\(which)i(the)f(compiler)h(could)f(easily)h(detect)g
(from)g(the)g(pre)l(vious)-303 560 y(analyses\),)53 b(b)m(ut)48
b(could)h(w)o(ork)f(well)h(for)g(structures)g(that)g(are)h(created)g
(and)-303 734 y(then)36 b(repeatedly)h(tra)m(v)n(ersed)g(in)g(order)-8
b(.)-154 909 y Fq(History)69 b(pointer)h(pr)m(efetching)h(with)e(near)
-6 b(-zer)m(o)71 b(memory)g(o)o(v)o(er)-6 b(-)-303 1083
y(head)p Fp(:)61 b(When)45 b(the)g(tra)m(v)n(ersal)f(order)h(for)f(a)h
(structure)f(may)i(not)e(match)h(the)-303 1257 y(creation)50
b(order)-6 b(,)54 b(history)48 b(pointers)i(of)g(some)h(kind)f(must)g
(be)h(used)f(in)g(or)m(-)-303 1432 y(der)42 b(to)g(capture)g
(information)f(about)g(the)h(e)n(xpected)h(tra)m(v)n(ersal)f(order)-8
b(.)61 b(The)-303 1606 y(pointer)35 b(size)h(transformation)f(mak)o(es)
i(it)e(possible)h(to)g(use)g(history-pointer)-303 1780
y(prefetching)g Fn(with)h(nearly)h(zer)-7 b(o)39 b(memory)f(o)o
(verhead)k Fp(relati)l(v)n(e)37 b(to)g(the)h(orig-)-303
1955 y(inal)i(application:)53 b(we)42 b(simply)e(use)i(the)f(space)i
(sa)m(v)n(ed)e(in)g(a)h(data)g(structure)-303 2129 y(for)36
b(recording)g(history)g(pointers.)-154 2304 y(The)c(softw)o(are-based)e
(history)f(pointer)h(schemes)i(require)f(the)f(compiler)-303
2478 y(to)h(add)i(e)n(xtra)f(pointer)e(\002elds)j(within)d(a)j(pointer)
m(-based)e(data)h(structure,)h(and)-303 2652 y(these)41
b(\002elds)f(hold)g(pointers)f(to)h(other)g(elements)h(of)f(the)h
Fn(same)g Fp(data)f(struc-)-303 2827 y(ture.)77 b(Therefore,)51
b(these)d(e)n(xtra)f(pointers)f(can)i(also)g(be)f(stored)g(in)g
(current)-303 3001 y(compressed)42 b(format)f(at)g(an)n(y)g(point)f(in)
h(time.)59 b(Furthermore,)42 b(all)f(schemes)-303 3175
y(we)33 b(kno)l(w)f(of)h(require)f(at)h(most)g(one)g(e)n(xtra)g
(pointer)e(for)h(each)i(pointer)e(in)g(the)-303 3350
y(original)44 b(structure.)73 b(Our)46 b(pointer)f(compression)h
(schemes)i(guarantee)f(at)-303 3524 y(least)g(a)i(f)o(actor)d(of)i(tw)o
(o)e(reduction)g(in)h(memory)h(usage)g(per)g(pointer)-8
b(.)76 b(The)-303 3698 y(pre)l(vious)33 b(tw)o(o)g(f)o(acts)h(imply)g
(that)f(we)i(can)g(add)f(history)f(pointers)g(to)h(a)h(com-)-303
3873 y(pressed)i(structure)g(completely)g(free)g(of)g(an)n(y)h(memory)f
(o)n(v)n(erhead)g(\(e)n(xcept)-303 4047 y(the)29 b(ne)n(gligible)e
(space)j(used)g(by)e(the)i(pool)e(descriptors\).)42 b(W)-12
b(e)30 b(are)g(not)f(a)n(w)o(are)-303 4221 y(of)47 b
Fn(any)g(e)m(xisting)f(softwar)-6 b(e)47 b(sc)n(hemes)h
Fp(that)e(can)i(perform)f(history)e(pointer)-303 4396
y(prefetching)36 b(without)f(sign\002cant)h(memory)i(o)n(v)n(erhead.)
-303 4700 y Fo(5.3)198 b(A)-10 b(utomatic)50 b(Small\255scale)h(P)n
(arallelization)-154 4916 y Fp(Small-scale)32 b(parallelism)e(is)i
(increasingly)d(important)h(because)j(of)d(se)l(v-)-303
5090 y(eral)j(k)o(e)n(y)f(architectural)g(trends,)i(including)c
(widespread)j(use)g(of)g(multipro-)-303 5265 y(cessor)g(serv)n(ers)h
(with)e(2)h(to)f(32)h(processors,)h(the)f(emer)m(gence)i(of)e
(processors)-303 5439 y(based)62 b(on)f(simultaneous)f(multithreading)f
([28])i(or)g(on-chip)f(multipro-)-303 5613 y(cessing,)f(and)c(the)g
(\002ne-grain)f(e)n(xplicitly)e(parallel)i(architecture)g(\(EPIC\))-303
5788 y(used)40 b(in)g(the)g(Itanium)g(Processor)h(F)n(amily)-10
b(.)56 b(The)41 b(techniques)f(proposed)f(in)-303 5962
y(this)28 b(paper)h(potentially)e(enable)i(us)g(to)g(e)n(xtract)g
(small)g(de)n(grees)g(of)g(relati)l(v)n(ely)-303 6136
y(coarse-grain)35 b(parallelism)g(for)g(ordinary)g(programs.)45
b(In)36 b(particular)-6 b(,)35 b(if)g(the)-303 6311 y(compiler)58
b(pro)n(v)n(es)g(that)g(tw)o(o)f(logical)h(data)g(structures)g(are)i
(disjoint)c(and)-303 6485 y(ha)m(v)n(e)35 b(no)g(cross)g(references,)i
(it)e(follo)l(ws)e(that)i(updates)g(of)g(those)f(tw)o(o)g(struc-)-303
6659 y(tures)e(can)h(be)f(performed)g(in)g(parallel)f(\(if)h
(computations)f(on)h(one)g(structure)-303 6834 y(do)37
b(not)g(use)h(v)l(alues)g(from)f(the)h(other\).)47 b(This)37
b(is)h(a)g(dif)l(ferent)f(style)g(of)g(paral-)-303 7008
y(lelism)29 b(than)h(that)f(e)n(xtracted)g(by)h(other)f
(parallelization)f(strate)n(gies)h(for)h(non-)-303 7182
y(array-based)59 b(programs)f([20])g(and)h(for)f(tree-lik)o(e)f(data)i
(structures)f([17].)-303 7357 y(Those)42 b(strate)n(gies)f(focus)g(on)h
(data)f(parallelism)g(within)f(computations)g(on)-303
7531 y(the)h(same)h(data)f(structure)f(or)h(set)g(of)g(structures,)h
(whereas)g(we)f(w)o(ould)e(ob-)-303 7705 y(tain)33 b(parallelism)g
(between)h(computations)e(on)i(dif)l(ferent)e(structures.)45
b(This)-303 7880 y(might)36 b(only)h(yield)g(small)h(de)n(grees)g(of)f
(parallelism,)h(b)m(ut)f(such)h(parallelism)-303 8054
y(may)29 b(in)f(f)o(act)g(be)h(well-suited)e(to)h(the)g(emer)m(ging)h
(systems)g(described)f(abo)n(v)n(e.)-303 8447 y Fo(6.)198
b(RELA)-19 b(TED)49 b(W)n(ORK)-154 8663 y Fp(There)h(is)e(a)i(rich)e
(literature)g(on)g(pointer)g(analysis)g(techniques)g(and)h(on)-303
8837 y(shape)57 b(analysis)f(of)h(data)g(structures)f(in)g(programs.)
105 b(Our)56 b(disjoint)f(data)-303 9012 y(structure)49
b(analysis)h(is)g(most)g(similar)g(to)f(pre)l(vious)h(w)o(ork)f(on)g
(computing)-303 9186 y(heap)g(approximations)e(such)i(as)g(path)g
(matrices)98 b([17])48 b(and)h(static)f(shape)-303 9360
y(graphs)56 b(for)f(heap)i(storage)f(\(e.g.,)i([14,)j(18,)g(22]\).)104
b(One)56 b(k)o(e)n(y)g(dif)l(ference)-303 9535 y(between)c(all)g(these)
g(pre)l(vious)f(analyses)i(and)f(ours)f(is)h(that)g(the)g(pre)l(vious)
-303 9709 y(approaches)43 b(are)h(\003o)l(w-sensiti)l(v)n(e)d(\227)j
(the)n(y)e(compute)h(a)h(heap)f(approxima-)-303 9883
y(tion)48 b(\(e.g.,)55 b(one)50 b(or)f(more)i(shape)f(graphs\))g(for)f
(each)i(program)f(point.)83 b(In)-303 10058 y(contrast,)57
b(we)e(only)d(compute)i(a)g(single)f(summary)i(graph)e(for)g(an)h
(entire)-303 10232 y(procedure.)45 b(This)34 b(also)g(means)i(that)d
(our)h(analysis)g(does)h(not)e(ha)m(v)n(e)h(to)g(be)h(it-)-303
10406 y(erati)l(v)n(e.)44 b(W)-12 b(e)34 b(also)e(use)h(a)g
(signi\002cantly)e(simpler)h(interprocedural)f(strate)n(gy)-303
10581 y(than)d(pre)l(vious)h(papers,)i(which)e(generally)f(either)h
(perform)g(data\003o)l(w)g(anal-)-303 10755 y(ysis)47
b(on)g(a)h(full)e(interprocedural)f(control)h(\003o)l(w)i(graph)f
(\(e.g.,)h([18]\))f(or)g(an)4080 -137 y(iterati)l(v)n(e)42
b(analysis)h(on)f(the)h(call)f(graph)h(\(e.g.,)h([17,)g(14]\).)63
b(In)42 b(contrast,)i(we)4080 37 y(ne)l(v)n(er)53 b(b)m(uild)e(either)h
(a)h(call)g(graph)f(or)g(an)h(interprocedural)e(control)g(\003o)l(w)
4080 211 y(graph.)92 b(Instead,)56 b(we)d(handle)e(both)h(direct)f(and)
i(indirect)e(function)f(calls)4080 386 y(simply)45 b(as)h(additional)d
(memory)i(objects)g(in)g(our)g(summary)g(graphs,)i(and)4080
560 y(inline)40 b(the)h(summary)h(graph)e(for)h(a)h(callee)g(at)f(each)
h(call)f(site)g(to)g(achie)l(v)n(e)h(a)4080 734 y(simple)k(b)m(ut)f(po)
l(werful)f(conte)n(xt-sensiti)l(v)n(e)g(analysis)h(that)h(is)f(linear)g
(in)h(the)4080 909 y(number)37 b(of)g(call)g(sites)g(and)g(call)g
(edges)h(in)f(the)g(program.)7094 845 y Fm(3)4230 1083
y Fp(Man)n(y)30 b(conte)n(xt-sensiti)l(v)n(e)e(pointer)i(analysis)g
(techniques)g(also)h(compute)4080 1257 y(a)48 b(path-based)g(or)f
(graph-based)g(approximation)f(to)h(the)g(pointer)g(reacha-)4080
1432 y(bility)39 b(properties)h(of)h(pointer)f(v)l(ariables)h(and)g
(heap)h(objects)f(\(e.g.,)h([11,)g(5,)4080 1606 y(29]\).)64
b(These)45 b(techniques)e(generally)f(do)h(not)g(identify)e(logically)h
(disjoint)4080 1780 y(data)49 b(structures,)i(e)l(v)n(en)d(though)f
(the)n(y)h(can)h(probably)d(be)j(e)n(xtended)f(to)g(do)4080
1955 y(so.)d(F)n(or)30 b(e)n(xample,)i(some)g(techniques)e(use)h(a)g
(single)f(name)h(to)f(represent)h(all)4080 2129 y(heap)47
b(objects)f(at)h(a)g(particular)f(allocation)f(point)g([11,)k(29].)74
b(Others)47 b(only)4080 2304 y(compute)40 b(alias)g(relationships)f
(between)h(dif)l(ferent)f(pointer)g(v)l(ariables)h(us-)4080
2478 y(ing)46 b(a)h(\223store-less\224)g(approach,)i(and)e(do)f(not)g
(attempt)g(to)g(deri)l(v)n(e)g(a)i(model)4080 2652 y(of)f(heap)h
(storage)f([5].)76 b(In)47 b(both)g(cases,)k(the)d(algorithms)d(could)i
(probably)4080 2827 y(be)e(e)n(xtended)f(in)h(a)g(f)o(airly)e
(straightforw)o(ard)f(manner)j(to)f(identify)f(disjoint)4080
3001 y(heap-based)38 b(data)f(structures.)4230 3175 y(W)-12
b(e)29 b(belie)l(v)n(e)g(that)g(the)g(automatic)f(pool)g(allocation)g
(transformation)f(pro-)4080 3350 y(posed)45 b(here)g(is)g(the)g
(\002rst)f(such)h(algorithm)f(for)g(programs)h(containing)e(e)n(x-)4080
3524 y(plicit)g(uses)i(of)g(malloc)f(and)h(free)g(to)f(manage)i(heap)f
(memory)-10 b(.)69 b(As)45 b(noted,)4080 3698 y(pool-based)f
(allocation)g(is)h(a)g(widely)f(applied)h(manual)g(technique.)69
b(Lan-)4080 3873 y(guage)41 b(support)d(has)j(been)g(de)l(v)n(eloped)e
(for)h(simplifying)e(the)i(use)h(of)f(pool-)4080 4047
y(based)66 b(allocation)d(via)i(program)f(annotations,)71
b(and)65 b(for)f(checking)h(the)4080 4221 y(correctness)45
b(of)e(pool)g(usage)i(through)d(enriched)h(type)h(systems)g([10,)i
(13].)4080 4396 y(There)36 b(has)f(been)h(pre)l(vious)e(w)o(ork)g(on)h
(automatically)e(identifying)g(re)n(gions)4080 4570 y(of)45
b(memory)h(for)f(ML,)h(i.e.,)i(for)d(a)h(type-safe)f(functional)f
(language)h(with-)4080 4744 y(out)35 b(side-ef)l(fects.)47
b(Their)36 b(analysis)f(is)h(used)g(as)h(either)f(the)f(sole)h([26,)g
(25])g(or)4080 4919 y(the)c(primary)f([16])h(means)h(of)f(releasing)f
(dynamically)g(allocated)h(memory)4080 5093 y(back)g(to)f(the)g
(system.)45 b(The)n(y)31 b(also)g(simplify)f(the)h(problem)g(by)g
(using)f(e)n(x)n(ecu-)4080 5267 y(tion)h(scopes)i(to)f(identify)f(re)n
(gions)g(as)i(collections)f(of)g(objects)g(that)g(become)4080
5442 y(unreachable)h(at)g(the)g(same)h(scope,)g(and)f(do)g(not)f
(consider)g(arbitrary)g(re)n(gion)4080 5616 y(lifetimes.)4230
5790 y(In)40 b(contrast,)i(our)e(primary)g(goal)g(is)h(to)f(use)i
(automatic)e(pool)g(allocation)4080 5965 y(as)53 b(a)h(means)f(of)g
(enabling)e(further)h(compiler)g(optimizations)e(for)i(link)o(ed)4080
6139 y(data)42 b(structures.)61 b(Consequently)-10 b(,)42
b(a)h(k)o(e)n(y)e(dif)l(ference)h(in)g(our)f(w)o(ork)g(is)h(that)4080
6313 y(we)35 b(automatically)e(introduce)g(pool-based)g(allocation)f
(for)i(a)h(wider)e(range)4080 6488 y(of)47 b(\(b)m(ut)g(not)f
(necessarily)i(for)f(all\))g(heap-based)h(data)f(structures,)j(includ-)
4080 6662 y(ing)30 b(long-li)l(v)n(ed)f(structures)h(with)g(arbitrary)g
(lifetimes)h(\(b)m(ut)f(with)g(type-safe)4080 6837 y(usage\).)45
b(Furthermore,)34 b(we)f(correctly)f(handle)h(programs)f(that)h(rely)f
(on)h(e)n(x-)4080 7011 y(plicit)c(malloc)i(and)f(free)h(operations.)43
b(Although)28 b(we)j(could)f(use)h(our)f(analy-)4080
7185 y(sis)40 b(information)d(to)i(eliminate)g(e)n(xplicit)f
(deallocations)g(of)i(data)f(structure)4080 7360 y(nodes,)k(we)f
(choose)g(not)e(to)h(do)g(so)h(for)f(no)l(w)-10 b(.)59
b(Instead,)43 b(we)f(allo)l(w)f(the)g(pro-)4080 7534
y(gram)j(to)f(free)i(objects)e(in)g(the)g(pool,)i(b)m(ut)e(also)h
(release)g(all)g(memory)g(for)f(a)4080 7708 y(pool)h(back)i(to)e(the)h
(system)h(when)f(when)g(the)g(data)g(structure)f(is)i(unreach-)4080
7883 y(able.)4230 8057 y(There)h(is)g(a)g(broad)f(class)i(of)e(conserv)
l(ati)l(v)n(e)h(program)f(transformations)4080 8231 y(that)59
b(attempt)g(to)g(gi)l(v)n(e)g(better)f(locality)g(to)h(programs)g(by)g
(changing)g(the)4080 8406 y(placement)49 b(of)f(allocations)f(in)h
(memory)h([9,)i(15,)g(2,)h(7,)f(23].)80 b(In)48 b(contrast)4080
8580 y(to)35 b(these)h(techniques,)f(our)g(approach)g(uses)h(an)g
Fn(e)m(xact)g Fp(assignment)f(of)g(allo-)4080 8754 y(cated)46
b(objects)f(to)g(pools.)70 b(While)45 b(approximate)g(assignment)g
(algorithms)4080 8929 y(do)39 b(pro)n(vide)f(the)h(locality)e
(properties)h(we)i(are)f(seeking,)h(the)f(lack)g(of)g(e)n(xact)4080
9103 y(assignment)47 b(mak)o(es)h(them)g(unsuitable)e(to)h(host)g(more)
g(aggressi)l(v)n(e)h(trans-)4080 9277 y(formations,)36
b(such)i(as)g(pointer)d(compression.)4230 9452 y(Finally)-10
b(,)34 b(to)h(our)f(kno)l(wledge,)h(there)g(is)g(no)g(pre)l(viously)e
(published)h(w)o(ork)4080 9626 y(on)e(safe,)h(automatic)f(compression)f
(of)g(pointer)g(v)l(ariables.)44 b(This)32 b(is)f(a)i(no)n(v)n(el)4080
9800 y(optimization)27 b(enabled)i(by)g(automatic)g(pool-based)f
(allocation.)43 b(The)30 b(most)4080 9975 y(similar)41
b(system)h(is)g(described)f(in)h([32],)g(which)f(uses)h(programmer)g
(anno-)4080 10149 y(tations)i(to)g(identify)f(inte)n(gers)h(that)g(are)
i(usually)e(small)h(and)g(pointers)e(that)p 4080 10285
1594 7 v 4086 10393 a Fl(3)4155 10456 y Fp(In)56 b(f)o(act,)62
b(we)57 b(belie)l(v)n(e)f(that)g(our)g(analysis)g(is)h(linear)f(in)g
(the)g(size)h(of)g(the)4080 10606 y(program)52 b(under)f(reasonable)i
(assumptions)e(about)g(structure)g(\002elds)h(and)4080
10755 y(nested)37 b(structure)g(types,)g(b)m(ut)f(pro)n(ving)f(that)i
(requires)f(further)g(w)o(ork.)p eop end
%%Page: 12 12
TeXDict begin 12 11 bop -303 -137 a Fp(usually)44 b(contain)h(a)h
(small)f(of)l(fset)h(from)f(the)g(current)g(object.)71
b(Unlik)o(e)44 b(our)-303 37 y(w)o(ork,)52 b(that)e(paper)g(requires)g
(the)g(program)f(to)h(pro)n(vide)f(the)h(safety)g(anal-)-303
211 y(ysis,)60 b(and)c(hardw)o(are)f(support)g(to)g(ef)l(\002ciently)g
(access)j(and)e(detect)f(cases)-303 386 y(where)37 b(the)g(underlying)e
(v)l(alues)i(e)n(xceed)h(their)f(allocated)f(ranges.)-303
858 y Fo(7.)198 b(CONCLUSIONS)48 b(&)i(FUTURE)f(W)n(ORK)-154
1074 y Fp(This)e(paper)g(presented)g(a)h(no)n(v)n(el)e(transformation)f
(that)i(con)-6 b(v)n(erts)46 b(ordi-)-303 1248 y(nary)54
b(programs)h(to)g(use)g(pool-based)f(memory)h(allocation.)99
b(The)55 b(trans-)-303 1423 y(formation)k(relies)i(on)g(a)h(link-time)d
(interprocedural)g(analysis)i(to)g(iden-)-303 1597 y(tify)55
b(disjoint)f(logical)h(data)h(structures)g(in)f(the)h(program,)61
b(and)56 b(to)g(check)-303 1771 y(whether)49 b(these)i(data)f
(structures)g(are)h(accessed)h(in)d(a)i(type-safe)f(manner)-8
b(.)-303 1946 y(Ev)n(en)45 b(though)e(this)h(is)h(a)h(conte)n
(xt-sensiti)l(v)n(e)c(interprocedural)i(analysis,)j(it)-303
2120 y(is)k(simple)h(and)g(quite)f(ef)l(\002cient)h(because)h(only)e
(small)h(summary)g(graphs)-303 2294 y(are)38 b(propag)o(ated)g(between)
g(procedures,)h(interprocedural)d(information)g(is)-303
2469 y(only)41 b(propag)o(ated)h(from)h(callees)g(to)g(callers,)h
(function)d(pointers)h(are)h(han-)-303 2643 y(dled)29
b(uniformly)e(with)i(other)g(memory)h(pointers)e(during)g(the)i
(analysis,)h(and)-303 2818 y(the)37 b(analysis)f(is)h(\003o)l
(w-insensiti)l(v)n(e.)-154 2992 y(The)66 b(disjoint)c(data)k(structure)
e(analysis)h(combined)f(with)g(automatic)-303 3166 y(pool)55
b(allocation)h(can)h(enable)g(some)h(sophisticated)d(macroscopic)i
(opti-)-303 3341 y(mizations)63 b(for)g(link)o(ed)f(data)i(structures.)
125 b(W)-12 b(e)65 b(described)e(a)h(no)n(v)n(el)f(au-)-303
3515 y(tomatic)49 b(pointer)f(compression)h(transformation)f(and)i
(brie\003y)f(discussed)-303 3689 y(se)l(v)n(eral)57 b(other)g
(optimization)e(possibilities)g(enabled)i(by)g(this)g(w)o(ork.)106
b(A)-303 3864 y(k)o(e)n(y)47 b(goal)g(of)g(our)h(ongoing)e(w)o(ork)g
(is)i(to)f(implement)g(and)h(e)l(v)l(aluate)h(these)-303
4038 y(optimizations.)-303 4423 y Fo(8.)198 b(REFERENCES)-237
4595 y Fb([1])76 b(A.)33 b(A)-12 b(yers,)33 b(S.)h(de)f(Jong,)i(J.)e
(Pe)n(yton,)h(and)g(R.)f(Schooler)-7 b(.)35 b(Scalable)-7
4744 y(cross-module)g(optimization.)g Fa(A)l(CM)d(SIGPLAN)i(Notices)p
Fb(,)f(33\(5\):301\226312,)-7 4894 y(1998.)-237 5060
y([2])76 b(D.)33 b(A.)g(Barret)g(and)h(B.)g(G.)f(Zorn.)h(Using)g
(lifetime)f(predictors)i(to)e(impro)n(v)n(e)-7 5209 y(memory)i
(allocation)f(performance.)h(In)f Fa(Pr)-6 b(oc.)34 b(SIGPLAN)f('93)i
(Conf)n(.)e(on)-7 5359 y(Pr)-6 b(o)o(gr)n(amming)34 b(Langua)o(g)o(e)h
(Design)e(and)i(Implementation)p Fb(,)g(pages)-7 5508
y(187\226196,)h(Alb)m(uquerque,)g(Ne)m(w)d(Me)n(xixo,)i(June)e(1993.)
-237 5674 y([3])76 b(M.)33 b(Burk)o(e)h(and)g(L.)f(T)-11
b(orczon.)36 b(Interprocedural)g(optimization:)42 b(eliminating)-7
5824 y(unnecessary)34 b(recompilation.)h Fa(A)l(CM)e(T)-7
b(r)n(ansactions)34 b(on)g(Pr)-6 b(o)o(gr)n(amming)-7
5973 y(Langua)o(g)o(es)34 b(and)h(Systems)d(\(T)n(OPLAS\))p
Fb(,)i(15\(3\):367\226399,)k(1993.)-237 6139 y([4])76
b(B.)33 b(Cahoon)h(and)g(K.)f(McKinle)n(y)-9 b(.)35 b(Data)e(\003o)m(w)
g(analysis)g(for)h(softw)o(are)-7 6289 y(prefetching)h(link)o(ed)f
(data)f(structures)h(in)f(ja)m(v)m(a.)h(In)g Fa(International)-7
6438 y(Confer)-5 b(ence)33 b(on)h(P)-11 b(ar)n(allel)34
b(Ar)-5 b(c)n(hitectur)g(es)33 b(and)i(Compilation)f(T)-12
b(ec)n(hniques)p Fb(,)-7 6587 y(Barcelona,)34 b(Spain,)g(Sept.)f(2001.)
-237 6754 y([5])76 b(B.-C.)33 b(Cheng)h(and)g(W)-12 b(.)33
b(mei)h(Hwu.)f(Modular)i(interprocedural)h(pointer)-7
6903 y(analysis)d(using)h(access)e(paths:)42 b(Design,)34
b(implementation,)h(and)-7 7052 y(e)m(v)m(alutation.)f(In)g
Fa(SIGPLAN)f(Confer)-5 b(ence)34 b(on)g(Pr)-6 b(o)o(gr)n(amming)34
b(Langua)o(g)o(e)-7 7202 y(Design)f(and)i(Implementation)p
Fb(,)g(pages)f(57\22669,)h(V)-15 b(ancouv)n(er)-5 b(,)35
b(British)-7 7351 y(Columbia,)f(Canada,)g(June)g(2000.)-237
7517 y([6])76 b(T)-10 b(.)33 b(M.)h(Chilimbi,)g(B.)f(Da)m(vidson,)i
(and)f(J.)f(R.)g(Larus.)h(Cache-conscious)-7 7667 y(structure)g
(de\002nition.)g(In)g Fa(SIGPLAN)g(Confer)-5 b(ence)33
b(on)h(Pr)-6 b(o)o(gr)n(amming)-7 7816 y(Langua)o(g)o(e)35
b(Design)e(and)i(Implementation)p Fb(,)g(pages)e(13\22624,)j(1999.)-237
7982 y([7])76 b(T)-10 b(.)33 b(M.)h(Chilimbi)g(and)g(J.)f(R.)g(Larus.)h
(Using)f(generational)i(g)o(arbage)-7 8132 y(collection)f(to)f
(implement)i(cache-conscious)f(data)g(placement.)g Fa(A)l(CM)-7
8281 y(SIGPLAN)f(Notices)p Fb(,)g(34\(3\):37\22648,)k(1999.)-237
8447 y([8])76 b(I.)33 b(Corporation.)j(Xl)d(fortran:)42
b(Eight)34 b(w)o(ays)f(to)h(boost)g(performance.)h(White)-7
8597 y(P)n(aper)-5 b(,)33 b(2000.)-237 8763 y([9])76
b(R.)33 b(Courts.)g(Impro)n(ving)j(locality)e(of)g(reference)g(in)g(a)f
(g)o(arbage-collecting)-7 8912 y(memory)i(management)g(system.)e
Fa(Communications)i(of)e(the)h(A)l(CM)p Fb(,)-7 9062
y(31\(9\):1128\2261138,)k(1988.)-303 9228 y([10])76 b(K.)33
b(Crary)-9 b(,)34 b(D.)g(W)-11 b(alk)o(er)-5 b(,)34 b(and)g(G.)f
(Morrisett.)h(T)-11 b(yped)35 b(memory)g(management)-7
9377 y(in)e(a)g(calculus)h(of)g(capabilities.)f(In)h
Fa(Confer)-5 b(ence)34 b(Recor)-5 b(d)34 b(of)f(POPL)h(99:)42
b(The)-7 9526 y(26th)34 b(A)l(CM)f(SIGPLAN-SIGA)l(CT)h(Symposium)g(on)g
(Principles)f(of)-7 9676 y(Pr)-6 b(o)o(gr)n(amming)34
b(Langua)o(g)o(es,)h(San)f(Antonio,)h(T)-12 b(e)m(xas)p
Fb(,)34 b(pages)f(262\226275,)k(Ne)m(w)-7 9825 y(Y)-15
b(ork,)34 b(NY)-17 b(,)34 b(1999.)-303 9991 y([11])76
b(M.)33 b(Emami,)h(R.)f(Ghiya,)h(and)g(L.)g(J.)f(Hendren.)i(Conte)n
(xt-sensiti)m(v)n(e)-7 10141 y(interprocedural)g(points-to)g(analysis)e
(in)h(the)f(presence)h(of)g(function)-7 10290 y(pointers.)g(In)g
Fa(SIGPLAN)f(Confer)-5 b(ence)34 b(on)g(Pr)-6 b(o)o(gr)n(amming)34
b(Langua)o(g)o(e)-7 10440 y(Design)d(and)h(Implementation)p
Fb(,)h(pages)e(242\226256,)j(Orlando,)f(FL,)e(June)g(1994.)-303
10606 y([12])76 b(M.)33 b(F)-11 b(.)34 b(Fern)557 10605
y(\264)550 10606 y(andez.)g(Simple)g(and)g(ef)m(fecti)m(v)n(e)f
(link-time)i(optimization)g(of)-7 10755 y(Modula-3)g(programs.)g
Fa(A)l(CM)e(SIGPLAN)g(Notices)p Fb(,)g(30\(6\):103\226115,)38
b(1995.)4080 -137 y([13])76 b(D.)34 b(Gay)f(and)h(A.)f(Aik)o(en.)h
(Language)h(support)g(for)f(re)n(gions.)g(In)g Fa(Pr)-6
b(oc.)4376 12 y(SIGPLAN)34 b('01)g(Conf)n(.)g(on)g(Pr)-6
b(o)o(gr)n(amming)34 b(Langua)o(g)o(e)h(Design)f(and)4376
162 y(Implementation)p Fb(,)h(pages)f(70\22680,)i(Sno)m(wbird,)e(UT)-10
b(,)34 b(June)g(2001.)4080 328 y([14])76 b(R.)33 b(Ghiya)h(and)g(L.)g
(J.)f(Hendren.)i(Is)e(it)g(a)g(tree,)g(a)h(D)-5 b(A)g(G,)32
b(or)i(a)f(c)n(yclic)h(graph?)42 b(a)4376 477 y(shape)34
b(analysis)f(for)h(heap-directed)h(pointers)f(in)g(c.)f(In)h
Fa(Symposium)h(on)4376 626 y(Principles)f(of)f(Pr)-6
b(o)o(gr)n(amming)34 b(Langua)o(g)o(es)p Fb(,)h(pages)f(1\22615,)h
(1996.)4080 793 y([15])76 b(D.)34 b(Grunw)o(ald)g(and)g(B.)f(G.)g
(Zorn.)i(Customalloc:)41 b(Ef)m(\002cient)34 b(synthesized)4376
942 y(memory)h(allocators.)f Fa(Softwar)-5 b(e)34 b(-)f(Pr)n(actice)g
(and)i(Experience)p Fb(,)4376 1091 y(23\(8\):851\226869,)j(1993.)4080
1257 y([16])76 b(N.)34 b(Hallenber)n(g,)g(M.)f(Elsman,)h(and)g(M.)g(T)
-11 b(ofte.)34 b(Combining)h(re)n(gion)4376 1407 y(inference)g(and)f(g)
o(arbage)h(collection.)f(In)g Fa(SIGPLAN)f(Confer)-5
b(ence)34 b(on)4376 1556 y(Pr)-6 b(o)o(gr)n(amming)34
b(Langua)o(g)o(e)h(Design)f(and)g(Implementation)p Fb(,)i(Berlin,)4376
1706 y(German)n(y)-9 b(,)35 b(June)f(2002.)4080 1872
y([17])76 b(L.)34 b(J.)f(Hendren)h(and)g(A.)g(Nicolau.)g(P)n
(arallelizing)f(programs)i(with)f(recursi)m(v)n(e)4376
2021 y(data)g(structures.)g Fa(IEEE)g(T)-7 b(r)n(ansactions)33
b(on)h(P)-11 b(ar)n(allel)34 b(and)h(Distrib)m(uted)4376
2171 y(System)p Fb(,)f(pages)f(35\22647,)j(1990.)4080
2337 y([18])76 b(J.)33 b(R.)g(Larus)h(and)g(P)-15 b(.)34
b(N.)f(Hil\002nger)-7 b(.)34 b(Detecting)f(con\003icts)h(between)g
(structure)4376 2486 y(accesses.)f(In)g Fa(SIGPLAN)h(Confer)-5
b(ence)34 b(on)g(Pr)-6 b(o)o(gr)n(amming)34 b(Langua)o(g)o(e)4376
2636 y(Design)g(and)g(Implementation)p Fb(,)h(pages)f(21\22634,)i(July)
d(1988.)4080 2802 y([19])76 b(C.)33 b(Luk)h(and)g(T)-10
b(.)34 b(Mo)m(wry)-9 b(.)35 b(Compiler)m(-based)g(Prefetching)f(for)h
(Recursi)m(v)n(e)4376 2951 y(Data)e(Structures.)h(In)g
Fa(Pr)-6 b(oceedings)34 b(of)g(the)f(Eighth)i(International)4376
3101 y(Confer)-5 b(ence)34 b(on)g(Ar)-5 b(c)n(hitectur)n(al)34
b(Support)h(for)e(Pr)-6 b(o)o(gr)n(amming)34 b(Langua)o(g)o(es)4376
3250 y(and)h(Oper)n(ating)f(Systems)f(\(ASPLOS-VII\))p
Fb(,)i(Boston,)f(USA,)f(Oct.)h(1996.)4080 3416 y([20])76
b(M.)34 b(C.)f(Rinard)h(and)g(P)-15 b(.)33 b(C.)g(Diniz.)h(Commutati)m
(vity)g(analysis:)41 b(a)33 b(ne)m(w)4376 3565 y(analysis)g(technique)i
(for)f(parallelizing)g(compilers.)h Fa(A)l(CM)d(T)-7
b(r)n(ansactions)34 b(on)4376 3715 y(Pr)-6 b(o)o(gr)n(amming)34
b(Langua)o(g)o(es)h(and)f(Systems)f(\(T)n(OPLAS\))p Fb(,)h
(19\(6\):942\226991,)4376 3864 y(1997.)4080 4030 y([21])76
b(A.)34 b(Roth)f(and)h(G.)f(S.)h(Sohi.)g(Ef)m(fecti)m(v)n(e)f
(jump-pointer)j(prefetching)f(for)f(link)o(ed)4376 4180
y(data)g(structures.)g(In)f Fa(Pr)-6 b(oceedings)35 b(of)e(the)h(26th)g
(Annual)h(International)4376 4329 y(Symposium)f(on)h(Computer)e(Ar)-5
b(c)n(hitectur)g(e)p Fb(,)34 b(pages)f(111\226121,)k(May)c(1999.)4080
4495 y([22])76 b(M.)34 b(Sagi)m(v)-9 b(,)34 b(T)-10 b(.)34
b(Reps,)f(and)h(R.)f(W)-5 b(ilhelm.)34 b(Solving)g(shape-analysis)g
(problems)4376 4645 y(in)g(languages)g(with)g(destructi)m(v)n(e)f
(updating.)j Fa(A)l(CM)c(T)-7 b(r)n(ansactions)34 b(on)4376
4794 y(Pr)-6 b(o)o(gr)n(amming)34 b(Langua)o(g)o(es)h(and)f(Systems)p
Fb(,)f(20\(1\),)j(Jan.)d(1998.)4080 4960 y([23])76 b(M.)34
b(L.)f(Seidl)h(and)g(B.)f(G.)g(Zorn.)i(Se)n(gre)n(g)o(ating)g(heap)f
(objects)f(by)h(reference)4376 5110 y(beha)m(vior)i(and)e(lifetime.)f
(In)h Fa(Pr)-6 b(oceedings)34 b(of)g(the)f(eighth)i(international)4376
5259 y(confer)-5 b(ence)34 b(on)g(Ar)-5 b(c)n(hitectur)n(al)34
b(support)g(for)f(pr)-6 b(o)o(gr)n(amming)35 b(langua)o(g)o(es)g(and)
4376 5409 y(oper)n(ating)g(systems)p Fb(,)d(pages)i(12\22623.)h(A)-5
b(CM)33 b(Press,)g(1998.)4080 5575 y([24])76 b(B.)33
b(Steensg)o(aard.)i(Points-to)f(analysis)f(in)h(almost)f(linear)h
(time.)f(In)4376 5724 y Fa(Symposium)h(on)h(Principles)e(of)g(Pr)-6
b(o)o(gr)n(amming)35 b(Langua)o(g)o(es)p Fb(,)f(pages)g(32\22641,)4376
5873 y(January)h(1996.)4080 6040 y([25])76 b(M.)34 b(T)-11
b(ofte)34 b(and)g(L.)g(Birk)o(edal.)f(A)g(re)n(gion)i(inference)f
(algorithm.)h Fa(A)l(CM)4376 6189 y(T)-7 b(r)n(ansactions)34
b(on)g(Pr)-6 b(o)o(gr)n(amming)34 b(Langua)o(g)o(es)h(and)f(Systems)p
Fb(,)f(20\(1\),)i(1998.)4080 6355 y([26])76 b(M.)34 b(T)-11
b(ofte)34 b(and)g(J.-P)-15 b(.)34 b(T)-11 b(alpin.)34
b(Re)n(gion-based)h(memory)g(management.)4376 6504 y
Fa(Information)g(and)g(Computation)p Fb(,)g(pages)e
(132\(2\):109\226176,)39 b(Feb)-5 b(.)33 b(1997.)4080
6670 y([27])76 b(D.)34 b(N.)f(T)-5 b(ruong,)36 b(F)-11
b(.)33 b(Bodin,)i(and)f(A.)f(Seznec.)g(Impro)n(ving)k(cache)c(beha)m
(vior)i(of)4376 6820 y(dynamically)g(allocated)f(data)f(structures.)h
(In)g Fa(Pr)-6 b(oceedings)34 b(of)g(the)4376 6969 y(International)i
(Confer)-5 b(ence)33 b(on)h(P)-11 b(ar)n(allel)34 b(Ar)-5
b(c)n(hitectur)g(es)33 b(and)i(Compilation)4376 7119
y(T)-12 b(ec)n(hniques)34 b(\(P)-12 b(A)l(CT'98\))p Fb(,)35
b(pages)f(322\226329,)i(Oct.)d(1998.)4080 7285 y([28])76
b(D.)34 b(M.)f(T)-6 b(ullsen,)34 b(S.)f(J.)g(Eggers,)i(J.)e(S.)g(Emer)
-5 b(,)34 b(H.)f(M.)h(Le)m(vy)-9 b(,)34 b(J.)f(L.)h(Lo,)g(and)4376
7434 y(R.)f(L.)h(Stamm.)g(Exploiting)h(choice:)42 b(Instruction)34
b(fetch)g(and)g(issue)f(on)h(an)4376 7584 y(implementable)h
(simultaneous)f(multithreading)i(processor)-7 b(.)34
b(In)4376 7733 y Fa(Pr)-6 b(oceedings)34 b(of)g(the)g(23r)-5
b(d)34 b(Annual)h(International)g(Symposium)f(on)4376
7883 y(Computer)g(Ar)-5 b(c)n(hitectur)g(e)p Fb(,)33
b(pages)h(191\226202,)i(May)e(1996.)4080 8049 y([29])76
b(F)-11 b(.)34 b(V)-8 b(i)m(vien)33 b(and)h(M.)g(Rinard.)g
(Incrementalized)h(pointer)f(and)g(escape)4376 8198 y(analysis.)g(In)f
Fa(SIGPLAN)h(Confer)-5 b(ence)34 b(on)g(Pr)-6 b(o)o(gr)n(amming)34
b(Langua)o(g)o(e)4376 8348 y(Design)g(and)g(Implementation)p
Fb(,)h(pages)f(35\22646,)i(Sno)m(wbird,)e(UT)-10 b(,)34
b(June)g(2001.)4080 8514 y([30])76 b(R.)33 b(W)-5 b(ilhelm,)34
b(M.)g(Sagi)m(v)-9 b(,)34 b(and)g(T)-10 b(.)34 b(Reps.)f(Shape)h
(analysis.)f(In)h Fa(Pr)-6 b(oceedings)4376 8663 y(of)34
b(CC)e(2000:)43 b(9th)34 b(Int.)g(Conf)n(.)g(on)g(Compiler)f
(Construction)p Fb(,)h(Berlin,)g(Ger)-7 b(.,)4376 8812
y(Mar)m(-Apr)35 b(2000.)4080 8978 y([31])76 b(P)-15 b(.)34
b(R.)f(W)-5 b(ilson,)34 b(M.)f(S.)g(Lam,)h(and)g(T)-10
b(.)34 b(G.)f(Moher)-7 b(.)35 b(Ef)m(fecti)m(v)n(e)e
(\224static-graph\224)4376 9128 y(reor)n(g)o(anization)j(to)d(impro)n
(v)n(e)i(locality)f(in)f(g)o(arbage-collected)j(systems.)d(In)4376
9277 y Fa(Pr)-6 b(oceedings)34 b(of)g(the)g(confer)-5
b(ence)34 b(on)g(Pr)-6 b(o)o(gr)n(amming)34 b(langua)o(g)o(e)h(design)f
(and)4376 9427 y(implementation)p Fb(,)h(pages)f(177\226191.)i(A)-5
b(CM)33 b(Press,)f(1991.)4080 9593 y([32])76 b(Y)-17
b(.)33 b(Zhang)i(and)f(R.)f(Gupta.)h(Data)f(compression)i
(transformations)g(for)4376 9742 y(dynamically)g(allocated)e(data)g
(structures.)h(In)f Fa(International)i(Confer)-5 b(ence)33
b(on)4376 9892 y(Compiler)g(Construction)h(\(CC\))p Fb(,)f(Apr)h(2002.)
p eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
